{
	"id": "178b239627ae8e77160539da8208d4b2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/task2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\ncontract MyERC1155 is ERC1155 {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _nonFungibleTokenIds;\r\n\r\n    mapping(uint256 => string) private _tokenURIs;\r\n\r\n    constructor() ERC1155(\"https://ipfs.io/ipfs/{id}.json\") {}\r\n\r\n    function mintFungible(address account, uint256 id, uint256 amount) external {\r\n        _mint(account, id, amount, \"\");\r\n    }\r\n\r\n    function mintNonFungible(address account, string memory tokenURI) external returns (uint256) {\r\n        _nonFungibleTokenIds.increment();\r\n        uint256 newId = _nonFungibleTokenIds.current();\r\n        \r\n        _mint(account, newId, 1, \"\");\r\n        _setTokenURI(newId, tokenURI);\r\n\r\n        return newId;\r\n    }\r\n\r\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal {\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n    }\r\n\r\n    function uri(uint256 tokenId) public view override returns (string memory) {\r\n        return string(abi.encodePacked(super.uri(tokenId), _tokenURIs[tokenId]));\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220161cb8d468b5af20ebc91333f2582bae414cdb6c1676b5f229218e02d8fc657264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220161cb8d468b5af20ebc91333f2582bae414cdb6c1676b5f229218e02d8fc657264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND SHR 0xB8 0xD4 PUSH9 0xB5AF20EBC91333F258 0x2B 0xAE COINBASE 0x4C 0xDB PUSH13 0x1676B5F229218E02D8FC657264 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "276:4526:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220161cb8d468b5af20ebc91333f2582bae414cdb6c1676b5f229218e02d8fc657264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND SHR 0xB8 0xD4 PUSH9 0xB5AF20EBC91333F258 0x2B 0xAE COINBASE 0x4C 0xDB PUSH13 0x1676B5F229218E02D8FC657264 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "276:4526:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220161cb8d468b5af20ebc91333f2582bae414cdb6c1676b5f229218e02d8fc657264736f6c63430008160033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/task2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/task2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F SDIV PUSH27 0x7D9E6D8649F3568AB0E58F72080E771E988BF5580CBDB98AC588EC SHL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F SDIV PUSH27 0x7D9E6D8649F3568AB0E58F72080E771E988BF5580CBDB98AC588EC SHL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/task2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/task2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/task2.sol": {
				"MyERC1155": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintFungible",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "mintNonFungible",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/task2.sol\":177:1186  contract MyERC1155 is ERC1155 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/task2.sol\":364:422  constructor() ERC1155(\"https://ipfs.io/ipfs/{id}.json\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1e\n  dup2\n  mstore\n  0x20\n  add\n  0x68747470733a2f2f697066732e696f2f697066732f7b69647d2e6a736f6e0000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/task2.sol\":177:1186  contract MyERC1155 is ERC1155 {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_12:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_13:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_14:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_15:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_37:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_39\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":714:798   */\ntag_38:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_16:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_17:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_18:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_19:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_44\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_18\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1429:1468   */\n  tag_45\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_18\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_20:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_21:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_22:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n    /* \"#utility.yul\":1827:1851   */\n  tag_51\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_20\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1818:1852   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1800:1853   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_23:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_24:\n    /* \"#utility.yul\":2056:2095   */\n  tag_54\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_22\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2117:2208   */\n  tag_55\n    /* \"#utility.yul\":2166:2207   */\n  tag_56\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_23\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_19\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_25:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_26:\n    /* \"#utility.yul\":2377:2409   */\n  tag_59\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2418:2483   */\n  tag_60\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_24\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_27:\n    /* \"#utility.yul\":2555:2675   */\ntag_62:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_65\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_26\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_28:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_68\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_16\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2906:2935   */\n  tag_69\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_70:\n    /* \"#utility.yul\":3133:3213   */\n  tag_71\n    /* \"#utility.yul\":3189:3211   */\n  tag_72\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_17\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_67:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_29:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_30:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_75\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_29\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_31:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_77\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_30\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_11:\n    /* \"#utility.yul\":3950:3987   */\n  tag_79\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_81\n  tag_13\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4038:4094   */\ntag_80:\n    /* \"#utility.yul\":4118:4156   */\n  tag_82\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_15\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4203:4270   */\n  tag_83\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_28\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_86:\n    /* \"#utility.yul\":5144:5211   */\n  tag_87\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_31\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_84)\n    /* \"#utility.yul\":4365:4983   */\ntag_85:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_88\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_16\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_89:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_93\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_92:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_84:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/task2.sol\":177:1186  contract MyERC1155 is ERC1155 {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/task2.sol\":177:1186  contract MyERC1155 is ERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x58ea82e6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x07805a6b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/task2.sol\":563:878  function mintNonFungible(address account, string memory tokenURI) external returns (uint256) {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/task2.sol\":1017:1183  function uri(uint256 tokenId) public view override returns (string memory) {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/task2.sol\":430:555  function mintFungible(address account, uint256 id, uint256 amount) external {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_66\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_67\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/task2.sol\":563:878  function mintNonFungible(address account, string memory tokenURI) external returns (uint256) {... */\n    tag_29:\n        /* \"contracts/task2.sol\":647:654  uint256 */\n      0x00\n        /* \"contracts/task2.sol\":667:699  _nonFungibleTokenIds.increment() */\n      tag_71\n        /* \"contracts/task2.sol\":667:687  _nonFungibleTokenIds */\n      0x03\n        /* \"contracts/task2.sol\":667:697  _nonFungibleTokenIds.increment */\n      tag_72\n        /* \"contracts/task2.sol\":667:699  _nonFungibleTokenIds.increment() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/task2.sol\":710:723  uint256 newId */\n      0x00\n        /* \"contracts/task2.sol\":726:756  _nonFungibleTokenIds.current() */\n      tag_73\n        /* \"contracts/task2.sol\":726:746  _nonFungibleTokenIds */\n      0x03\n        /* \"contracts/task2.sol\":726:754  _nonFungibleTokenIds.current */\n      tag_74\n        /* \"contracts/task2.sol\":726:756  _nonFungibleTokenIds.current() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/task2.sol\":710:756  uint256 newId = _nonFungibleTokenIds.current() */\n      swap1\n      pop\n        /* \"contracts/task2.sol\":777:805  _mint(account, newId, 1, \"\") */\n      tag_75\n        /* \"contracts/task2.sol\":783:790  account */\n      dup5\n        /* \"contracts/task2.sol\":792:797  newId */\n      dup3\n        /* \"contracts/task2.sol\":799:800  1 */\n      0x01\n        /* \"contracts/task2.sol\":777:805  _mint(account, newId, 1, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/task2.sol\":777:782  _mint */\n      tag_76\n        /* \"contracts/task2.sol\":777:805  _mint(account, newId, 1, \"\") */\n      jump\t// in\n    tag_75:\n        /* \"contracts/task2.sol\":816:845  _setTokenURI(newId, tokenURI) */\n      tag_77\n        /* \"contracts/task2.sol\":829:834  newId */\n      dup2\n        /* \"contracts/task2.sol\":836:844  tokenURI */\n      dup5\n        /* \"contracts/task2.sol\":816:828  _setTokenURI */\n      tag_78\n        /* \"contracts/task2.sol\":816:845  _setTokenURI(newId, tokenURI) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/task2.sol\":865:870  newId */\n      dup1\n        /* \"contracts/task2.sol\":858:870  return newId */\n      swap2\n      pop\n      pop\n        /* \"contracts/task2.sol\":563:878  function mintNonFungible(address account, string memory tokenURI) external returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/task2.sol\":1017:1183  function uri(uint256 tokenId) public view override returns (string memory) {... */\n    tag_34:\n        /* \"contracts/task2.sol\":1077:1090  string memory */\n      0x60\n        /* \"contracts/task2.sol\":1134:1152  super.uri(tokenId) */\n      tag_80\n        /* \"contracts/task2.sol\":1144:1151  tokenId */\n      dup3\n        /* \"contracts/task2.sol\":1134:1143  super.uri */\n      tag_81\n        /* \"contracts/task2.sol\":1134:1152  super.uri(tokenId) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/task2.sol\":1154:1164  _tokenURIs */\n      0x04\n        /* \"contracts/task2.sol\":1154:1173  _tokenURIs[tokenId] */\n      0x00\n        /* \"contracts/task2.sol\":1165:1172  tokenId */\n      dup5\n        /* \"contracts/task2.sol\":1154:1173  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/task2.sol\":1117:1174  abi.encodePacked(super.uri(tokenId), _tokenURIs[tokenId]) */\n      add(0x20, mload(0x40))\n      tag_82\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/task2.sol\":1103:1175  return string(abi.encodePacked(super.uri(tokenId), _tokenURIs[tokenId])) */\n      swap1\n      pop\n        /* \"contracts/task2.sol\":1017:1183  function uri(uint256 tokenId) public view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_87\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_98\n      jumpi\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n    tag_98:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_101:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_107\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_17\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n    tag_110:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_102)\n    tag_103:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/task2.sol\":430:555  function mintFungible(address account, uint256 id, uint256 amount) external {... */\n    tag_50:\n        /* \"contracts/task2.sol\":517:547  _mint(account, id, amount, \"\") */\n      tag_114\n        /* \"contracts/task2.sol\":523:530  account */\n      dup4\n        /* \"contracts/task2.sol\":532:534  id */\n      dup4\n        /* \"contracts/task2.sol\":536:542  amount */\n      dup4\n        /* \"contracts/task2.sol\":517:547  _mint(account, id, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/task2.sol\":517:522  _mint */\n      tag_76\n        /* \"contracts/task2.sol\":517:547  _mint(account, id, amount, \"\") */\n      jump\t// in\n    tag_114:\n        /* \"contracts/task2.sol\":430:555  function mintFungible(address account, uint256 id, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/task2.sol\":886:1009  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal {... */\n    tag_78:\n        /* \"contracts/task2.sol\":992:1001  _tokenURI */\n      dup1\n        /* \"contracts/task2.sol\":970:980  _tokenURIs */\n      0x04\n        /* \"contracts/task2.sol\":970:989  _tokenURIs[tokenId] */\n      0x00\n        /* \"contracts/task2.sol\":981:988  tokenId */\n      dup5\n        /* \"contracts/task2.sol\":970:989  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/task2.sol\":970:1001  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      pop\n        /* \"contracts/task2.sol\":886:1009  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_144\n      jump\t// in\n    tag_145:\n      dup1\n      iszero\n      tag_146\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_147\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_146)\n    tag_147:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_148:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_148\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_180)\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_187)\n    tag_188:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_109\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_202\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_203)\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_210\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      0x01\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_213\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_218\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_217)\n    tag_218:\n      0x60\n      swap2\n      pop\n    tag_217:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_230:\n      0x01\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_231\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_236\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_235)\n    tag_236:\n      0x60\n      swap2\n      pop\n    tag_235:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_243:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_244:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_245:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_246:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_247:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_322\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_246\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_248:\n        /* \"#utility.yul\":641:665   */\n      tag_324\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_247\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_325:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_249:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_327\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_248\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_250:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_251:\n        /* \"#utility.yul\":997:1021   */\n      tag_330\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_250\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_331:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_252:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_333\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_251\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_16:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_336\n      tag_244\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1290:1409   */\n    tag_335:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_337\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_249\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_338\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_252\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_253:\n        /* \"#utility.yul\":1764:1788   */\n      tag_340\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_250\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_19:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_342\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_253\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_254:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_255:\n        /* \"#utility.yul\":2256:2279   */\n      tag_345\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_254\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_346:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_256:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_348\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_255\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_22:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_351\n      tag_244\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2528:2647   */\n    tag_350:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_352\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_256\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_257:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_258:\n        /* \"#utility.yul\":2963:2984   */\n      tag_355\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_257\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_25:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_357\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_258\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3330   */\n    tag_259:\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3319:3320   */\n      dup1\n        /* \"#utility.yul\":3312:3324   */\n      revert\n        /* \"#utility.yul\":3336:3453   */\n    tag_260:\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3459:3561   */\n    tag_261:\n        /* \"#utility.yul\":3500:3506   */\n      0x00\n        /* \"#utility.yul\":3551:3553   */\n      0x1f\n        /* \"#utility.yul\":3547:3554   */\n      not\n        /* \"#utility.yul\":3542:3544   */\n      0x1f\n        /* \"#utility.yul\":3535:3540   */\n      dup4\n        /* \"#utility.yul\":3531:3545   */\n      add\n        /* \"#utility.yul\":3527:3555   */\n      and\n        /* \"#utility.yul\":3517:3555   */\n      swap1\n      pop\n        /* \"#utility.yul\":3459:3561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3747   */\n    tag_100:\n        /* \"#utility.yul\":3615:3692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3612:3613   */\n      0x00\n        /* \"#utility.yul\":3605:3693   */\n      mstore\n        /* \"#utility.yul\":3712:3716   */\n      0x41\n        /* \"#utility.yul\":3709:3710   */\n      0x04\n        /* \"#utility.yul\":3702:3717   */\n      mstore\n        /* \"#utility.yul\":3736:3740   */\n      0x24\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3741   */\n      revert\n        /* \"#utility.yul\":3753:4034   */\n    tag_262:\n        /* \"#utility.yul\":3836:3863   */\n      tag_363\n        /* \"#utility.yul\":3858:3862   */\n      dup3\n        /* \"#utility.yul\":3836:3863   */\n      tag_261\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3828:3834   */\n      dup2\n        /* \"#utility.yul\":3824:3864   */\n      add\n        /* \"#utility.yul\":3966:3972   */\n      dup2\n        /* \"#utility.yul\":3954:3964   */\n      dup2\n        /* \"#utility.yul\":3951:3973   */\n      lt\n        /* \"#utility.yul\":3930:3948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3918:3928   */\n      dup3\n        /* \"#utility.yul\":3915:3949   */\n      gt\n        /* \"#utility.yul\":3912:3974   */\n      or\n        /* \"#utility.yul\":3909:3997   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":3977:3995   */\n      tag_365\n      tag_100\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3909:3997   */\n    tag_364:\n        /* \"#utility.yul\":4017:4027   */\n      dup1\n        /* \"#utility.yul\":4013:4015   */\n      0x40\n        /* \"#utility.yul\":4006:4028   */\n      mstore\n        /* \"#utility.yul\":3796:4034   */\n      pop\n        /* \"#utility.yul\":3753:4034   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4040:4169   */\n    tag_263:\n        /* \"#utility.yul\":4074:4080   */\n      0x00\n        /* \"#utility.yul\":4101:4121   */\n      tag_367\n      tag_243\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4091:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":4130:4163   */\n      tag_368\n        /* \"#utility.yul\":4158:4162   */\n      dup3\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4130:4163   */\n      tag_262\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4040:4169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4483   */\n    tag_264:\n        /* \"#utility.yul\":4237:4241   */\n      0x00\n        /* \"#utility.yul\":4327:4345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4316:4346   */\n      gt\n        /* \"#utility.yul\":4313:4369   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4349:4367   */\n      tag_371\n      tag_100\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4313:4369   */\n    tag_370:\n        /* \"#utility.yul\":4387:4416   */\n      tag_372\n        /* \"#utility.yul\":4409:4415   */\n      dup3\n        /* \"#utility.yul\":4387:4416   */\n      tag_261\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4379:4416   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4465:4469   */\n      dup2\n        /* \"#utility.yul\":4461:4476   */\n      add\n        /* \"#utility.yul\":4453:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4489:4635   */\n    tag_265:\n        /* \"#utility.yul\":4586:4592   */\n      dup3\n        /* \"#utility.yul\":4581:4584   */\n      dup2\n        /* \"#utility.yul\":4576:4579   */\n      dup4\n        /* \"#utility.yul\":4563:4593   */\n      calldatacopy\n        /* \"#utility.yul\":4627:4628   */\n      0x00\n        /* \"#utility.yul\":4618:4624   */\n      dup4\n        /* \"#utility.yul\":4613:4616   */\n      dup4\n        /* \"#utility.yul\":4609:4625   */\n      add\n        /* \"#utility.yul\":4602:4629   */\n      mstore\n        /* \"#utility.yul\":4489:4635   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4641:5066   */\n    tag_266:\n        /* \"#utility.yul\":4719:4724   */\n      0x00\n        /* \"#utility.yul\":4744:4810   */\n      tag_375\n        /* \"#utility.yul\":4760:4809   */\n      tag_376\n        /* \"#utility.yul\":4802:4808   */\n      dup5\n        /* \"#utility.yul\":4760:4809   */\n      tag_264\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4744:4810   */\n      tag_263\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4735:4810   */\n      swap1\n      pop\n        /* \"#utility.yul\":4833:4839   */\n      dup3\n        /* \"#utility.yul\":4826:4831   */\n      dup2\n        /* \"#utility.yul\":4819:4840   */\n      mstore\n        /* \"#utility.yul\":4871:4875   */\n      0x20\n        /* \"#utility.yul\":4864:4869   */\n      dup2\n        /* \"#utility.yul\":4860:4876   */\n      add\n        /* \"#utility.yul\":4909:4912   */\n      dup5\n        /* \"#utility.yul\":4900:4906   */\n      dup5\n        /* \"#utility.yul\":4895:4898   */\n      dup5\n        /* \"#utility.yul\":4891:4907   */\n      add\n        /* \"#utility.yul\":4888:4913   */\n      gt\n        /* \"#utility.yul\":4885:4997   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":4916:4995   */\n      tag_378\n      tag_260\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4885:4997   */\n    tag_377:\n        /* \"#utility.yul\":5006:5060   */\n      tag_379\n        /* \"#utility.yul\":5053:5059   */\n      dup5\n        /* \"#utility.yul\":5048:5051   */\n      dup3\n        /* \"#utility.yul\":5043:5046   */\n      dup6\n        /* \"#utility.yul\":5006:5060   */\n      tag_265\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4725:5066   */\n      pop\n        /* \"#utility.yul\":4641:5066   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5086:5426   */\n    tag_267:\n        /* \"#utility.yul\":5142:5147   */\n      0x00\n        /* \"#utility.yul\":5191:5194   */\n      dup3\n        /* \"#utility.yul\":5184:5188   */\n      0x1f\n        /* \"#utility.yul\":5176:5182   */\n      dup4\n        /* \"#utility.yul\":5172:5189   */\n      add\n        /* \"#utility.yul\":5168:5195   */\n      slt\n        /* \"#utility.yul\":5158:5280   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":5199:5278   */\n      tag_382\n      tag_259\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5158:5280   */\n    tag_381:\n        /* \"#utility.yul\":5316:5322   */\n      dup2\n        /* \"#utility.yul\":5303:5323   */\n      calldataload\n        /* \"#utility.yul\":5341:5420   */\n      tag_383\n        /* \"#utility.yul\":5416:5419   */\n      dup5\n        /* \"#utility.yul\":5408:5414   */\n      dup3\n        /* \"#utility.yul\":5401:5405   */\n      0x20\n        /* \"#utility.yul\":5393:5399   */\n      dup7\n        /* \"#utility.yul\":5389:5406   */\n      add\n        /* \"#utility.yul\":5341:5420   */\n      tag_266\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5332:5420   */\n      swap2\n      pop\n        /* \"#utility.yul\":5148:5426   */\n      pop\n        /* \"#utility.yul\":5086:5426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5432:6086   */\n    tag_28:\n        /* \"#utility.yul\":5510:5516   */\n      0x00\n        /* \"#utility.yul\":5518:5524   */\n      dup1\n        /* \"#utility.yul\":5567:5569   */\n      0x40\n        /* \"#utility.yul\":5555:5564   */\n      dup4\n        /* \"#utility.yul\":5546:5553   */\n      dup6\n        /* \"#utility.yul\":5542:5565   */\n      sub\n        /* \"#utility.yul\":5538:5570   */\n      slt\n        /* \"#utility.yul\":5535:5654   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":5573:5652   */\n      tag_386\n      tag_244\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5535:5654   */\n    tag_385:\n        /* \"#utility.yul\":5693:5694   */\n      0x00\n        /* \"#utility.yul\":5718:5771   */\n      tag_387\n        /* \"#utility.yul\":5763:5770   */\n      dup6\n        /* \"#utility.yul\":5754:5760   */\n      dup3\n        /* \"#utility.yul\":5743:5752   */\n      dup7\n        /* \"#utility.yul\":5739:5761   */\n      add\n        /* \"#utility.yul\":5718:5771   */\n      tag_249\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5708:5771   */\n      swap3\n      pop\n        /* \"#utility.yul\":5664:5781   */\n      pop\n        /* \"#utility.yul\":5848:5850   */\n      0x20\n        /* \"#utility.yul\":5837:5846   */\n      dup4\n        /* \"#utility.yul\":5833:5851   */\n      add\n        /* \"#utility.yul\":5820:5852   */\n      calldataload\n        /* \"#utility.yul\":5879:5897   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5871:5877   */\n      dup2\n        /* \"#utility.yul\":5868:5898   */\n      gt\n        /* \"#utility.yul\":5865:5982   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":5901:5980   */\n      tag_389\n      tag_245\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5865:5982   */\n    tag_388:\n        /* \"#utility.yul\":6006:6069   */\n      tag_390\n        /* \"#utility.yul\":6061:6068   */\n      dup6\n        /* \"#utility.yul\":6052:6058   */\n      dup3\n        /* \"#utility.yul\":6041:6050   */\n      dup7\n        /* \"#utility.yul\":6037:6059   */\n      add\n        /* \"#utility.yul\":6006:6069   */\n      tag_267\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5996:6069   */\n      swap2\n      pop\n        /* \"#utility.yul\":5791:6079   */\n      pop\n        /* \"#utility.yul\":5432:6086   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6092:6421   */\n    tag_33:\n        /* \"#utility.yul\":6151:6157   */\n      0x00\n        /* \"#utility.yul\":6200:6202   */\n      0x20\n        /* \"#utility.yul\":6188:6197   */\n      dup3\n        /* \"#utility.yul\":6179:6186   */\n      dup5\n        /* \"#utility.yul\":6175:6198   */\n      sub\n        /* \"#utility.yul\":6171:6203   */\n      slt\n        /* \"#utility.yul\":6168:6287   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":6206:6285   */\n      tag_393\n      tag_244\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6168:6287   */\n    tag_392:\n        /* \"#utility.yul\":6326:6327   */\n      0x00\n        /* \"#utility.yul\":6351:6404   */\n      tag_394\n        /* \"#utility.yul\":6396:6403   */\n      dup5\n        /* \"#utility.yul\":6387:6393   */\n      dup3\n        /* \"#utility.yul\":6376:6385   */\n      dup6\n        /* \"#utility.yul\":6372:6394   */\n      add\n        /* \"#utility.yul\":6351:6404   */\n      tag_252\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6341:6404   */\n      swap2\n      pop\n        /* \"#utility.yul\":6297:6414   */\n      pop\n        /* \"#utility.yul\":6092:6421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6427:6526   */\n    tag_268:\n        /* \"#utility.yul\":6479:6485   */\n      0x00\n        /* \"#utility.yul\":6513:6518   */\n      dup2\n        /* \"#utility.yul\":6507:6519   */\n      mload\n        /* \"#utility.yul\":6497:6519   */\n      swap1\n      pop\n        /* \"#utility.yul\":6427:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6701   */\n    tag_269:\n        /* \"#utility.yul\":6616:6627   */\n      0x00\n        /* \"#utility.yul\":6650:6656   */\n      dup3\n        /* \"#utility.yul\":6645:6648   */\n      dup3\n        /* \"#utility.yul\":6638:6657   */\n      mstore\n        /* \"#utility.yul\":6690:6694   */\n      0x20\n        /* \"#utility.yul\":6685:6688   */\n      dup3\n        /* \"#utility.yul\":6681:6695   */\n      add\n        /* \"#utility.yul\":6666:6695   */\n      swap1\n      pop\n        /* \"#utility.yul\":6532:6701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6707:6953   */\n    tag_270:\n        /* \"#utility.yul\":6788:6789   */\n      0x00\n        /* \"#utility.yul\":6798:6911   */\n    tag_398:\n        /* \"#utility.yul\":6812:6818   */\n      dup4\n        /* \"#utility.yul\":6809:6810   */\n      dup2\n        /* \"#utility.yul\":6806:6819   */\n      lt\n        /* \"#utility.yul\":6798:6911   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":6897:6898   */\n      dup1\n        /* \"#utility.yul\":6892:6895   */\n      dup3\n        /* \"#utility.yul\":6888:6899   */\n      add\n        /* \"#utility.yul\":6882:6900   */\n      mload\n        /* \"#utility.yul\":6878:6879   */\n      dup2\n        /* \"#utility.yul\":6873:6876   */\n      dup5\n        /* \"#utility.yul\":6869:6880   */\n      add\n        /* \"#utility.yul\":6862:6901   */\n      mstore\n        /* \"#utility.yul\":6834:6836   */\n      0x20\n        /* \"#utility.yul\":6831:6832   */\n      dup2\n        /* \"#utility.yul\":6827:6837   */\n      add\n        /* \"#utility.yul\":6822:6837   */\n      swap1\n      pop\n        /* \"#utility.yul\":6798:6911   */\n      jump(tag_398)\n    tag_400:\n        /* \"#utility.yul\":6945:6946   */\n      0x00\n        /* \"#utility.yul\":6936:6942   */\n      dup5\n        /* \"#utility.yul\":6931:6934   */\n      dup5\n        /* \"#utility.yul\":6927:6943   */\n      add\n        /* \"#utility.yul\":6920:6947   */\n      mstore\n        /* \"#utility.yul\":6769:6953   */\n      pop\n        /* \"#utility.yul\":6707:6953   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6959:7336   */\n    tag_271:\n        /* \"#utility.yul\":7047:7050   */\n      0x00\n        /* \"#utility.yul\":7075:7114   */\n      tag_402\n        /* \"#utility.yul\":7108:7113   */\n      dup3\n        /* \"#utility.yul\":7075:7114   */\n      tag_268\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7130:7201   */\n      tag_403\n        /* \"#utility.yul\":7194:7200   */\n      dup2\n        /* \"#utility.yul\":7189:7192   */\n      dup6\n        /* \"#utility.yul\":7130:7201   */\n      tag_269\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7123:7201   */\n      swap4\n      pop\n        /* \"#utility.yul\":7210:7275   */\n      tag_404\n        /* \"#utility.yul\":7268:7274   */\n      dup2\n        /* \"#utility.yul\":7263:7266   */\n      dup6\n        /* \"#utility.yul\":7256:7260   */\n      0x20\n        /* \"#utility.yul\":7249:7254   */\n      dup7\n        /* \"#utility.yul\":7245:7261   */\n      add\n        /* \"#utility.yul\":7210:7275   */\n      tag_270\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7300:7329   */\n      tag_405\n        /* \"#utility.yul\":7322:7328   */\n      dup2\n        /* \"#utility.yul\":7300:7329   */\n      tag_261\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7295:7298   */\n      dup5\n        /* \"#utility.yul\":7291:7330   */\n      add\n        /* \"#utility.yul\":7284:7330   */\n      swap2\n      pop\n        /* \"#utility.yul\":7051:7336   */\n      pop\n        /* \"#utility.yul\":6959:7336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7342:7655   */\n    tag_36:\n        /* \"#utility.yul\":7455:7459   */\n      0x00\n        /* \"#utility.yul\":7493:7495   */\n      0x20\n        /* \"#utility.yul\":7482:7491   */\n      dup3\n        /* \"#utility.yul\":7478:7496   */\n      add\n        /* \"#utility.yul\":7470:7496   */\n      swap1\n      pop\n        /* \"#utility.yul\":7542:7551   */\n      dup2\n        /* \"#utility.yul\":7536:7540   */\n      dup2\n        /* \"#utility.yul\":7532:7552   */\n      sub\n        /* \"#utility.yul\":7528:7529   */\n      0x00\n        /* \"#utility.yul\":7517:7526   */\n      dup4\n        /* \"#utility.yul\":7513:7530   */\n      add\n        /* \"#utility.yul\":7506:7553   */\n      mstore\n        /* \"#utility.yul\":7570:7648   */\n      tag_407\n        /* \"#utility.yul\":7643:7647   */\n      dup2\n        /* \"#utility.yul\":7634:7640   */\n      dup5\n        /* \"#utility.yul\":7570:7648   */\n      tag_271\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7562:7648   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7661:7972   */\n    tag_272:\n        /* \"#utility.yul\":7738:7742   */\n      0x00\n        /* \"#utility.yul\":7828:7846   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7820:7826   */\n      dup3\n        /* \"#utility.yul\":7817:7847   */\n      gt\n        /* \"#utility.yul\":7814:7870   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":7850:7868   */\n      tag_410\n      tag_100\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7814:7870   */\n    tag_409:\n        /* \"#utility.yul\":7900:7904   */\n      0x20\n        /* \"#utility.yul\":7892:7898   */\n      dup3\n        /* \"#utility.yul\":7888:7905   */\n      mul\n        /* \"#utility.yul\":7880:7905   */\n      swap1\n      pop\n        /* \"#utility.yul\":7960:7964   */\n      0x20\n        /* \"#utility.yul\":7954:7958   */\n      dup2\n        /* \"#utility.yul\":7950:7965   */\n      add\n        /* \"#utility.yul\":7942:7965   */\n      swap1\n      pop\n        /* \"#utility.yul\":7661:7972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7978:8095   */\n    tag_273:\n        /* \"#utility.yul\":8087:8088   */\n      0x00\n        /* \"#utility.yul\":8084:8085   */\n      dup1\n        /* \"#utility.yul\":8077:8089   */\n      revert\n        /* \"#utility.yul\":8118:8828   */\n    tag_274:\n        /* \"#utility.yul\":8214:8219   */\n      0x00\n        /* \"#utility.yul\":8239:8320   */\n      tag_413\n        /* \"#utility.yul\":8255:8319   */\n      tag_414\n        /* \"#utility.yul\":8312:8318   */\n      dup5\n        /* \"#utility.yul\":8255:8319   */\n      tag_272\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8239:8320   */\n      tag_263\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8230:8320   */\n      swap1\n      pop\n        /* \"#utility.yul\":8340:8345   */\n      dup1\n        /* \"#utility.yul\":8369:8375   */\n      dup4\n        /* \"#utility.yul\":8362:8367   */\n      dup3\n        /* \"#utility.yul\":8355:8376   */\n      mstore\n        /* \"#utility.yul\":8403:8407   */\n      0x20\n        /* \"#utility.yul\":8396:8401   */\n      dup3\n        /* \"#utility.yul\":8392:8408   */\n      add\n        /* \"#utility.yul\":8385:8408   */\n      swap1\n      pop\n        /* \"#utility.yul\":8456:8460   */\n      0x20\n        /* \"#utility.yul\":8448:8454   */\n      dup5\n        /* \"#utility.yul\":8444:8461   */\n      mul\n        /* \"#utility.yul\":8436:8442   */\n      dup4\n        /* \"#utility.yul\":8432:8462   */\n      add\n        /* \"#utility.yul\":8485:8488   */\n      dup6\n        /* \"#utility.yul\":8477:8483   */\n      dup2\n        /* \"#utility.yul\":8474:8489   */\n      gt\n        /* \"#utility.yul\":8471:8593   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":8504:8583   */\n      tag_416\n      tag_273\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8471:8593   */\n    tag_415:\n        /* \"#utility.yul\":8619:8625   */\n      dup4\n        /* \"#utility.yul\":8602:8822   */\n    tag_417:\n        /* \"#utility.yul\":8636:8642   */\n      dup2\n        /* \"#utility.yul\":8631:8634   */\n      dup2\n        /* \"#utility.yul\":8628:8643   */\n      lt\n        /* \"#utility.yul\":8602:8822   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":8711:8714   */\n      dup1\n        /* \"#utility.yul\":8740:8777   */\n      tag_420\n        /* \"#utility.yul\":8773:8776   */\n      dup9\n        /* \"#utility.yul\":8761:8771   */\n      dup3\n        /* \"#utility.yul\":8740:8777   */\n      tag_252\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8735:8738   */\n      dup5\n        /* \"#utility.yul\":8728:8778   */\n      mstore\n        /* \"#utility.yul\":8807:8811   */\n      0x20\n        /* \"#utility.yul\":8802:8805   */\n      dup5\n        /* \"#utility.yul\":8798:8812   */\n      add\n        /* \"#utility.yul\":8791:8812   */\n      swap4\n      pop\n        /* \"#utility.yul\":8678:8822   */\n      pop\n        /* \"#utility.yul\":8662:8666   */\n      0x20\n        /* \"#utility.yul\":8657:8660   */\n      dup2\n        /* \"#utility.yul\":8653:8667   */\n      add\n        /* \"#utility.yul\":8646:8667   */\n      swap1\n      pop\n        /* \"#utility.yul\":8602:8822   */\n      jump(tag_417)\n    tag_419:\n        /* \"#utility.yul\":8606:8627   */\n      pop\n        /* \"#utility.yul\":8220:8828   */\n      pop\n      pop\n        /* \"#utility.yul\":8118:8828   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8851:9221   */\n    tag_275:\n        /* \"#utility.yul\":8922:8927   */\n      0x00\n        /* \"#utility.yul\":8971:8974   */\n      dup3\n        /* \"#utility.yul\":8964:8968   */\n      0x1f\n        /* \"#utility.yul\":8956:8962   */\n      dup4\n        /* \"#utility.yul\":8952:8969   */\n      add\n        /* \"#utility.yul\":8948:8975   */\n      slt\n        /* \"#utility.yul\":8938:9060   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":8979:9058   */\n      tag_423\n      tag_259\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8938:9060   */\n    tag_422:\n        /* \"#utility.yul\":9096:9102   */\n      dup2\n        /* \"#utility.yul\":9083:9103   */\n      calldataload\n        /* \"#utility.yul\":9121:9215   */\n      tag_424\n        /* \"#utility.yul\":9211:9214   */\n      dup5\n        /* \"#utility.yul\":9203:9209   */\n      dup3\n        /* \"#utility.yul\":9196:9200   */\n      0x20\n        /* \"#utility.yul\":9188:9194   */\n      dup7\n        /* \"#utility.yul\":9184:9201   */\n      add\n        /* \"#utility.yul\":9121:9215   */\n      tag_274\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9112:9215   */\n      swap2\n      pop\n        /* \"#utility.yul\":8928:9221   */\n      pop\n        /* \"#utility.yul\":8851:9221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9227:9534   */\n    tag_276:\n        /* \"#utility.yul\":9288:9292   */\n      0x00\n        /* \"#utility.yul\":9378:9396   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9370:9376   */\n      dup3\n        /* \"#utility.yul\":9367:9397   */\n      gt\n        /* \"#utility.yul\":9364:9420   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":9400:9418   */\n      tag_427\n      tag_100\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9364:9420   */\n    tag_426:\n        /* \"#utility.yul\":9438:9467   */\n      tag_428\n        /* \"#utility.yul\":9460:9466   */\n      dup3\n        /* \"#utility.yul\":9438:9467   */\n      tag_261\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9430:9467   */\n      swap1\n      pop\n        /* \"#utility.yul\":9522:9526   */\n      0x20\n        /* \"#utility.yul\":9516:9520   */\n      dup2\n        /* \"#utility.yul\":9512:9527   */\n      add\n        /* \"#utility.yul\":9504:9527   */\n      swap1\n      pop\n        /* \"#utility.yul\":9227:9534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9540:9963   */\n    tag_277:\n        /* \"#utility.yul\":9617:9622   */\n      0x00\n        /* \"#utility.yul\":9642:9707   */\n      tag_430\n        /* \"#utility.yul\":9658:9706   */\n      tag_431\n        /* \"#utility.yul\":9699:9705   */\n      dup5\n        /* \"#utility.yul\":9658:9706   */\n      tag_276\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9642:9707   */\n      tag_263\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9633:9707   */\n      swap1\n      pop\n        /* \"#utility.yul\":9730:9736   */\n      dup3\n        /* \"#utility.yul\":9723:9728   */\n      dup2\n        /* \"#utility.yul\":9716:9737   */\n      mstore\n        /* \"#utility.yul\":9768:9772   */\n      0x20\n        /* \"#utility.yul\":9761:9766   */\n      dup2\n        /* \"#utility.yul\":9757:9773   */\n      add\n        /* \"#utility.yul\":9806:9809   */\n      dup5\n        /* \"#utility.yul\":9797:9803   */\n      dup5\n        /* \"#utility.yul\":9792:9795   */\n      dup5\n        /* \"#utility.yul\":9788:9804   */\n      add\n        /* \"#utility.yul\":9785:9810   */\n      gt\n        /* \"#utility.yul\":9782:9894   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":9813:9892   */\n      tag_433\n      tag_260\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9782:9894   */\n    tag_432:\n        /* \"#utility.yul\":9903:9957   */\n      tag_434\n        /* \"#utility.yul\":9950:9956   */\n      dup5\n        /* \"#utility.yul\":9945:9948   */\n      dup3\n        /* \"#utility.yul\":9940:9943   */\n      dup6\n        /* \"#utility.yul\":9903:9957   */\n      tag_265\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9623:9963   */\n      pop\n        /* \"#utility.yul\":9540:9963   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9982:10320   */\n    tag_278:\n        /* \"#utility.yul\":10037:10042   */\n      0x00\n        /* \"#utility.yul\":10086:10089   */\n      dup3\n        /* \"#utility.yul\":10079:10083   */\n      0x1f\n        /* \"#utility.yul\":10071:10077   */\n      dup4\n        /* \"#utility.yul\":10067:10084   */\n      add\n        /* \"#utility.yul\":10063:10090   */\n      slt\n        /* \"#utility.yul\":10053:10175   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":10094:10173   */\n      tag_437\n      tag_259\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10053:10175   */\n    tag_436:\n        /* \"#utility.yul\":10211:10217   */\n      dup2\n        /* \"#utility.yul\":10198:10218   */\n      calldataload\n        /* \"#utility.yul\":10236:10314   */\n      tag_438\n        /* \"#utility.yul\":10310:10313   */\n      dup5\n        /* \"#utility.yul\":10302:10308   */\n      dup3\n        /* \"#utility.yul\":10295:10299   */\n      0x20\n        /* \"#utility.yul\":10287:10293   */\n      dup7\n        /* \"#utility.yul\":10283:10300   */\n      add\n        /* \"#utility.yul\":10236:10314   */\n      tag_277\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10227:10314   */\n      swap2\n      pop\n        /* \"#utility.yul\":10043:10320   */\n      pop\n        /* \"#utility.yul\":9982:10320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10326:11835   */\n    tag_39:\n        /* \"#utility.yul\":10480:10486   */\n      0x00\n        /* \"#utility.yul\":10488:10494   */\n      dup1\n        /* \"#utility.yul\":10496:10502   */\n      0x00\n        /* \"#utility.yul\":10504:10510   */\n      dup1\n        /* \"#utility.yul\":10512:10518   */\n      0x00\n        /* \"#utility.yul\":10561:10564   */\n      0xa0\n        /* \"#utility.yul\":10549:10558   */\n      dup7\n        /* \"#utility.yul\":10540:10547   */\n      dup9\n        /* \"#utility.yul\":10536:10559   */\n      sub\n        /* \"#utility.yul\":10532:10565   */\n      slt\n        /* \"#utility.yul\":10529:10649   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10568:10647   */\n      tag_441\n      tag_244\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10529:10649   */\n    tag_440:\n        /* \"#utility.yul\":10688:10689   */\n      0x00\n        /* \"#utility.yul\":10713:10766   */\n      tag_442\n        /* \"#utility.yul\":10758:10765   */\n      dup9\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10738:10747   */\n      dup10\n        /* \"#utility.yul\":10734:10756   */\n      add\n        /* \"#utility.yul\":10713:10766   */\n      tag_249\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10703:10766   */\n      swap6\n      pop\n        /* \"#utility.yul\":10659:10776   */\n      pop\n        /* \"#utility.yul\":10815:10817   */\n      0x20\n        /* \"#utility.yul\":10841:10894   */\n      tag_443\n        /* \"#utility.yul\":10886:10893   */\n      dup9\n        /* \"#utility.yul\":10877:10883   */\n      dup3\n        /* \"#utility.yul\":10866:10875   */\n      dup10\n        /* \"#utility.yul\":10862:10884   */\n      add\n        /* \"#utility.yul\":10841:10894   */\n      tag_249\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10831:10894   */\n      swap5\n      pop\n        /* \"#utility.yul\":10786:10904   */\n      pop\n        /* \"#utility.yul\":10971:10973   */\n      0x40\n        /* \"#utility.yul\":10960:10969   */\n      dup7\n        /* \"#utility.yul\":10956:10974   */\n      add\n        /* \"#utility.yul\":10943:10975   */\n      calldataload\n        /* \"#utility.yul\":11002:11020   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10994:11000   */\n      dup2\n        /* \"#utility.yul\":10991:11021   */\n      gt\n        /* \"#utility.yul\":10988:11105   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":11024:11103   */\n      tag_445\n      tag_245\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10988:11105   */\n    tag_444:\n        /* \"#utility.yul\":11129:11207   */\n      tag_446\n        /* \"#utility.yul\":11199:11206   */\n      dup9\n        /* \"#utility.yul\":11190:11196   */\n      dup3\n        /* \"#utility.yul\":11179:11188   */\n      dup10\n        /* \"#utility.yul\":11175:11197   */\n      add\n        /* \"#utility.yul\":11129:11207   */\n      tag_275\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11119:11207   */\n      swap4\n      pop\n        /* \"#utility.yul\":10914:11217   */\n      pop\n        /* \"#utility.yul\":11284:11286   */\n      0x60\n        /* \"#utility.yul\":11273:11282   */\n      dup7\n        /* \"#utility.yul\":11269:11287   */\n      add\n        /* \"#utility.yul\":11256:11288   */\n      calldataload\n        /* \"#utility.yul\":11315:11333   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11307:11313   */\n      dup2\n        /* \"#utility.yul\":11304:11334   */\n      gt\n        /* \"#utility.yul\":11301:11418   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":11337:11416   */\n      tag_448\n      tag_245\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11301:11418   */\n    tag_447:\n        /* \"#utility.yul\":11442:11520   */\n      tag_449\n        /* \"#utility.yul\":11512:11519   */\n      dup9\n        /* \"#utility.yul\":11503:11509   */\n      dup3\n        /* \"#utility.yul\":11492:11501   */\n      dup10\n        /* \"#utility.yul\":11488:11510   */\n      add\n        /* \"#utility.yul\":11442:11520   */\n      tag_275\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11432:11520   */\n      swap3\n      pop\n        /* \"#utility.yul\":11227:11530   */\n      pop\n        /* \"#utility.yul\":11597:11600   */\n      0x80\n        /* \"#utility.yul\":11586:11595   */\n      dup7\n        /* \"#utility.yul\":11582:11601   */\n      add\n        /* \"#utility.yul\":11569:11602   */\n      calldataload\n        /* \"#utility.yul\":11629:11647   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11621:11627   */\n      dup2\n        /* \"#utility.yul\":11618:11648   */\n      gt\n        /* \"#utility.yul\":11615:11732   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":11651:11730   */\n      tag_451\n      tag_245\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11615:11732   */\n    tag_450:\n        /* \"#utility.yul\":11756:11818   */\n      tag_452\n        /* \"#utility.yul\":11810:11817   */\n      dup9\n        /* \"#utility.yul\":11801:11807   */\n      dup3\n        /* \"#utility.yul\":11790:11799   */\n      dup10\n        /* \"#utility.yul\":11786:11808   */\n      add\n        /* \"#utility.yul\":11756:11818   */\n      tag_278\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11746:11818   */\n      swap2\n      pop\n        /* \"#utility.yul\":11540:11828   */\n      pop\n        /* \"#utility.yul\":10326:11835   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11841:12152   */\n    tag_279:\n        /* \"#utility.yul\":11918:11922   */\n      0x00\n        /* \"#utility.yul\":12008:12026   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12000:12006   */\n      dup3\n        /* \"#utility.yul\":11997:12027   */\n      gt\n        /* \"#utility.yul\":11994:12050   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":12030:12048   */\n      tag_455\n      tag_100\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11994:12050   */\n    tag_454:\n        /* \"#utility.yul\":12080:12084   */\n      0x20\n        /* \"#utility.yul\":12072:12078   */\n      dup3\n        /* \"#utility.yul\":12068:12085   */\n      mul\n        /* \"#utility.yul\":12060:12085   */\n      swap1\n      pop\n        /* \"#utility.yul\":12140:12144   */\n      0x20\n        /* \"#utility.yul\":12134:12138   */\n      dup2\n        /* \"#utility.yul\":12130:12145   */\n      add\n        /* \"#utility.yul\":12122:12145   */\n      swap1\n      pop\n        /* \"#utility.yul\":11841:12152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12175:12885   */\n    tag_280:\n        /* \"#utility.yul\":12271:12276   */\n      0x00\n        /* \"#utility.yul\":12296:12377   */\n      tag_457\n        /* \"#utility.yul\":12312:12376   */\n      tag_458\n        /* \"#utility.yul\":12369:12375   */\n      dup5\n        /* \"#utility.yul\":12312:12376   */\n      tag_279\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12296:12377   */\n      tag_263\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12287:12377   */\n      swap1\n      pop\n        /* \"#utility.yul\":12397:12402   */\n      dup1\n        /* \"#utility.yul\":12426:12432   */\n      dup4\n        /* \"#utility.yul\":12419:12424   */\n      dup3\n        /* \"#utility.yul\":12412:12433   */\n      mstore\n        /* \"#utility.yul\":12460:12464   */\n      0x20\n        /* \"#utility.yul\":12453:12458   */\n      dup3\n        /* \"#utility.yul\":12449:12465   */\n      add\n        /* \"#utility.yul\":12442:12465   */\n      swap1\n      pop\n        /* \"#utility.yul\":12513:12517   */\n      0x20\n        /* \"#utility.yul\":12505:12511   */\n      dup5\n        /* \"#utility.yul\":12501:12518   */\n      mul\n        /* \"#utility.yul\":12493:12499   */\n      dup4\n        /* \"#utility.yul\":12489:12519   */\n      add\n        /* \"#utility.yul\":12542:12545   */\n      dup6\n        /* \"#utility.yul\":12534:12540   */\n      dup2\n        /* \"#utility.yul\":12531:12546   */\n      gt\n        /* \"#utility.yul\":12528:12650   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":12561:12640   */\n      tag_460\n      tag_273\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12528:12650   */\n    tag_459:\n        /* \"#utility.yul\":12676:12682   */\n      dup4\n        /* \"#utility.yul\":12659:12879   */\n    tag_461:\n        /* \"#utility.yul\":12693:12699   */\n      dup2\n        /* \"#utility.yul\":12688:12691   */\n      dup2\n        /* \"#utility.yul\":12685:12700   */\n      lt\n        /* \"#utility.yul\":12659:12879   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":12768:12771   */\n      dup1\n        /* \"#utility.yul\":12797:12834   */\n      tag_464\n        /* \"#utility.yul\":12830:12833   */\n      dup9\n        /* \"#utility.yul\":12818:12828   */\n      dup3\n        /* \"#utility.yul\":12797:12834   */\n      tag_249\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12792:12795   */\n      dup5\n        /* \"#utility.yul\":12785:12835   */\n      mstore\n        /* \"#utility.yul\":12864:12868   */\n      0x20\n        /* \"#utility.yul\":12859:12862   */\n      dup5\n        /* \"#utility.yul\":12855:12869   */\n      add\n        /* \"#utility.yul\":12848:12869   */\n      swap4\n      pop\n        /* \"#utility.yul\":12735:12879   */\n      pop\n        /* \"#utility.yul\":12719:12723   */\n      0x20\n        /* \"#utility.yul\":12714:12717   */\n      dup2\n        /* \"#utility.yul\":12710:12724   */\n      add\n        /* \"#utility.yul\":12703:12724   */\n      swap1\n      pop\n        /* \"#utility.yul\":12659:12879   */\n      jump(tag_461)\n    tag_463:\n        /* \"#utility.yul\":12663:12684   */\n      pop\n        /* \"#utility.yul\":12277:12885   */\n      pop\n      pop\n        /* \"#utility.yul\":12175:12885   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12908:13278   */\n    tag_281:\n        /* \"#utility.yul\":12979:12984   */\n      0x00\n        /* \"#utility.yul\":13028:13031   */\n      dup3\n        /* \"#utility.yul\":13021:13025   */\n      0x1f\n        /* \"#utility.yul\":13013:13019   */\n      dup4\n        /* \"#utility.yul\":13009:13026   */\n      add\n        /* \"#utility.yul\":13005:13032   */\n      slt\n        /* \"#utility.yul\":12995:13117   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":13036:13115   */\n      tag_467\n      tag_259\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12995:13117   */\n    tag_466:\n        /* \"#utility.yul\":13153:13159   */\n      dup2\n        /* \"#utility.yul\":13140:13160   */\n      calldataload\n        /* \"#utility.yul\":13178:13272   */\n      tag_468\n        /* \"#utility.yul\":13268:13271   */\n      dup5\n        /* \"#utility.yul\":13260:13266   */\n      dup3\n        /* \"#utility.yul\":13253:13257   */\n      0x20\n        /* \"#utility.yul\":13245:13251   */\n      dup7\n        /* \"#utility.yul\":13241:13258   */\n      add\n        /* \"#utility.yul\":13178:13272   */\n      tag_280\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13169:13272   */\n      swap2\n      pop\n        /* \"#utility.yul\":12985:13278   */\n      pop\n        /* \"#utility.yul\":12908:13278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13284:14178   */\n    tag_43:\n        /* \"#utility.yul\":13402:13408   */\n      0x00\n        /* \"#utility.yul\":13410:13416   */\n      dup1\n        /* \"#utility.yul\":13459:13461   */\n      0x40\n        /* \"#utility.yul\":13447:13456   */\n      dup4\n        /* \"#utility.yul\":13438:13445   */\n      dup6\n        /* \"#utility.yul\":13434:13457   */\n      sub\n        /* \"#utility.yul\":13430:13462   */\n      slt\n        /* \"#utility.yul\":13427:13546   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":13465:13544   */\n      tag_471\n      tag_244\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13427:13546   */\n    tag_470:\n        /* \"#utility.yul\":13613:13614   */\n      0x00\n        /* \"#utility.yul\":13602:13611   */\n      dup4\n        /* \"#utility.yul\":13598:13615   */\n      add\n        /* \"#utility.yul\":13585:13616   */\n      calldataload\n        /* \"#utility.yul\":13643:13661   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13635:13641   */\n      dup2\n        /* \"#utility.yul\":13632:13662   */\n      gt\n        /* \"#utility.yul\":13629:13746   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":13665:13744   */\n      tag_473\n      tag_245\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13629:13746   */\n    tag_472:\n        /* \"#utility.yul\":13770:13848   */\n      tag_474\n        /* \"#utility.yul\":13840:13847   */\n      dup6\n        /* \"#utility.yul\":13831:13837   */\n      dup3\n        /* \"#utility.yul\":13820:13829   */\n      dup7\n        /* \"#utility.yul\":13816:13838   */\n      add\n        /* \"#utility.yul\":13770:13848   */\n      tag_281\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13760:13848   */\n      swap3\n      pop\n        /* \"#utility.yul\":13556:13858   */\n      pop\n        /* \"#utility.yul\":13925:13927   */\n      0x20\n        /* \"#utility.yul\":13914:13923   */\n      dup4\n        /* \"#utility.yul\":13910:13928   */\n      add\n        /* \"#utility.yul\":13897:13929   */\n      calldataload\n        /* \"#utility.yul\":13956:13974   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13948:13954   */\n      dup2\n        /* \"#utility.yul\":13945:13975   */\n      gt\n        /* \"#utility.yul\":13942:14059   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":13978:14057   */\n      tag_476\n      tag_245\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":13942:14059   */\n    tag_475:\n        /* \"#utility.yul\":14083:14161   */\n      tag_477\n        /* \"#utility.yul\":14153:14160   */\n      dup6\n        /* \"#utility.yul\":14144:14150   */\n      dup3\n        /* \"#utility.yul\":14133:14142   */\n      dup7\n        /* \"#utility.yul\":14129:14151   */\n      add\n        /* \"#utility.yul\":14083:14161   */\n      tag_275\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14073:14161   */\n      swap2\n      pop\n        /* \"#utility.yul\":13868:14171   */\n      pop\n        /* \"#utility.yul\":13284:14178   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14184:14298   */\n    tag_282:\n        /* \"#utility.yul\":14251:14257   */\n      0x00\n        /* \"#utility.yul\":14285:14290   */\n      dup2\n        /* \"#utility.yul\":14279:14291   */\n      mload\n        /* \"#utility.yul\":14269:14291   */\n      swap1\n      pop\n        /* \"#utility.yul\":14184:14298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14304:14488   */\n    tag_283:\n        /* \"#utility.yul\":14403:14414   */\n      0x00\n        /* \"#utility.yul\":14437:14443   */\n      dup3\n        /* \"#utility.yul\":14432:14435   */\n      dup3\n        /* \"#utility.yul\":14425:14444   */\n      mstore\n        /* \"#utility.yul\":14477:14481   */\n      0x20\n        /* \"#utility.yul\":14472:14475   */\n      dup3\n        /* \"#utility.yul\":14468:14482   */\n      add\n        /* \"#utility.yul\":14453:14482   */\n      swap1\n      pop\n        /* \"#utility.yul\":14304:14488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14494:14626   */\n    tag_284:\n        /* \"#utility.yul\":14561:14565   */\n      0x00\n        /* \"#utility.yul\":14584:14587   */\n      dup2\n        /* \"#utility.yul\":14576:14587   */\n      swap1\n      pop\n        /* \"#utility.yul\":14614:14618   */\n      0x20\n        /* \"#utility.yul\":14609:14612   */\n      dup3\n        /* \"#utility.yul\":14605:14619   */\n      add\n        /* \"#utility.yul\":14597:14619   */\n      swap1\n      pop\n        /* \"#utility.yul\":14494:14626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14632:14740   */\n    tag_285:\n        /* \"#utility.yul\":14709:14733   */\n      tag_482\n        /* \"#utility.yul\":14727:14732   */\n      dup2\n        /* \"#utility.yul\":14709:14733   */\n      tag_250\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14704:14707   */\n      dup3\n        /* \"#utility.yul\":14697:14734   */\n      mstore\n        /* \"#utility.yul\":14632:14740   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14746:14925   */\n    tag_286:\n        /* \"#utility.yul\":14815:14825   */\n      0x00\n        /* \"#utility.yul\":14836:14882   */\n      tag_484\n        /* \"#utility.yul\":14878:14881   */\n      dup4\n        /* \"#utility.yul\":14870:14876   */\n      dup4\n        /* \"#utility.yul\":14836:14882   */\n      tag_285\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14914:14918   */\n      0x20\n        /* \"#utility.yul\":14909:14912   */\n      dup4\n        /* \"#utility.yul\":14905:14919   */\n      add\n        /* \"#utility.yul\":14891:14919   */\n      swap1\n      pop\n        /* \"#utility.yul\":14746:14925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14931:15044   */\n    tag_287:\n        /* \"#utility.yul\":15001:15005   */\n      0x00\n        /* \"#utility.yul\":15033:15037   */\n      0x20\n        /* \"#utility.yul\":15028:15031   */\n      dup3\n        /* \"#utility.yul\":15024:15038   */\n      add\n        /* \"#utility.yul\":15016:15038   */\n      swap1\n      pop\n        /* \"#utility.yul\":14931:15044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15080:15812   */\n    tag_288:\n        /* \"#utility.yul\":15199:15202   */\n      0x00\n        /* \"#utility.yul\":15228:15282   */\n      tag_487\n        /* \"#utility.yul\":15276:15281   */\n      dup3\n        /* \"#utility.yul\":15228:15282   */\n      tag_282\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":15298:15384   */\n      tag_488\n        /* \"#utility.yul\":15377:15383   */\n      dup2\n        /* \"#utility.yul\":15372:15375   */\n      dup6\n        /* \"#utility.yul\":15298:15384   */\n      tag_283\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":15291:15384   */\n      swap4\n      pop\n        /* \"#utility.yul\":15408:15464   */\n      tag_489\n        /* \"#utility.yul\":15458:15463   */\n      dup4\n        /* \"#utility.yul\":15408:15464   */\n      tag_284\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15487:15494   */\n      dup1\n        /* \"#utility.yul\":15518:15519   */\n      0x00\n        /* \"#utility.yul\":15503:15787   */\n    tag_490:\n        /* \"#utility.yul\":15528:15534   */\n      dup4\n        /* \"#utility.yul\":15525:15526   */\n      dup2\n        /* \"#utility.yul\":15522:15535   */\n      lt\n        /* \"#utility.yul\":15503:15787   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":15604:15610   */\n      dup2\n        /* \"#utility.yul\":15598:15611   */\n      mload\n        /* \"#utility.yul\":15631:15694   */\n      tag_493\n        /* \"#utility.yul\":15690:15693   */\n      dup9\n        /* \"#utility.yul\":15675:15688   */\n      dup3\n        /* \"#utility.yul\":15631:15694   */\n      tag_286\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15624:15694   */\n      swap8\n      pop\n        /* \"#utility.yul\":15717:15777   */\n      tag_494\n        /* \"#utility.yul\":15770:15776   */\n      dup4\n        /* \"#utility.yul\":15717:15777   */\n      tag_287\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15707:15777   */\n      swap3\n      pop\n        /* \"#utility.yul\":15563:15787   */\n      pop\n        /* \"#utility.yul\":15550:15551   */\n      0x01\n        /* \"#utility.yul\":15547:15548   */\n      dup2\n        /* \"#utility.yul\":15543:15552   */\n      add\n        /* \"#utility.yul\":15538:15552   */\n      swap1\n      pop\n        /* \"#utility.yul\":15503:15787   */\n      jump(tag_490)\n    tag_492:\n        /* \"#utility.yul\":15507:15521   */\n      pop\n        /* \"#utility.yul\":15803:15806   */\n      dup6\n        /* \"#utility.yul\":15796:15806   */\n      swap4\n      pop\n        /* \"#utility.yul\":15204:15812   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15080:15812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15818:16191   */\n    tag_46:\n        /* \"#utility.yul\":15961:15965   */\n      0x00\n        /* \"#utility.yul\":15999:16001   */\n      0x20\n        /* \"#utility.yul\":15988:15997   */\n      dup3\n        /* \"#utility.yul\":15984:16002   */\n      add\n        /* \"#utility.yul\":15976:16002   */\n      swap1\n      pop\n        /* \"#utility.yul\":16048:16057   */\n      dup2\n        /* \"#utility.yul\":16042:16046   */\n      dup2\n        /* \"#utility.yul\":16038:16058   */\n      sub\n        /* \"#utility.yul\":16034:16035   */\n      0x00\n        /* \"#utility.yul\":16023:16032   */\n      dup4\n        /* \"#utility.yul\":16019:16036   */\n      add\n        /* \"#utility.yul\":16012:16059   */\n      mstore\n        /* \"#utility.yul\":16076:16184   */\n      tag_496\n        /* \"#utility.yul\":16179:16183   */\n      dup2\n        /* \"#utility.yul\":16170:16176   */\n      dup5\n        /* \"#utility.yul\":16076:16184   */\n      tag_288\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":16068:16184   */\n      swap1\n      pop\n        /* \"#utility.yul\":15818:16191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16197:16816   */\n    tag_49:\n        /* \"#utility.yul\":16274:16280   */\n      0x00\n        /* \"#utility.yul\":16282:16288   */\n      dup1\n        /* \"#utility.yul\":16290:16296   */\n      0x00\n        /* \"#utility.yul\":16339:16341   */\n      0x60\n        /* \"#utility.yul\":16327:16336   */\n      dup5\n        /* \"#utility.yul\":16318:16325   */\n      dup7\n        /* \"#utility.yul\":16314:16337   */\n      sub\n        /* \"#utility.yul\":16310:16342   */\n      slt\n        /* \"#utility.yul\":16307:16426   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":16345:16424   */\n      tag_499\n      tag_244\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":16307:16426   */\n    tag_498:\n        /* \"#utility.yul\":16465:16466   */\n      0x00\n        /* \"#utility.yul\":16490:16543   */\n      tag_500\n        /* \"#utility.yul\":16535:16542   */\n      dup7\n        /* \"#utility.yul\":16526:16532   */\n      dup3\n        /* \"#utility.yul\":16515:16524   */\n      dup8\n        /* \"#utility.yul\":16511:16533   */\n      add\n        /* \"#utility.yul\":16490:16543   */\n      tag_249\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":16480:16543   */\n      swap4\n      pop\n        /* \"#utility.yul\":16436:16553   */\n      pop\n        /* \"#utility.yul\":16592:16594   */\n      0x20\n        /* \"#utility.yul\":16618:16671   */\n      tag_501\n        /* \"#utility.yul\":16663:16670   */\n      dup7\n        /* \"#utility.yul\":16654:16660   */\n      dup3\n        /* \"#utility.yul\":16643:16652   */\n      dup8\n        /* \"#utility.yul\":16639:16661   */\n      add\n        /* \"#utility.yul\":16618:16671   */\n      tag_252\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":16608:16671   */\n      swap3\n      pop\n        /* \"#utility.yul\":16563:16681   */\n      pop\n        /* \"#utility.yul\":16720:16722   */\n      0x40\n        /* \"#utility.yul\":16746:16799   */\n      tag_502\n        /* \"#utility.yul\":16791:16798   */\n      dup7\n        /* \"#utility.yul\":16782:16788   */\n      dup3\n        /* \"#utility.yul\":16771:16780   */\n      dup8\n        /* \"#utility.yul\":16767:16789   */\n      add\n        /* \"#utility.yul\":16746:16799   */\n      tag_252\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":16736:16799   */\n      swap2\n      pop\n        /* \"#utility.yul\":16691:16809   */\n      pop\n        /* \"#utility.yul\":16197:16816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":16822:16938   */\n    tag_289:\n        /* \"#utility.yul\":16892:16913   */\n      tag_504\n        /* \"#utility.yul\":16907:16912   */\n      dup2\n        /* \"#utility.yul\":16892:16913   */\n      tag_257\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16885:16890   */\n      dup2\n        /* \"#utility.yul\":16882:16914   */\n      eq\n        /* \"#utility.yul\":16872:16932   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":16928:16929   */\n      0x00\n        /* \"#utility.yul\":16925:16926   */\n      dup1\n        /* \"#utility.yul\":16918:16930   */\n      revert\n        /* \"#utility.yul\":16872:16932   */\n    tag_505:\n        /* \"#utility.yul\":16822:16938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16944:17077   */\n    tag_290:\n        /* \"#utility.yul\":16987:16992   */\n      0x00\n        /* \"#utility.yul\":17025:17031   */\n      dup2\n        /* \"#utility.yul\":17012:17032   */\n      calldataload\n        /* \"#utility.yul\":17003:17032   */\n      swap1\n      pop\n        /* \"#utility.yul\":17041:17071   */\n      tag_507\n        /* \"#utility.yul\":17065:17070   */\n      dup2\n        /* \"#utility.yul\":17041:17071   */\n      tag_289\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":16944:17077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17083:17551   */\n    tag_53:\n        /* \"#utility.yul\":17148:17154   */\n      0x00\n        /* \"#utility.yul\":17156:17162   */\n      dup1\n        /* \"#utility.yul\":17205:17207   */\n      0x40\n        /* \"#utility.yul\":17193:17202   */\n      dup4\n        /* \"#utility.yul\":17184:17191   */\n      dup6\n        /* \"#utility.yul\":17180:17203   */\n      sub\n        /* \"#utility.yul\":17176:17208   */\n      slt\n        /* \"#utility.yul\":17173:17292   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":17211:17290   */\n      tag_510\n      tag_244\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17173:17292   */\n    tag_509:\n        /* \"#utility.yul\":17331:17332   */\n      0x00\n        /* \"#utility.yul\":17356:17409   */\n      tag_511\n        /* \"#utility.yul\":17401:17408   */\n      dup6\n        /* \"#utility.yul\":17392:17398   */\n      dup3\n        /* \"#utility.yul\":17381:17390   */\n      dup7\n        /* \"#utility.yul\":17377:17399   */\n      add\n        /* \"#utility.yul\":17356:17409   */\n      tag_249\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":17346:17409   */\n      swap3\n      pop\n        /* \"#utility.yul\":17302:17419   */\n      pop\n        /* \"#utility.yul\":17458:17460   */\n      0x20\n        /* \"#utility.yul\":17484:17534   */\n      tag_512\n        /* \"#utility.yul\":17526:17533   */\n      dup6\n        /* \"#utility.yul\":17517:17523   */\n      dup3\n        /* \"#utility.yul\":17506:17515   */\n      dup7\n        /* \"#utility.yul\":17502:17524   */\n      add\n        /* \"#utility.yul\":17484:17534   */\n      tag_290\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17474:17534   */\n      swap2\n      pop\n        /* \"#utility.yul\":17429:17544   */\n      pop\n        /* \"#utility.yul\":17083:17551   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17557:18031   */\n    tag_57:\n        /* \"#utility.yul\":17625:17631   */\n      0x00\n        /* \"#utility.yul\":17633:17639   */\n      dup1\n        /* \"#utility.yul\":17682:17684   */\n      0x40\n        /* \"#utility.yul\":17670:17679   */\n      dup4\n        /* \"#utility.yul\":17661:17668   */\n      dup6\n        /* \"#utility.yul\":17657:17680   */\n      sub\n        /* \"#utility.yul\":17653:17685   */\n      slt\n        /* \"#utility.yul\":17650:17769   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":17688:17767   */\n      tag_515\n      tag_244\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17650:17769   */\n    tag_514:\n        /* \"#utility.yul\":17808:17809   */\n      0x00\n        /* \"#utility.yul\":17833:17886   */\n      tag_516\n        /* \"#utility.yul\":17878:17885   */\n      dup6\n        /* \"#utility.yul\":17869:17875   */\n      dup3\n        /* \"#utility.yul\":17858:17867   */\n      dup7\n        /* \"#utility.yul\":17854:17876   */\n      add\n        /* \"#utility.yul\":17833:17886   */\n      tag_249\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17823:17886   */\n      swap3\n      pop\n        /* \"#utility.yul\":17779:17896   */\n      pop\n        /* \"#utility.yul\":17935:17937   */\n      0x20\n        /* \"#utility.yul\":17961:18014   */\n      tag_517\n        /* \"#utility.yul\":18006:18013   */\n      dup6\n        /* \"#utility.yul\":17997:18003   */\n      dup3\n        /* \"#utility.yul\":17986:17995   */\n      dup7\n        /* \"#utility.yul\":17982:18004   */\n      add\n        /* \"#utility.yul\":17961:18014   */\n      tag_249\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17951:18014   */\n      swap2\n      pop\n        /* \"#utility.yul\":17906:18024   */\n      pop\n        /* \"#utility.yul\":17557:18031   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18037:19126   */\n    tag_62:\n        /* \"#utility.yul\":18141:18147   */\n      0x00\n        /* \"#utility.yul\":18149:18155   */\n      dup1\n        /* \"#utility.yul\":18157:18163   */\n      0x00\n        /* \"#utility.yul\":18165:18171   */\n      dup1\n        /* \"#utility.yul\":18173:18179   */\n      0x00\n        /* \"#utility.yul\":18222:18225   */\n      0xa0\n        /* \"#utility.yul\":18210:18219   */\n      dup7\n        /* \"#utility.yul\":18201:18208   */\n      dup9\n        /* \"#utility.yul\":18197:18220   */\n      sub\n        /* \"#utility.yul\":18193:18226   */\n      slt\n        /* \"#utility.yul\":18190:18310   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":18229:18308   */\n      tag_520\n      tag_244\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18190:18310   */\n    tag_519:\n        /* \"#utility.yul\":18349:18350   */\n      0x00\n        /* \"#utility.yul\":18374:18427   */\n      tag_521\n        /* \"#utility.yul\":18419:18426   */\n      dup9\n        /* \"#utility.yul\":18410:18416   */\n      dup3\n        /* \"#utility.yul\":18399:18408   */\n      dup10\n        /* \"#utility.yul\":18395:18417   */\n      add\n        /* \"#utility.yul\":18374:18427   */\n      tag_249\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18364:18427   */\n      swap6\n      pop\n        /* \"#utility.yul\":18320:18437   */\n      pop\n        /* \"#utility.yul\":18476:18478   */\n      0x20\n        /* \"#utility.yul\":18502:18555   */\n      tag_522\n        /* \"#utility.yul\":18547:18554   */\n      dup9\n        /* \"#utility.yul\":18538:18544   */\n      dup3\n        /* \"#utility.yul\":18527:18536   */\n      dup10\n        /* \"#utility.yul\":18523:18545   */\n      add\n        /* \"#utility.yul\":18502:18555   */\n      tag_249\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":18492:18555   */\n      swap5\n      pop\n        /* \"#utility.yul\":18447:18565   */\n      pop\n        /* \"#utility.yul\":18604:18606   */\n      0x40\n        /* \"#utility.yul\":18630:18683   */\n      tag_523\n        /* \"#utility.yul\":18675:18682   */\n      dup9\n        /* \"#utility.yul\":18666:18672   */\n      dup3\n        /* \"#utility.yul\":18655:18664   */\n      dup10\n        /* \"#utility.yul\":18651:18673   */\n      add\n        /* \"#utility.yul\":18630:18683   */\n      tag_252\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18620:18683   */\n      swap4\n      pop\n        /* \"#utility.yul\":18575:18693   */\n      pop\n        /* \"#utility.yul\":18732:18734   */\n      0x60\n        /* \"#utility.yul\":18758:18811   */\n      tag_524\n        /* \"#utility.yul\":18803:18810   */\n      dup9\n        /* \"#utility.yul\":18794:18800   */\n      dup3\n        /* \"#utility.yul\":18783:18792   */\n      dup10\n        /* \"#utility.yul\":18779:18801   */\n      add\n        /* \"#utility.yul\":18758:18811   */\n      tag_252\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":18748:18811   */\n      swap3\n      pop\n        /* \"#utility.yul\":18703:18821   */\n      pop\n        /* \"#utility.yul\":18888:18891   */\n      0x80\n        /* \"#utility.yul\":18877:18886   */\n      dup7\n        /* \"#utility.yul\":18873:18892   */\n      add\n        /* \"#utility.yul\":18860:18893   */\n      calldataload\n        /* \"#utility.yul\":18920:18938   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18912:18918   */\n      dup2\n        /* \"#utility.yul\":18909:18939   */\n      gt\n        /* \"#utility.yul\":18906:19023   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":18942:19021   */\n      tag_526\n      tag_245\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":18906:19023   */\n    tag_525:\n        /* \"#utility.yul\":19047:19109   */\n      tag_527\n        /* \"#utility.yul\":19101:19108   */\n      dup9\n        /* \"#utility.yul\":19092:19098   */\n      dup3\n        /* \"#utility.yul\":19081:19090   */\n      dup10\n        /* \"#utility.yul\":19077:19099   */\n      add\n        /* \"#utility.yul\":19047:19109   */\n      tag_278\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":19037:19109   */\n      swap2\n      pop\n        /* \"#utility.yul\":18831:19119   */\n      pop\n        /* \"#utility.yul\":18037:19126   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19132:19280   */\n    tag_291:\n        /* \"#utility.yul\":19234:19245   */\n      0x00\n        /* \"#utility.yul\":19271:19274   */\n      dup2\n        /* \"#utility.yul\":19256:19274   */\n      swap1\n      pop\n        /* \"#utility.yul\":19132:19280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19286:19676   */\n    tag_292:\n        /* \"#utility.yul\":19392:19395   */\n      0x00\n        /* \"#utility.yul\":19420:19459   */\n      tag_530\n        /* \"#utility.yul\":19453:19458   */\n      dup3\n        /* \"#utility.yul\":19420:19459   */\n      tag_268\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":19475:19564   */\n      tag_531\n        /* \"#utility.yul\":19557:19563   */\n      dup2\n        /* \"#utility.yul\":19552:19555   */\n      dup6\n        /* \"#utility.yul\":19475:19564   */\n      tag_291\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":19468:19564   */\n      swap4\n      pop\n        /* \"#utility.yul\":19573:19638   */\n      tag_532\n        /* \"#utility.yul\":19631:19637   */\n      dup2\n        /* \"#utility.yul\":19626:19629   */\n      dup6\n        /* \"#utility.yul\":19619:19623   */\n      0x20\n        /* \"#utility.yul\":19612:19617   */\n      dup7\n        /* \"#utility.yul\":19608:19624   */\n      add\n        /* \"#utility.yul\":19573:19638   */\n      tag_270\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":19663:19669   */\n      dup1\n        /* \"#utility.yul\":19658:19661   */\n      dup5\n        /* \"#utility.yul\":19654:19670   */\n      add\n        /* \"#utility.yul\":19647:19670   */\n      swap2\n      pop\n        /* \"#utility.yul\":19396:19676   */\n      pop\n        /* \"#utility.yul\":19286:19676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19682:19862   */\n    tag_293:\n        /* \"#utility.yul\":19730:19807   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19727:19728   */\n      0x00\n        /* \"#utility.yul\":19720:19808   */\n      mstore\n        /* \"#utility.yul\":19827:19831   */\n      0x22\n        /* \"#utility.yul\":19824:19825   */\n      0x04\n        /* \"#utility.yul\":19817:19832   */\n      mstore\n        /* \"#utility.yul\":19851:19855   */\n      0x24\n        /* \"#utility.yul\":19848:19849   */\n      0x00\n        /* \"#utility.yul\":19841:19856   */\n      revert\n        /* \"#utility.yul\":19868:20188   */\n    tag_144:\n        /* \"#utility.yul\":19912:19918   */\n      0x00\n        /* \"#utility.yul\":19949:19950   */\n      0x02\n        /* \"#utility.yul\":19943:19947   */\n      dup3\n        /* \"#utility.yul\":19939:19951   */\n      div\n        /* \"#utility.yul\":19929:19951   */\n      swap1\n      pop\n        /* \"#utility.yul\":19996:19997   */\n      0x01\n        /* \"#utility.yul\":19990:19994   */\n      dup3\n        /* \"#utility.yul\":19986:19998   */\n      and\n        /* \"#utility.yul\":20017:20035   */\n      dup1\n        /* \"#utility.yul\":20007:20088   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":20073:20077   */\n      0x7f\n        /* \"#utility.yul\":20065:20071   */\n      dup3\n        /* \"#utility.yul\":20061:20078   */\n      and\n        /* \"#utility.yul\":20051:20078   */\n      swap2\n      pop\n        /* \"#utility.yul\":20007:20088   */\n    tag_535:\n        /* \"#utility.yul\":20135:20137   */\n      0x20\n        /* \"#utility.yul\":20127:20133   */\n      dup3\n        /* \"#utility.yul\":20124:20138   */\n      lt\n        /* \"#utility.yul\":20104:20122   */\n      dup2\n        /* \"#utility.yul\":20101:20139   */\n      sub\n        /* \"#utility.yul\":20098:20182   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":20154:20172   */\n      tag_537\n      tag_293\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":20098:20182   */\n    tag_536:\n        /* \"#utility.yul\":19919:20188   */\n      pop\n        /* \"#utility.yul\":19868:20188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20194:20335   */\n    tag_294:\n        /* \"#utility.yul\":20243:20247   */\n      0x00\n        /* \"#utility.yul\":20266:20269   */\n      dup2\n        /* \"#utility.yul\":20258:20269   */\n      swap1\n      pop\n        /* \"#utility.yul\":20289:20292   */\n      dup2\n        /* \"#utility.yul\":20286:20287   */\n      0x00\n        /* \"#utility.yul\":20279:20293   */\n      mstore\n        /* \"#utility.yul\":20323:20327   */\n      0x20\n        /* \"#utility.yul\":20320:20321   */\n      0x00\n        /* \"#utility.yul\":20310:20328   */\n      keccak256\n        /* \"#utility.yul\":20302:20328   */\n      swap1\n      pop\n        /* \"#utility.yul\":20194:20335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20365:21239   */\n    tag_295:\n        /* \"#utility.yul\":20468:20471   */\n      0x00\n        /* \"#utility.yul\":20505:20510   */\n      dup2\n        /* \"#utility.yul\":20499:20511   */\n      sload\n        /* \"#utility.yul\":20534:20570   */\n      tag_540\n        /* \"#utility.yul\":20560:20569   */\n      dup2\n        /* \"#utility.yul\":20534:20570   */\n      tag_144\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":20586:20675   */\n      tag_541\n        /* \"#utility.yul\":20668:20674   */\n      dup2\n        /* \"#utility.yul\":20663:20666   */\n      dup7\n        /* \"#utility.yul\":20586:20675   */\n      tag_291\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":20579:20675   */\n      swap5\n      pop\n        /* \"#utility.yul\":20706:20707   */\n      0x01\n        /* \"#utility.yul\":20695:20704   */\n      dup3\n        /* \"#utility.yul\":20691:20708   */\n      and\n        /* \"#utility.yul\":20722:20723   */\n      0x00\n        /* \"#utility.yul\":20717:20883   */\n      dup2\n      eq\n      tag_543\n      jumpi\n        /* \"#utility.yul\":20897:20898   */\n      0x01\n        /* \"#utility.yul\":20892:21233   */\n      dup2\n      eq\n      tag_544\n      jumpi\n        /* \"#utility.yul\":20684:21233   */\n      jump(tag_542)\n        /* \"#utility.yul\":20717:20883   */\n    tag_543:\n        /* \"#utility.yul\":20801:20805   */\n      0xff\n        /* \"#utility.yul\":20797:20806   */\n      not\n        /* \"#utility.yul\":20786:20795   */\n      dup4\n        /* \"#utility.yul\":20782:20807   */\n      and\n        /* \"#utility.yul\":20777:20780   */\n      dup7\n        /* \"#utility.yul\":20770:20808   */\n      mstore\n        /* \"#utility.yul\":20863:20869   */\n      dup2\n        /* \"#utility.yul\":20856:20870   */\n      iszero\n        /* \"#utility.yul\":20849:20871   */\n      iszero\n        /* \"#utility.yul\":20841:20847   */\n      dup3\n        /* \"#utility.yul\":20837:20872   */\n      mul\n        /* \"#utility.yul\":20832:20835   */\n      dup7\n        /* \"#utility.yul\":20828:20873   */\n      add\n        /* \"#utility.yul\":20821:20873   */\n      swap4\n      pop\n        /* \"#utility.yul\":20717:20883   */\n      jump(tag_542)\n        /* \"#utility.yul\":20892:21233   */\n    tag_544:\n        /* \"#utility.yul\":20959:20997   */\n      tag_545\n        /* \"#utility.yul\":20991:20996   */\n      dup6\n        /* \"#utility.yul\":20959:20997   */\n      tag_294\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":21019:21020   */\n      0x00\n        /* \"#utility.yul\":21033:21187   */\n    tag_546:\n        /* \"#utility.yul\":21047:21053   */\n      dup4\n        /* \"#utility.yul\":21044:21045   */\n      dup2\n        /* \"#utility.yul\":21041:21054   */\n      lt\n        /* \"#utility.yul\":21033:21187   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":21121:21128   */\n      dup2\n        /* \"#utility.yul\":21115:21129   */\n      sload\n        /* \"#utility.yul\":21111:21112   */\n      dup2\n        /* \"#utility.yul\":21106:21109   */\n      dup10\n        /* \"#utility.yul\":21102:21113   */\n      add\n        /* \"#utility.yul\":21095:21130   */\n      mstore\n        /* \"#utility.yul\":21171:21172   */\n      0x01\n        /* \"#utility.yul\":21162:21169   */\n      dup3\n        /* \"#utility.yul\":21158:21173   */\n      add\n        /* \"#utility.yul\":21147:21173   */\n      swap2\n      pop\n        /* \"#utility.yul\":21069:21073   */\n      0x20\n        /* \"#utility.yul\":21066:21067   */\n      dup2\n        /* \"#utility.yul\":21062:21074   */\n      add\n        /* \"#utility.yul\":21057:21074   */\n      swap1\n      pop\n        /* \"#utility.yul\":21033:21187   */\n      jump(tag_546)\n    tag_548:\n        /* \"#utility.yul\":21216:21222   */\n      dup4\n        /* \"#utility.yul\":21211:21214   */\n      dup9\n        /* \"#utility.yul\":21207:21223   */\n      add\n        /* \"#utility.yul\":21200:21223   */\n      swap6\n      pop\n        /* \"#utility.yul\":20899:21233   */\n      pop\n      pop\n        /* \"#utility.yul\":20684:21233   */\n    tag_542:\n      pop\n        /* \"#utility.yul\":20472:21239   */\n      pop\n      pop\n        /* \"#utility.yul\":20365:21239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21245:21674   */\n    tag_83:\n        /* \"#utility.yul\":21422:21425   */\n      0x00\n        /* \"#utility.yul\":21444:21539   */\n      tag_550\n        /* \"#utility.yul\":21535:21538   */\n      dup3\n        /* \"#utility.yul\":21526:21532   */\n      dup6\n        /* \"#utility.yul\":21444:21539   */\n      tag_292\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":21437:21539   */\n      swap2\n      pop\n        /* \"#utility.yul\":21556:21648   */\n      tag_551\n        /* \"#utility.yul\":21644:21647   */\n      dup3\n        /* \"#utility.yul\":21635:21641   */\n      dup5\n        /* \"#utility.yul\":21556:21648   */\n      tag_295\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":21549:21648   */\n      swap2\n      pop\n        /* \"#utility.yul\":21665:21668   */\n      dup2\n        /* \"#utility.yul\":21658:21668   */\n      swap1\n      pop\n        /* \"#utility.yul\":21245:21674   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21680:21798   */\n    tag_296:\n        /* \"#utility.yul\":21767:21791   */\n      tag_553\n        /* \"#utility.yul\":21785:21790   */\n      dup2\n        /* \"#utility.yul\":21767:21791   */\n      tag_247\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":21762:21765   */\n      dup3\n        /* \"#utility.yul\":21755:21792   */\n      mstore\n        /* \"#utility.yul\":21680:21798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21804:22136   */\n    tag_91:\n        /* \"#utility.yul\":21925:21929   */\n      0x00\n        /* \"#utility.yul\":21963:21965   */\n      0x40\n        /* \"#utility.yul\":21952:21961   */\n      dup3\n        /* \"#utility.yul\":21948:21966   */\n      add\n        /* \"#utility.yul\":21940:21966   */\n      swap1\n      pop\n        /* \"#utility.yul\":21976:22047   */\n      tag_555\n        /* \"#utility.yul\":22044:22045   */\n      0x00\n        /* \"#utility.yul\":22033:22042   */\n      dup4\n        /* \"#utility.yul\":22029:22046   */\n      add\n        /* \"#utility.yul\":22020:22026   */\n      dup6\n        /* \"#utility.yul\":21976:22047   */\n      tag_296\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":22057:22129   */\n      tag_556\n        /* \"#utility.yul\":22125:22127   */\n      0x20\n        /* \"#utility.yul\":22114:22123   */\n      dup4\n        /* \"#utility.yul\":22110:22128   */\n      add\n        /* \"#utility.yul\":22101:22107   */\n      dup5\n        /* \"#utility.yul\":22057:22129   */\n      tag_296\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":21804:22136   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22142:22474   */\n    tag_97:\n        /* \"#utility.yul\":22263:22267   */\n      0x00\n        /* \"#utility.yul\":22301:22303   */\n      0x40\n        /* \"#utility.yul\":22290:22299   */\n      dup3\n        /* \"#utility.yul\":22286:22304   */\n      add\n        /* \"#utility.yul\":22278:22304   */\n      swap1\n      pop\n        /* \"#utility.yul\":22314:22385   */\n      tag_558\n        /* \"#utility.yul\":22382:22383   */\n      0x00\n        /* \"#utility.yul\":22371:22380   */\n      dup4\n        /* \"#utility.yul\":22367:22384   */\n      add\n        /* \"#utility.yul\":22358:22364   */\n      dup6\n        /* \"#utility.yul\":22314:22385   */\n      tag_253\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":22395:22467   */\n      tag_559\n        /* \"#utility.yul\":22463:22465   */\n      0x20\n        /* \"#utility.yul\":22452:22461   */\n      dup4\n        /* \"#utility.yul\":22448:22466   */\n      add\n        /* \"#utility.yul\":22439:22445   */\n      dup5\n        /* \"#utility.yul\":22395:22467   */\n      tag_253\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":22142:22474   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22480:22660   */\n    tag_112:\n        /* \"#utility.yul\":22528:22605   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22525:22526   */\n      0x00\n        /* \"#utility.yul\":22518:22606   */\n      mstore\n        /* \"#utility.yul\":22625:22629   */\n      0x32\n        /* \"#utility.yul\":22622:22623   */\n      0x04\n        /* \"#utility.yul\":22615:22630   */\n      mstore\n        /* \"#utility.yul\":22649:22653   */\n      0x24\n        /* \"#utility.yul\":22646:22647   */\n      0x00\n        /* \"#utility.yul\":22639:22654   */\n      revert\n        /* \"#utility.yul\":22666:22888   */\n    tag_134:\n        /* \"#utility.yul\":22759:22763   */\n      0x00\n        /* \"#utility.yul\":22797:22799   */\n      0x20\n        /* \"#utility.yul\":22786:22795   */\n      dup3\n        /* \"#utility.yul\":22782:22800   */\n      add\n        /* \"#utility.yul\":22774:22800   */\n      swap1\n      pop\n        /* \"#utility.yul\":22810:22881   */\n      tag_562\n        /* \"#utility.yul\":22878:22879   */\n      0x00\n        /* \"#utility.yul\":22867:22876   */\n      dup4\n        /* \"#utility.yul\":22863:22880   */\n      add\n        /* \"#utility.yul\":22854:22860   */\n      dup5\n        /* \"#utility.yul\":22810:22881   */\n      tag_296\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":22666:22888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22894:22987   */\n    tag_297:\n        /* \"#utility.yul\":22931:22937   */\n      0x00\n        /* \"#utility.yul\":22978:22980   */\n      0x20\n        /* \"#utility.yul\":22973:22975   */\n      0x1f\n        /* \"#utility.yul\":22966:22971   */\n      dup4\n        /* \"#utility.yul\":22962:22976   */\n      add\n        /* \"#utility.yul\":22958:22981   */\n      div\n        /* \"#utility.yul\":22948:22981   */\n      swap1\n      pop\n        /* \"#utility.yul\":22894:22987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22993:23100   */\n    tag_298:\n        /* \"#utility.yul\":23037:23045   */\n      0x00\n        /* \"#utility.yul\":23087:23092   */\n      dup3\n        /* \"#utility.yul\":23081:23085   */\n      dup3\n        /* \"#utility.yul\":23077:23093   */\n      shl\n        /* \"#utility.yul\":23056:23093   */\n      swap1\n      pop\n        /* \"#utility.yul\":22993:23100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23106:23499   */\n    tag_299:\n        /* \"#utility.yul\":23175:23181   */\n      0x00\n        /* \"#utility.yul\":23225:23226   */\n      0x08\n        /* \"#utility.yul\":23213:23223   */\n      dup4\n        /* \"#utility.yul\":23209:23227   */\n      mul\n        /* \"#utility.yul\":23248:23345   */\n      tag_566\n        /* \"#utility.yul\":23278:23344   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23267:23276   */\n      dup3\n        /* \"#utility.yul\":23248:23345   */\n      tag_298\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":23366:23405   */\n      tag_567\n        /* \"#utility.yul\":23396:23404   */\n      dup7\n        /* \"#utility.yul\":23385:23394   */\n      dup4\n        /* \"#utility.yul\":23366:23405   */\n      tag_298\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":23354:23405   */\n      swap6\n      pop\n        /* \"#utility.yul\":23438:23442   */\n      dup1\n        /* \"#utility.yul\":23434:23443   */\n      not\n        /* \"#utility.yul\":23427:23432   */\n      dup5\n        /* \"#utility.yul\":23423:23444   */\n      and\n        /* \"#utility.yul\":23414:23444   */\n      swap4\n      pop\n        /* \"#utility.yul\":23487:23491   */\n      dup1\n        /* \"#utility.yul\":23477:23485   */\n      dup7\n        /* \"#utility.yul\":23473:23492   */\n      and\n        /* \"#utility.yul\":23466:23471   */\n      dup5\n        /* \"#utility.yul\":23463:23493   */\n      or\n        /* \"#utility.yul\":23453:23493   */\n      swap3\n      pop\n        /* \"#utility.yul\":23182:23499   */\n      pop\n      pop\n        /* \"#utility.yul\":23106:23499   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23505:23565   */\n    tag_300:\n        /* \"#utility.yul\":23533:23536   */\n      0x00\n        /* \"#utility.yul\":23554:23559   */\n      dup2\n        /* \"#utility.yul\":23547:23559   */\n      swap1\n      pop\n        /* \"#utility.yul\":23505:23565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23571:23713   */\n    tag_301:\n        /* \"#utility.yul\":23621:23630   */\n      0x00\n        /* \"#utility.yul\":23654:23707   */\n      tag_570\n        /* \"#utility.yul\":23672:23706   */\n      tag_571\n        /* \"#utility.yul\":23681:23705   */\n      tag_572\n        /* \"#utility.yul\":23699:23704   */\n      dup5\n        /* \"#utility.yul\":23681:23705   */\n      tag_250\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":23672:23706   */\n      tag_300\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":23654:23707   */\n      tag_250\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":23641:23707   */\n      swap1\n      pop\n        /* \"#utility.yul\":23571:23713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23719:23794   */\n    tag_302:\n        /* \"#utility.yul\":23762:23765   */\n      0x00\n        /* \"#utility.yul\":23783:23788   */\n      dup2\n        /* \"#utility.yul\":23776:23788   */\n      swap1\n      pop\n        /* \"#utility.yul\":23719:23794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23800:24069   */\n    tag_303:\n        /* \"#utility.yul\":23910:23949   */\n      tag_575\n        /* \"#utility.yul\":23941:23948   */\n      dup4\n        /* \"#utility.yul\":23910:23949   */\n      tag_301\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":23971:24062   */\n      tag_576\n        /* \"#utility.yul\":24020:24061   */\n      tag_577\n        /* \"#utility.yul\":24044:24060   */\n      dup3\n        /* \"#utility.yul\":24020:24061   */\n      tag_302\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":24012:24018   */\n      dup5\n        /* \"#utility.yul\":24005:24009   */\n      dup5\n        /* \"#utility.yul\":23999:24010   */\n      sload\n        /* \"#utility.yul\":23971:24062   */\n      tag_299\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":23965:23969   */\n      dup3\n        /* \"#utility.yul\":23958:24063   */\n      sstore\n        /* \"#utility.yul\":23876:24069   */\n      pop\n        /* \"#utility.yul\":23800:24069   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24075:24148   */\n    tag_304:\n        /* \"#utility.yul\":24120:24123   */\n      0x00\n        /* \"#utility.yul\":24075:24148   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24154:24343   */\n    tag_305:\n        /* \"#utility.yul\":24231:24263   */\n      tag_580\n      tag_304\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":24272:24337   */\n      tag_581\n        /* \"#utility.yul\":24330:24336   */\n      dup2\n        /* \"#utility.yul\":24322:24328   */\n      dup5\n        /* \"#utility.yul\":24316:24320   */\n      dup5\n        /* \"#utility.yul\":24272:24337   */\n      tag_303\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":24207:24343   */\n      pop\n        /* \"#utility.yul\":24154:24343   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24349:24535   */\n    tag_306:\n        /* \"#utility.yul\":24409:24529   */\n    tag_583:\n        /* \"#utility.yul\":24426:24429   */\n      dup2\n        /* \"#utility.yul\":24419:24424   */\n      dup2\n        /* \"#utility.yul\":24416:24430   */\n      lt\n        /* \"#utility.yul\":24409:24529   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":24480:24519   */\n      tag_586\n        /* \"#utility.yul\":24517:24518   */\n      0x00\n        /* \"#utility.yul\":24510:24515   */\n      dup3\n        /* \"#utility.yul\":24480:24519   */\n      tag_305\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":24453:24454   */\n      0x01\n        /* \"#utility.yul\":24446:24451   */\n      dup2\n        /* \"#utility.yul\":24442:24455   */\n      add\n        /* \"#utility.yul\":24433:24455   */\n      swap1\n      pop\n        /* \"#utility.yul\":24409:24529   */\n      jump(tag_583)\n    tag_585:\n        /* \"#utility.yul\":24349:24535   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24541:25084   */\n    tag_307:\n        /* \"#utility.yul\":24642:24644   */\n      0x1f\n        /* \"#utility.yul\":24637:24640   */\n      dup3\n        /* \"#utility.yul\":24634:24645   */\n      gt\n        /* \"#utility.yul\":24631:25077   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":24676:24714   */\n      tag_589\n        /* \"#utility.yul\":24708:24713   */\n      dup2\n        /* \"#utility.yul\":24676:24714   */\n      tag_294\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":24760:24789   */\n      tag_590\n        /* \"#utility.yul\":24778:24788   */\n      dup5\n        /* \"#utility.yul\":24760:24789   */\n      tag_297\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":24750:24758   */\n      dup2\n        /* \"#utility.yul\":24746:24790   */\n      add\n        /* \"#utility.yul\":24943:24945   */\n      0x20\n        /* \"#utility.yul\":24931:24941   */\n      dup6\n        /* \"#utility.yul\":24928:24946   */\n      lt\n        /* \"#utility.yul\":24925:24974   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":24964:24972   */\n      dup2\n        /* \"#utility.yul\":24949:24972   */\n      swap1\n      pop\n        /* \"#utility.yul\":24925:24974   */\n    tag_591:\n        /* \"#utility.yul\":24987:25067   */\n      tag_592\n        /* \"#utility.yul\":25043:25065   */\n      tag_593\n        /* \"#utility.yul\":25061:25064   */\n      dup6\n        /* \"#utility.yul\":25043:25065   */\n      tag_297\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":25033:25041   */\n      dup4\n        /* \"#utility.yul\":25029:25066   */\n      add\n        /* \"#utility.yul\":25016:25027   */\n      dup3\n        /* \"#utility.yul\":24987:25067   */\n      tag_306\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":24646:25077   */\n      pop\n      pop\n        /* \"#utility.yul\":24631:25077   */\n    tag_588:\n        /* \"#utility.yul\":24541:25084   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25090:25207   */\n    tag_308:\n        /* \"#utility.yul\":25144:25152   */\n      0x00\n        /* \"#utility.yul\":25194:25199   */\n      dup3\n        /* \"#utility.yul\":25188:25192   */\n      dup3\n        /* \"#utility.yul\":25184:25200   */\n      shr\n        /* \"#utility.yul\":25163:25200   */\n      swap1\n      pop\n        /* \"#utility.yul\":25090:25207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25213:25382   */\n    tag_309:\n        /* \"#utility.yul\":25257:25263   */\n      0x00\n        /* \"#utility.yul\":25290:25341   */\n      tag_596\n        /* \"#utility.yul\":25338:25339   */\n      0x00\n        /* \"#utility.yul\":25334:25340   */\n      not\n        /* \"#utility.yul\":25326:25331   */\n      dup5\n        /* \"#utility.yul\":25323:25324   */\n      0x08\n        /* \"#utility.yul\":25319:25332   */\n      mul\n        /* \"#utility.yul\":25290:25341   */\n      tag_308\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":25286:25342   */\n      not\n        /* \"#utility.yul\":25371:25375   */\n      dup1\n        /* \"#utility.yul\":25365:25369   */\n      dup4\n        /* \"#utility.yul\":25361:25376   */\n      and\n        /* \"#utility.yul\":25351:25376   */\n      swap2\n      pop\n        /* \"#utility.yul\":25264:25382   */\n      pop\n        /* \"#utility.yul\":25213:25382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25387:25682   */\n    tag_310:\n        /* \"#utility.yul\":25463:25467   */\n      0x00\n        /* \"#utility.yul\":25609:25638   */\n      tag_598\n        /* \"#utility.yul\":25634:25637   */\n      dup4\n        /* \"#utility.yul\":25628:25632   */\n      dup4\n        /* \"#utility.yul\":25609:25638   */\n      tag_309\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":25601:25638   */\n      swap2\n      pop\n        /* \"#utility.yul\":25671:25674   */\n      dup3\n        /* \"#utility.yul\":25668:25669   */\n      0x02\n        /* \"#utility.yul\":25664:25675   */\n      mul\n        /* \"#utility.yul\":25658:25662   */\n      dup3\n        /* \"#utility.yul\":25655:25676   */\n      or\n        /* \"#utility.yul\":25647:25676   */\n      swap1\n      pop\n        /* \"#utility.yul\":25387:25682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25687:27082   */\n    tag_141:\n        /* \"#utility.yul\":25804:25841   */\n      tag_600\n        /* \"#utility.yul\":25837:25840   */\n      dup3\n        /* \"#utility.yul\":25804:25841   */\n      tag_268\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":25906:25924   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25898:25904   */\n      dup2\n        /* \"#utility.yul\":25895:25925   */\n      gt\n        /* \"#utility.yul\":25892:25948   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":25928:25946   */\n      tag_602\n      tag_100\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":25892:25948   */\n    tag_601:\n        /* \"#utility.yul\":25972:26010   */\n      tag_603\n        /* \"#utility.yul\":26004:26008   */\n      dup3\n        /* \"#utility.yul\":25998:26009   */\n      sload\n        /* \"#utility.yul\":25972:26010   */\n      tag_144\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":26057:26124   */\n      tag_604\n        /* \"#utility.yul\":26117:26123   */\n      dup3\n        /* \"#utility.yul\":26109:26115   */\n      dup3\n        /* \"#utility.yul\":26103:26107   */\n      dup6\n        /* \"#utility.yul\":26057:26124   */\n      tag_307\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":26151:26152   */\n      0x00\n        /* \"#utility.yul\":26175:26179   */\n      0x20\n        /* \"#utility.yul\":26162:26179   */\n      swap1\n      pop\n        /* \"#utility.yul\":26207:26209   */\n      0x1f\n        /* \"#utility.yul\":26199:26205   */\n      dup4\n        /* \"#utility.yul\":26196:26210   */\n      gt\n        /* \"#utility.yul\":26224:26225   */\n      0x01\n        /* \"#utility.yul\":26219:26837   */\n      dup2\n      eq\n      tag_606\n      jumpi\n        /* \"#utility.yul\":26881:26882   */\n      0x00\n        /* \"#utility.yul\":26898:26904   */\n      dup5\n        /* \"#utility.yul\":26895:26972   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":26947:26956   */\n      dup3\n        /* \"#utility.yul\":26942:26945   */\n      dup8\n        /* \"#utility.yul\":26938:26957   */\n      add\n        /* \"#utility.yul\":26932:26958   */\n      mload\n        /* \"#utility.yul\":26923:26958   */\n      swap1\n      pop\n        /* \"#utility.yul\":26895:26972   */\n    tag_607:\n        /* \"#utility.yul\":26998:27065   */\n      tag_608\n        /* \"#utility.yul\":27058:27064   */\n      dup6\n        /* \"#utility.yul\":27051:27056   */\n      dup3\n        /* \"#utility.yul\":26998:27065   */\n      tag_310\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":26992:26996   */\n      dup7\n        /* \"#utility.yul\":26985:27066   */\n      sstore\n        /* \"#utility.yul\":26854:27076   */\n      pop\n        /* \"#utility.yul\":26189:27076   */\n      jump(tag_605)\n        /* \"#utility.yul\":26219:26837   */\n    tag_606:\n        /* \"#utility.yul\":26271:26275   */\n      0x1f\n        /* \"#utility.yul\":26267:26276   */\n      not\n        /* \"#utility.yul\":26259:26265   */\n      dup5\n        /* \"#utility.yul\":26255:26277   */\n      and\n        /* \"#utility.yul\":26305:26342   */\n      tag_609\n        /* \"#utility.yul\":26337:26341   */\n      dup7\n        /* \"#utility.yul\":26305:26342   */\n      tag_294\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":26364:26365   */\n      0x00\n        /* \"#utility.yul\":26378:26586   */\n    tag_610:\n        /* \"#utility.yul\":26392:26399   */\n      dup3\n        /* \"#utility.yul\":26389:26390   */\n      dup2\n        /* \"#utility.yul\":26386:26400   */\n      lt\n        /* \"#utility.yul\":26378:26586   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":26471:26480   */\n      dup5\n        /* \"#utility.yul\":26466:26469   */\n      dup10\n        /* \"#utility.yul\":26462:26481   */\n      add\n        /* \"#utility.yul\":26456:26482   */\n      mload\n        /* \"#utility.yul\":26448:26454   */\n      dup3\n        /* \"#utility.yul\":26441:26483   */\n      sstore\n        /* \"#utility.yul\":26522:26523   */\n      0x01\n        /* \"#utility.yul\":26514:26520   */\n      dup3\n        /* \"#utility.yul\":26510:26524   */\n      add\n        /* \"#utility.yul\":26500:26524   */\n      swap2\n      pop\n        /* \"#utility.yul\":26569:26571   */\n      0x20\n        /* \"#utility.yul\":26558:26567   */\n      dup6\n        /* \"#utility.yul\":26554:26572   */\n      add\n        /* \"#utility.yul\":26541:26572   */\n      swap5\n      pop\n        /* \"#utility.yul\":26415:26419   */\n      0x20\n        /* \"#utility.yul\":26412:26413   */\n      dup2\n        /* \"#utility.yul\":26408:26420   */\n      add\n        /* \"#utility.yul\":26403:26420   */\n      swap1\n      pop\n        /* \"#utility.yul\":26378:26586   */\n      jump(tag_610)\n    tag_612:\n        /* \"#utility.yul\":26614:26620   */\n      dup7\n        /* \"#utility.yul\":26605:26612   */\n      dup4\n        /* \"#utility.yul\":26602:26621   */\n      lt\n        /* \"#utility.yul\":26599:26778   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":26672:26681   */\n      dup5\n        /* \"#utility.yul\":26667:26670   */\n      dup10\n        /* \"#utility.yul\":26663:26682   */\n      add\n        /* \"#utility.yul\":26657:26683   */\n      mload\n        /* \"#utility.yul\":26715:26763   */\n      tag_614\n        /* \"#utility.yul\":26757:26761   */\n      0x1f\n        /* \"#utility.yul\":26749:26755   */\n      dup10\n        /* \"#utility.yul\":26745:26762   */\n      and\n        /* \"#utility.yul\":26734:26743   */\n      dup3\n        /* \"#utility.yul\":26715:26763   */\n      tag_309\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":26707:26713   */\n      dup4\n        /* \"#utility.yul\":26700:26764   */\n      sstore\n        /* \"#utility.yul\":26622:26778   */\n      pop\n        /* \"#utility.yul\":26599:26778   */\n    tag_613:\n        /* \"#utility.yul\":26824:26825   */\n      0x01\n        /* \"#utility.yul\":26820:26821   */\n      0x02\n        /* \"#utility.yul\":26812:26818   */\n      dup9\n        /* \"#utility.yul\":26808:26822   */\n      mul\n        /* \"#utility.yul\":26804:26826   */\n      add\n        /* \"#utility.yul\":26798:26802   */\n      dup9\n        /* \"#utility.yul\":26791:26827   */\n      sstore\n        /* \"#utility.yul\":26226:26837   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26189:27076   */\n    tag_605:\n      pop\n        /* \"#utility.yul\":25779:27082   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25687:27082   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27088:27641   */\n    tag_195:\n        /* \"#utility.yul\":27265:27269   */\n      0x00\n        /* \"#utility.yul\":27303:27306   */\n      0x80\n        /* \"#utility.yul\":27292:27301   */\n      dup3\n        /* \"#utility.yul\":27288:27307   */\n      add\n        /* \"#utility.yul\":27280:27307   */\n      swap1\n      pop\n        /* \"#utility.yul\":27317:27388   */\n      tag_616\n        /* \"#utility.yul\":27385:27386   */\n      0x00\n        /* \"#utility.yul\":27374:27383   */\n      dup4\n        /* \"#utility.yul\":27370:27387   */\n      add\n        /* \"#utility.yul\":27361:27367   */\n      dup8\n        /* \"#utility.yul\":27317:27388   */\n      tag_296\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":27398:27470   */\n      tag_617\n        /* \"#utility.yul\":27466:27468   */\n      0x20\n        /* \"#utility.yul\":27455:27464   */\n      dup4\n        /* \"#utility.yul\":27451:27469   */\n      add\n        /* \"#utility.yul\":27442:27448   */\n      dup7\n        /* \"#utility.yul\":27398:27470   */\n      tag_253\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":27480:27552   */\n      tag_618\n        /* \"#utility.yul\":27548:27550   */\n      0x40\n        /* \"#utility.yul\":27537:27546   */\n      dup4\n        /* \"#utility.yul\":27533:27551   */\n      add\n        /* \"#utility.yul\":27524:27530   */\n      dup6\n        /* \"#utility.yul\":27480:27552   */\n      tag_253\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":27562:27634   */\n      tag_619\n        /* \"#utility.yul\":27630:27632   */\n      0x60\n        /* \"#utility.yul\":27619:27628   */\n      dup4\n        /* \"#utility.yul\":27615:27633   */\n      add\n        /* \"#utility.yul\":27606:27612   */\n      dup5\n        /* \"#utility.yul\":27562:27634   */\n      tag_253\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":27088:27641   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27647:27827   */\n    tag_311:\n        /* \"#utility.yul\":27695:27772   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27692:27693   */\n      0x00\n        /* \"#utility.yul\":27685:27773   */\n      mstore\n        /* \"#utility.yul\":27792:27796   */\n      0x11\n        /* \"#utility.yul\":27789:27790   */\n      0x04\n        /* \"#utility.yul\":27782:27797   */\n      mstore\n        /* \"#utility.yul\":27816:27820   */\n      0x24\n        /* \"#utility.yul\":27813:27814   */\n      0x00\n        /* \"#utility.yul\":27806:27821   */\n      revert\n        /* \"#utility.yul\":27833:28024   */\n    tag_198:\n        /* \"#utility.yul\":27873:27876   */\n      0x00\n        /* \"#utility.yul\":27892:27912   */\n      tag_622\n        /* \"#utility.yul\":27910:27911   */\n      dup3\n        /* \"#utility.yul\":27892:27912   */\n      tag_250\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":27887:27912   */\n      swap2\n      pop\n        /* \"#utility.yul\":27926:27946   */\n      tag_623\n        /* \"#utility.yul\":27944:27945   */\n      dup4\n        /* \"#utility.yul\":27926:27946   */\n      tag_250\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":27921:27946   */\n      swap3\n      pop\n        /* \"#utility.yul\":27969:27970   */\n      dup3\n        /* \"#utility.yul\":27966:27967   */\n      dup3\n        /* \"#utility.yul\":27962:27971   */\n      add\n        /* \"#utility.yul\":27955:27971   */\n      swap1\n      pop\n        /* \"#utility.yul\":27990:27993   */\n      dup1\n        /* \"#utility.yul\":27987:27988   */\n      dup3\n        /* \"#utility.yul\":27984:27994   */\n      gt\n        /* \"#utility.yul\":27981:28017   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":27997:28015   */\n      tag_625\n      tag_311\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":27981:28017   */\n    tag_624:\n        /* \"#utility.yul\":27833:28024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28030:28664   */\n    tag_205:\n        /* \"#utility.yul\":28251:28255   */\n      0x00\n        /* \"#utility.yul\":28289:28291   */\n      0x40\n        /* \"#utility.yul\":28278:28287   */\n      dup3\n        /* \"#utility.yul\":28274:28292   */\n      add\n        /* \"#utility.yul\":28266:28292   */\n      swap1\n      pop\n        /* \"#utility.yul\":28338:28347   */\n      dup2\n        /* \"#utility.yul\":28332:28336   */\n      dup2\n        /* \"#utility.yul\":28328:28348   */\n      sub\n        /* \"#utility.yul\":28324:28325   */\n      0x00\n        /* \"#utility.yul\":28313:28322   */\n      dup4\n        /* \"#utility.yul\":28309:28326   */\n      add\n        /* \"#utility.yul\":28302:28349   */\n      mstore\n        /* \"#utility.yul\":28366:28474   */\n      tag_627\n        /* \"#utility.yul\":28469:28473   */\n      dup2\n        /* \"#utility.yul\":28460:28466   */\n      dup6\n        /* \"#utility.yul\":28366:28474   */\n      tag_288\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":28358:28474   */\n      swap1\n      pop\n        /* \"#utility.yul\":28521:28530   */\n      dup2\n        /* \"#utility.yul\":28515:28519   */\n      dup2\n        /* \"#utility.yul\":28511:28531   */\n      sub\n        /* \"#utility.yul\":28506:28508   */\n      0x20\n        /* \"#utility.yul\":28495:28504   */\n      dup4\n        /* \"#utility.yul\":28491:28509   */\n      add\n        /* \"#utility.yul\":28484:28532   */\n      mstore\n        /* \"#utility.yul\":28549:28657   */\n      tag_628\n        /* \"#utility.yul\":28652:28656   */\n      dup2\n        /* \"#utility.yul\":28643:28649   */\n      dup5\n        /* \"#utility.yul\":28549:28657   */\n      tag_288\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":28541:28657   */\n      swap1\n      pop\n        /* \"#utility.yul\":28030:28664   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28670:28768   */\n    tag_312:\n        /* \"#utility.yul\":28721:28727   */\n      0x00\n        /* \"#utility.yul\":28755:28760   */\n      dup2\n        /* \"#utility.yul\":28749:28761   */\n      mload\n        /* \"#utility.yul\":28739:28761   */\n      swap1\n      pop\n        /* \"#utility.yul\":28670:28768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28774:28942   */\n    tag_313:\n        /* \"#utility.yul\":28857:28868   */\n      0x00\n        /* \"#utility.yul\":28891:28897   */\n      dup3\n        /* \"#utility.yul\":28886:28889   */\n      dup3\n        /* \"#utility.yul\":28879:28898   */\n      mstore\n        /* \"#utility.yul\":28931:28935   */\n      0x20\n        /* \"#utility.yul\":28926:28929   */\n      dup3\n        /* \"#utility.yul\":28922:28936   */\n      add\n        /* \"#utility.yul\":28907:28936   */\n      swap1\n      pop\n        /* \"#utility.yul\":28774:28942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28948:29321   */\n    tag_314:\n        /* \"#utility.yul\":29034:29037   */\n      0x00\n        /* \"#utility.yul\":29062:29100   */\n      tag_632\n        /* \"#utility.yul\":29094:29099   */\n      dup3\n        /* \"#utility.yul\":29062:29100   */\n      tag_312\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":29116:29186   */\n      tag_633\n        /* \"#utility.yul\":29179:29185   */\n      dup2\n        /* \"#utility.yul\":29174:29177   */\n      dup6\n        /* \"#utility.yul\":29116:29186   */\n      tag_313\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":29109:29186   */\n      swap4\n      pop\n        /* \"#utility.yul\":29195:29260   */\n      tag_634\n        /* \"#utility.yul\":29253:29259   */\n      dup2\n        /* \"#utility.yul\":29248:29251   */\n      dup6\n        /* \"#utility.yul\":29241:29245   */\n      0x20\n        /* \"#utility.yul\":29234:29239   */\n      dup7\n        /* \"#utility.yul\":29230:29246   */\n      add\n        /* \"#utility.yul\":29195:29260   */\n      tag_270\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":29285:29314   */\n      tag_635\n        /* \"#utility.yul\":29307:29313   */\n      dup2\n        /* \"#utility.yul\":29285:29314   */\n      tag_261\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":29280:29283   */\n      dup5\n        /* \"#utility.yul\":29276:29315   */\n      add\n        /* \"#utility.yul\":29269:29315   */\n      swap2\n      pop\n        /* \"#utility.yul\":29038:29321   */\n      pop\n        /* \"#utility.yul\":28948:29321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29327:30078   */\n    tag_209:\n        /* \"#utility.yul\":29550:29554   */\n      0x00\n        /* \"#utility.yul\":29588:29591   */\n      0xa0\n        /* \"#utility.yul\":29577:29586   */\n      dup3\n        /* \"#utility.yul\":29573:29592   */\n      add\n        /* \"#utility.yul\":29565:29592   */\n      swap1\n      pop\n        /* \"#utility.yul\":29602:29673   */\n      tag_637\n        /* \"#utility.yul\":29670:29671   */\n      0x00\n        /* \"#utility.yul\":29659:29668   */\n      dup4\n        /* \"#utility.yul\":29655:29672   */\n      add\n        /* \"#utility.yul\":29646:29652   */\n      dup9\n        /* \"#utility.yul\":29602:29673   */\n      tag_296\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":29683:29755   */\n      tag_638\n        /* \"#utility.yul\":29751:29753   */\n      0x20\n        /* \"#utility.yul\":29740:29749   */\n      dup4\n        /* \"#utility.yul\":29736:29754   */\n      add\n        /* \"#utility.yul\":29727:29733   */\n      dup8\n        /* \"#utility.yul\":29683:29755   */\n      tag_296\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":29765:29837   */\n      tag_639\n        /* \"#utility.yul\":29833:29835   */\n      0x40\n        /* \"#utility.yul\":29822:29831   */\n      dup4\n        /* \"#utility.yul\":29818:29836   */\n      add\n        /* \"#utility.yul\":29809:29815   */\n      dup7\n        /* \"#utility.yul\":29765:29837   */\n      tag_253\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":29847:29919   */\n      tag_640\n        /* \"#utility.yul\":29915:29917   */\n      0x60\n        /* \"#utility.yul\":29904:29913   */\n      dup4\n        /* \"#utility.yul\":29900:29918   */\n      add\n        /* \"#utility.yul\":29891:29897   */\n      dup6\n        /* \"#utility.yul\":29847:29919   */\n      tag_253\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":29967:29976   */\n      dup2\n        /* \"#utility.yul\":29961:29965   */\n      dup2\n        /* \"#utility.yul\":29957:29977   */\n      sub\n        /* \"#utility.yul\":29951:29954   */\n      0x80\n        /* \"#utility.yul\":29940:29949   */\n      dup4\n        /* \"#utility.yul\":29936:29955   */\n      add\n        /* \"#utility.yul\":29929:29978   */\n      mstore\n        /* \"#utility.yul\":29995:30071   */\n      tag_641\n        /* \"#utility.yul\":30066:30070   */\n      dup2\n        /* \"#utility.yul\":30057:30063   */\n      dup5\n        /* \"#utility.yul\":29995:30071   */\n      tag_314\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":29987:30071   */\n      swap1\n      pop\n        /* \"#utility.yul\":29327:30078   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30084:30225   */\n    tag_315:\n        /* \"#utility.yul\":30140:30145   */\n      0x00\n        /* \"#utility.yul\":30171:30177   */\n      dup2\n        /* \"#utility.yul\":30165:30178   */\n      mload\n        /* \"#utility.yul\":30156:30178   */\n      swap1\n      pop\n        /* \"#utility.yul\":30187:30219   */\n      tag_643\n        /* \"#utility.yul\":30213:30218   */\n      dup2\n        /* \"#utility.yul\":30187:30219   */\n      tag_255\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":30084:30225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30231:30580   */\n    tag_212:\n        /* \"#utility.yul\":30300:30306   */\n      0x00\n        /* \"#utility.yul\":30349:30351   */\n      0x20\n        /* \"#utility.yul\":30337:30346   */\n      dup3\n        /* \"#utility.yul\":30328:30335   */\n      dup5\n        /* \"#utility.yul\":30324:30347   */\n      sub\n        /* \"#utility.yul\":30320:30352   */\n      slt\n        /* \"#utility.yul\":30317:30436   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":30355:30434   */\n      tag_646\n      tag_244\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":30317:30436   */\n    tag_645:\n        /* \"#utility.yul\":30475:30476   */\n      0x00\n        /* \"#utility.yul\":30500:30563   */\n      tag_647\n        /* \"#utility.yul\":30555:30562   */\n      dup5\n        /* \"#utility.yul\":30546:30552   */\n      dup3\n        /* \"#utility.yul\":30535:30544   */\n      dup6\n        /* \"#utility.yul\":30531:30553   */\n      add\n        /* \"#utility.yul\":30500:30563   */\n      tag_315\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":30490:30563   */\n      swap2\n      pop\n        /* \"#utility.yul\":30446:30573   */\n      pop\n        /* \"#utility.yul\":30231:30580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30586:31639   */\n    tag_228:\n        /* \"#utility.yul\":30909:30913   */\n      0x00\n        /* \"#utility.yul\":30947:30950   */\n      0xa0\n        /* \"#utility.yul\":30936:30945   */\n      dup3\n        /* \"#utility.yul\":30932:30951   */\n      add\n        /* \"#utility.yul\":30924:30951   */\n      swap1\n      pop\n        /* \"#utility.yul\":30961:31032   */\n      tag_649\n        /* \"#utility.yul\":31029:31030   */\n      0x00\n        /* \"#utility.yul\":31018:31027   */\n      dup4\n        /* \"#utility.yul\":31014:31031   */\n      add\n        /* \"#utility.yul\":31005:31011   */\n      dup9\n        /* \"#utility.yul\":30961:31032   */\n      tag_296\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":31042:31114   */\n      tag_650\n        /* \"#utility.yul\":31110:31112   */\n      0x20\n        /* \"#utility.yul\":31099:31108   */\n      dup4\n        /* \"#utility.yul\":31095:31113   */\n      add\n        /* \"#utility.yul\":31086:31092   */\n      dup8\n        /* \"#utility.yul\":31042:31114   */\n      tag_296\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":31161:31170   */\n      dup2\n        /* \"#utility.yul\":31155:31159   */\n      dup2\n        /* \"#utility.yul\":31151:31171   */\n      sub\n        /* \"#utility.yul\":31146:31148   */\n      0x40\n        /* \"#utility.yul\":31135:31144   */\n      dup4\n        /* \"#utility.yul\":31131:31149   */\n      add\n        /* \"#utility.yul\":31124:31172   */\n      mstore\n        /* \"#utility.yul\":31189:31297   */\n      tag_651\n        /* \"#utility.yul\":31292:31296   */\n      dup2\n        /* \"#utility.yul\":31283:31289   */\n      dup7\n        /* \"#utility.yul\":31189:31297   */\n      tag_288\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":31181:31297   */\n      swap1\n      pop\n        /* \"#utility.yul\":31344:31353   */\n      dup2\n        /* \"#utility.yul\":31338:31342   */\n      dup2\n        /* \"#utility.yul\":31334:31354   */\n      sub\n        /* \"#utility.yul\":31329:31331   */\n      0x60\n        /* \"#utility.yul\":31318:31327   */\n      dup4\n        /* \"#utility.yul\":31314:31332   */\n      add\n        /* \"#utility.yul\":31307:31355   */\n      mstore\n        /* \"#utility.yul\":31372:31480   */\n      tag_652\n        /* \"#utility.yul\":31475:31479   */\n      dup2\n        /* \"#utility.yul\":31466:31472   */\n      dup6\n        /* \"#utility.yul\":31372:31480   */\n      tag_288\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":31364:31480   */\n      swap1\n      pop\n        /* \"#utility.yul\":31528:31537   */\n      dup2\n        /* \"#utility.yul\":31522:31526   */\n      dup2\n        /* \"#utility.yul\":31518:31538   */\n      sub\n        /* \"#utility.yul\":31512:31515   */\n      0x80\n        /* \"#utility.yul\":31501:31510   */\n      dup4\n        /* \"#utility.yul\":31497:31516   */\n      add\n        /* \"#utility.yul\":31490:31539   */\n      mstore\n        /* \"#utility.yul\":31556:31632   */\n      tag_653\n        /* \"#utility.yul\":31627:31631   */\n      dup2\n        /* \"#utility.yul\":31618:31624   */\n      dup5\n        /* \"#utility.yul\":31556:31632   */\n      tag_314\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":31548:31632   */\n      swap1\n      pop\n        /* \"#utility.yul\":30586:31639   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122017b8a8423b9774f6429be3d8d1a2429f036fcde274bdee8c77bf45d123666c2d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2879": {
									"entryPoint": null,
									"id": 2879,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setURI_810": {
									"entryPoint": 95,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:13",
										"nodeType": "YulBlock",
										"src": "0:5231:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:13",
													"nodeType": "YulBlock",
													"src": "66:40:13",
													"statements": [
														{
															"nativeSrc": "77:22:13",
															"nodeType": "YulAssignment",
															"src": "77:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:13"
																},
																"nativeSrc": "87:12:13",
																"nodeType": "YulFunctionCall",
																"src": "87:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:13",
														"nodeType": "YulTypedName",
														"src": "49:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:13",
														"nodeType": "YulTypedName",
														"src": "59:6:13",
														"type": ""
													}
												],
												"src": "7:99:13"
											},
											{
												"body": {
													"nativeSrc": "140:152:13",
													"nodeType": "YulBlock",
													"src": "140:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:13",
																		"nodeType": "YulLiteral",
																		"src": "157:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:13",
																		"nodeType": "YulLiteral",
																		"src": "160:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:13"
																},
																"nativeSrc": "150:88:13",
																"nodeType": "YulFunctionCall",
																"src": "150:88:13"
															},
															"nativeSrc": "150:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:13",
																		"nodeType": "YulLiteral",
																		"src": "254:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:13",
																		"nodeType": "YulLiteral",
																		"src": "257:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:13"
																},
																"nativeSrc": "247:15:13",
																"nodeType": "YulFunctionCall",
																"src": "247:15:13"
															},
															"nativeSrc": "247:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:13",
																		"nodeType": "YulLiteral",
																		"src": "278:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:13",
																		"nodeType": "YulLiteral",
																		"src": "281:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:13"
																},
																"nativeSrc": "271:15:13",
																"nodeType": "YulFunctionCall",
																"src": "271:15:13"
															},
															"nativeSrc": "271:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:13"
											},
											{
												"body": {
													"nativeSrc": "326:152:13",
													"nodeType": "YulBlock",
													"src": "326:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:13",
																		"nodeType": "YulLiteral",
																		"src": "343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:13",
																		"nodeType": "YulLiteral",
																		"src": "346:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:13"
																},
																"nativeSrc": "336:88:13",
																"nodeType": "YulFunctionCall",
																"src": "336:88:13"
															},
															"nativeSrc": "336:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:13",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:13",
																		"nodeType": "YulLiteral",
																		"src": "443:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nativeSrc": "433:15:13",
																"nodeType": "YulFunctionCall",
																"src": "433:15:13"
															},
															"nativeSrc": "433:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:13",
																		"nodeType": "YulLiteral",
																		"src": "464:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:13",
																		"nodeType": "YulLiteral",
																		"src": "467:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:13"
																},
																"nativeSrc": "457:15:13",
																"nodeType": "YulFunctionCall",
																"src": "457:15:13"
															},
															"nativeSrc": "457:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:13"
											},
											{
												"body": {
													"nativeSrc": "535:269:13",
													"nodeType": "YulBlock",
													"src": "535:269:13",
													"statements": [
														{
															"nativeSrc": "545:22:13",
															"nodeType": "YulAssignment",
															"src": "545:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "565:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:13"
																},
																"nativeSrc": "555:12:13",
																"nodeType": "YulFunctionCall",
																"src": "555:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:13"
																}
															]
														},
														{
															"nativeSrc": "576:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:13",
																		"nodeType": "YulLiteral",
																		"src": "612:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:13"
																},
																"nativeSrc": "602:12:13",
																"nodeType": "YulFunctionCall",
																"src": "602:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:13",
																	"nodeType": "YulTypedName",
																	"src": "580:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:13",
																"nodeType": "YulBlock",
																"src": "653:51:13",
																"statements": [
																	{
																		"nativeSrc": "667:27:13",
																		"nodeType": "YulAssignment",
																		"src": "667:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:13",
																					"nodeType": "YulLiteral",
																					"src": "689:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:13"
																			},
																			"nativeSrc": "677:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:13"
																},
																"nativeSrc": "626:26:13",
																"nodeType": "YulFunctionCall",
																"src": "626:26:13"
															},
															"nativeSrc": "623:81:13",
															"nodeType": "YulIf",
															"src": "623:81:13"
														},
														{
															"body": {
																"nativeSrc": "756:42:13",
																"nodeType": "YulBlock",
																"src": "756:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:13"
																			},
																			"nativeSrc": "770:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:13"
																		},
																		"nativeSrc": "770:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:13",
																				"nodeType": "YulLiteral",
																				"src": "751:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:13"
																		},
																		"nativeSrc": "740:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:13"
																},
																"nativeSrc": "717:38:13",
																"nodeType": "YulFunctionCall",
																"src": "717:38:13"
															},
															"nativeSrc": "714:84:13",
															"nodeType": "YulIf",
															"src": "714:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:13",
														"nodeType": "YulTypedName",
														"src": "519:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:13",
														"nodeType": "YulTypedName",
														"src": "528:6:13",
														"type": ""
													}
												],
												"src": "484:320:13"
											},
											{
												"body": {
													"nativeSrc": "864:87:13",
													"nodeType": "YulBlock",
													"src": "864:87:13",
													"statements": [
														{
															"nativeSrc": "874:11:13",
															"nodeType": "YulAssignment",
															"src": "874:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:13",
																"nodeType": "YulIdentifier",
																"src": "882:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:13",
																		"nodeType": "YulLiteral",
																		"src": "902:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:13"
																},
																"nativeSrc": "895:14:13",
																"nodeType": "YulFunctionCall",
																"src": "895:14:13"
															},
															"nativeSrc": "895:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:13"
														},
														{
															"nativeSrc": "918:26:13",
															"nodeType": "YulAssignment",
															"src": "918:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:13",
																		"nodeType": "YulLiteral",
																		"src": "936:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:13",
																		"nodeType": "YulLiteral",
																		"src": "939:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:13"
																},
																"nativeSrc": "926:18:13",
																"nodeType": "YulFunctionCall",
																"src": "926:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:13",
														"nodeType": "YulTypedName",
														"src": "851:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:13",
														"nodeType": "YulTypedName",
														"src": "859:4:13",
														"type": ""
													}
												],
												"src": "810:141:13"
											},
											{
												"body": {
													"nativeSrc": "1001:49:13",
													"nodeType": "YulBlock",
													"src": "1001:49:13",
													"statements": [
														{
															"nativeSrc": "1011:33:13",
															"nodeType": "YulAssignment",
															"src": "1011:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:13"
																		},
																		"nativeSrc": "1025:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:13"
																},
																"nativeSrc": "1021:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:13",
														"nodeType": "YulTypedName",
														"src": "984:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:13",
														"nodeType": "YulTypedName",
														"src": "994:6:13",
														"type": ""
													}
												],
												"src": "957:93:13"
											},
											{
												"body": {
													"nativeSrc": "1109:54:13",
													"nodeType": "YulBlock",
													"src": "1109:54:13",
													"statements": [
														{
															"nativeSrc": "1119:37:13",
															"nodeType": "YulAssignment",
															"src": "1119:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:13"
																},
																"nativeSrc": "1140:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:13",
														"nodeType": "YulTypedName",
														"src": "1084:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:13",
														"nodeType": "YulTypedName",
														"src": "1090:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:13",
														"nodeType": "YulTypedName",
														"src": "1100:8:13",
														"type": ""
													}
												],
												"src": "1056:107:13"
											},
											{
												"body": {
													"nativeSrc": "1245:317:13",
													"nodeType": "YulBlock",
													"src": "1245:317:13",
													"statements": [
														{
															"nativeSrc": "1255:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nativeSrc": "1272:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:13",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:13",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:13"
																},
																"nativeSrc": "1311:97:13",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:13",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:13",
															"nodeType": "YulAssignment",
															"src": "1417:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:13"
																},
																"nativeSrc": "1429:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:13"
																}
															]
														},
														{
															"nativeSrc": "1477:30:13",
															"nodeType": "YulAssignment",
															"src": "1477:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:13"
																		},
																		"nativeSrc": "1497:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:13"
																},
																"nativeSrc": "1486:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:13"
																}
															]
														},
														{
															"nativeSrc": "1516:40:13",
															"nodeType": "YulAssignment",
															"src": "1516:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:13"
																		},
																		"nativeSrc": "1536:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:13"
																},
																"nativeSrc": "1526:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:13",
														"nodeType": "YulTypedName",
														"src": "1206:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:13",
														"nodeType": "YulTypedName",
														"src": "1213:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:13",
														"nodeType": "YulTypedName",
														"src": "1225:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:13",
														"nodeType": "YulTypedName",
														"src": "1238:6:13",
														"type": ""
													}
												],
												"src": "1169:393:13"
											},
											{
												"body": {
													"nativeSrc": "1613:32:13",
													"nodeType": "YulBlock",
													"src": "1613:32:13",
													"statements": [
														{
															"nativeSrc": "1623:16:13",
															"nodeType": "YulAssignment",
															"src": "1623:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:13",
																"nodeType": "YulIdentifier",
																"src": "1634:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:13",
														"nodeType": "YulTypedName",
														"src": "1595:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:13",
														"nodeType": "YulTypedName",
														"src": "1605:7:13",
														"type": ""
													}
												],
												"src": "1568:77:13"
											},
											{
												"body": {
													"nativeSrc": "1683:28:13",
													"nodeType": "YulBlock",
													"src": "1683:28:13",
													"statements": [
														{
															"nativeSrc": "1693:12:13",
															"nodeType": "YulAssignment",
															"src": "1693:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:13",
																"nodeType": "YulIdentifier",
																"src": "1700:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:13",
														"nodeType": "YulTypedName",
														"src": "1669:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:13",
														"nodeType": "YulTypedName",
														"src": "1679:3:13",
														"type": ""
													}
												],
												"src": "1651:60:13"
											},
											{
												"body": {
													"nativeSrc": "1777:82:13",
													"nodeType": "YulBlock",
													"src": "1777:82:13",
													"statements": [
														{
															"nativeSrc": "1787:66:13",
															"nodeType": "YulAssignment",
															"src": "1787:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:13"
																				},
																				"nativeSrc": "1827:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:13"
																		},
																		"nativeSrc": "1818:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:13"
																},
																"nativeSrc": "1800:53:13",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:13",
														"nodeType": "YulTypedName",
														"src": "1757:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:13",
														"nodeType": "YulTypedName",
														"src": "1767:9:13",
														"type": ""
													}
												],
												"src": "1717:142:13"
											},
											{
												"body": {
													"nativeSrc": "1912:28:13",
													"nodeType": "YulBlock",
													"src": "1912:28:13",
													"statements": [
														{
															"nativeSrc": "1922:12:13",
															"nodeType": "YulAssignment",
															"src": "1922:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:13",
																"nodeType": "YulIdentifier",
																"src": "1929:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:13",
														"nodeType": "YulTypedName",
														"src": "1898:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:13",
														"nodeType": "YulTypedName",
														"src": "1908:3:13",
														"type": ""
													}
												],
												"src": "1865:75:13"
											},
											{
												"body": {
													"nativeSrc": "2022:193:13",
													"nodeType": "YulBlock",
													"src": "2022:193:13",
													"statements": [
														{
															"nativeSrc": "2032:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:13"
																},
																"nativeSrc": "2056:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:13",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:13"
																				},
																				"nativeSrc": "2145:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:13"
																				},
																				"nativeSrc": "2166:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:13"
																		},
																		"nativeSrc": "2117:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:13"
																},
																"nativeSrc": "2104:105:13",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:13"
															},
															"nativeSrc": "2104:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:13",
														"nodeType": "YulTypedName",
														"src": "1999:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:13",
														"nodeType": "YulTypedName",
														"src": "2005:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:13",
														"nodeType": "YulTypedName",
														"src": "2013:7:13",
														"type": ""
													}
												],
												"src": "1946:269:13"
											},
											{
												"body": {
													"nativeSrc": "2270:24:13",
													"nodeType": "YulBlock",
													"src": "2270:24:13",
													"statements": [
														{
															"nativeSrc": "2280:8:13",
															"nodeType": "YulAssignment",
															"src": "2280:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:13",
																"nodeType": "YulLiteral",
																"src": "2287:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:13",
														"nodeType": "YulTypedName",
														"src": "2266:3:13",
														"type": ""
													}
												],
												"src": "2221:73:13"
											},
											{
												"body": {
													"nativeSrc": "2353:136:13",
													"nodeType": "YulBlock",
													"src": "2353:136:13",
													"statements": [
														{
															"nativeSrc": "2363:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:13"
																},
																"nativeSrc": "2377:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:13"
																},
																"nativeSrc": "2418:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:13"
															},
															"nativeSrc": "2418:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:13",
														"nodeType": "YulTypedName",
														"src": "2339:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:13",
														"nodeType": "YulTypedName",
														"src": "2345:6:13",
														"type": ""
													}
												],
												"src": "2300:189:13"
											},
											{
												"body": {
													"nativeSrc": "2545:136:13",
													"nodeType": "YulBlock",
													"src": "2545:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:13",
																"nodeType": "YulBlock",
																"src": "2612:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:13"
																			},
																			"nativeSrc": "2626:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:13"
																		},
																		"nativeSrc": "2626:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:13"
																},
																"nativeSrc": "2562:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:13"
															},
															"nativeSrc": "2555:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:13",
																"nodeType": "YulBlock",
																"src": "2577:26:13",
																"statements": [
																	{
																		"nativeSrc": "2579:22:13",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:13"
																			},
																			"nativeSrc": "2588:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:13",
																"nodeType": "YulBlock",
																"src": "2559:2:13",
																"statements": []
															},
															"src": "2555:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:13",
														"nodeType": "YulTypedName",
														"src": "2533:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:13",
														"nodeType": "YulTypedName",
														"src": "2540:3:13",
														"type": ""
													}
												],
												"src": "2495:186:13"
											},
											{
												"body": {
													"nativeSrc": "2766:464:13",
													"nodeType": "YulBlock",
													"src": "2766:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:13",
																"nodeType": "YulBlock",
																"src": "2792:431:13",
																"statements": [
																	{
																		"nativeSrc": "2806:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:13"
																			},
																			"nativeSrc": "2822:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:13",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:13"
																					},
																					"nativeSrc": "2906:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:13"
																			},
																			"nativeSrc": "2892:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:13",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:13",
																			"nodeType": "YulBlock",
																			"src": "3093:27:13",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:13",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:13",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:13"
																			},
																			"nativeSrc": "3074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:13"
																		},
																		"nativeSrc": "3071:49:13",
																		"nodeType": "YulIf",
																		"src": "3071:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:13"
																							},
																							"nativeSrc": "3189:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:13"
																					},
																					"nativeSrc": "3175:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:13"
																			},
																			"nativeSrc": "3133:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:13"
																		},
																		"nativeSrc": "3133:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:13"
																},
																"nativeSrc": "2780:11:13",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:13"
															},
															"nativeSrc": "2777:446:13",
															"nodeType": "YulIf",
															"src": "2777:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:13",
														"nodeType": "YulTypedName",
														"src": "2742:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:13",
														"nodeType": "YulTypedName",
														"src": "2749:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:13",
														"nodeType": "YulTypedName",
														"src": "2754:10:13",
														"type": ""
													}
												],
												"src": "2687:543:13"
											},
											{
												"body": {
													"nativeSrc": "3299:54:13",
													"nodeType": "YulBlock",
													"src": "3299:54:13",
													"statements": [
														{
															"nativeSrc": "3309:37:13",
															"nodeType": "YulAssignment",
															"src": "3309:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:13"
																},
																"nativeSrc": "3330:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:13",
														"nodeType": "YulTypedName",
														"src": "3274:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:13",
														"nodeType": "YulTypedName",
														"src": "3280:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:13",
														"nodeType": "YulTypedName",
														"src": "3290:8:13",
														"type": ""
													}
												],
												"src": "3236:117:13"
											},
											{
												"body": {
													"nativeSrc": "3410:118:13",
													"nodeType": "YulBlock",
													"src": "3410:118:13",
													"statements": [
														{
															"nativeSrc": "3420:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:13"
																				},
																				"nativeSrc": "3465:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:13"
																				},
																				"nativeSrc": "3480:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:13"
																		},
																		"nativeSrc": "3436:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:13"
																},
																"nativeSrc": "3432:56:13",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:13",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:13",
															"nodeType": "YulAssignment",
															"src": "3497:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:13"
																},
																"nativeSrc": "3507:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:13",
														"nodeType": "YulTypedName",
														"src": "3387:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:13",
														"nodeType": "YulTypedName",
														"src": "3393:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:13",
														"nodeType": "YulTypedName",
														"src": "3403:6:13",
														"type": ""
													}
												],
												"src": "3359:169:13"
											},
											{
												"body": {
													"nativeSrc": "3614:214:13",
													"nodeType": "YulBlock",
													"src": "3614:214:13",
													"statements": [
														{
															"nativeSrc": "3747:37:13",
															"nodeType": "YulAssignment",
															"src": "3747:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:13"
																},
																"nativeSrc": "3755:29:13",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:13"
																}
															]
														},
														{
															"nativeSrc": "3793:29:13",
															"nodeType": "YulAssignment",
															"src": "3793:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:13"
																		},
																		"nativeSrc": "3810:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:13"
																},
																"nativeSrc": "3801:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:13",
														"nodeType": "YulTypedName",
														"src": "3595:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:13",
														"nodeType": "YulTypedName",
														"src": "3601:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:13",
														"nodeType": "YulTypedName",
														"src": "3609:4:13",
														"type": ""
													}
												],
												"src": "3533:295:13"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:13",
													"nodeType": "YulBlock",
													"src": "3925:1303:13",
													"statements": [
														{
															"nativeSrc": "3936:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:13"
																},
																"nativeSrc": "3950:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:13",
																"nodeType": "YulBlock",
																"src": "4072:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:13"
																			},
																			"nativeSrc": "4074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:13"
																		},
																		"nativeSrc": "4074:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:13"
																},
																"nativeSrc": "4041:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:13"
															},
															"nativeSrc": "4038:56:13",
															"nodeType": "YulIf",
															"src": "4038:56:13"
														},
														{
															"nativeSrc": "4104:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:13"
																		},
																		"nativeSrc": "4144:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:13"
																},
																"nativeSrc": "4118:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:13"
																},
																"nativeSrc": "4203:67:13",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:13"
															},
															"nativeSrc": "4203:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:13"
														},
														{
															"nativeSrc": "4280:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:13",
																"nodeType": "YulLiteral",
																"src": "4297:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:13",
															"nodeType": "YulAssignment",
															"src": "4308:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:13",
																"nodeType": "YulLiteral",
																"src": "4321:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:13",
																		"nodeType": "YulBlock",
																		"src": "4372:611:13",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:13",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:13"
																							},
																							"nativeSrc": "4413:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:13"
																					},
																					"nativeSrc": "4401:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:13",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:13"
																					},
																					"nativeSrc": "4451:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:13",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:13",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:13",
																					"nodeType": "YulBlock",
																					"src": "4569:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:13"
																												},
																												"nativeSrc": "4608:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:13"
																										},
																										"nativeSrc": "4602:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:13"
																								},
																								"nativeSrc": "4587:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:13"
																							},
																							"nativeSrc": "4587:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:13"
																						},
																						{
																							"nativeSrc": "4646:24:13",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:13",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:13"
																								},
																								"nativeSrc": "4656:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:13",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:13",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:13"
																								},
																								"nativeSrc": "4700:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:13"
																					},
																					"nativeSrc": "4532:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:13"
																				},
																				"nativeSrc": "4524:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:13",
																					"nodeType": "YulBlock",
																					"src": "4547:21:13",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:13",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:13",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:13"
																								},
																								"nativeSrc": "4554:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:13",
																					"nodeType": "YulBlock",
																					"src": "4528:3:13",
																					"statements": []
																				},
																				"src": "4524:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:13",
																					"nodeType": "YulBlock",
																					"src": "4768:156:13",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:13"
																										},
																										"nativeSrc": "4809:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:13"
																								},
																								"nativeSrc": "4803:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:13",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:13",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:13"
																												},
																												"nativeSrc": "4891:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:13"
																										},
																										"nativeSrc": "4861:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:13"
																								},
																								"nativeSrc": "4846:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:13"
																							},
																							"nativeSrc": "4846:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:13"
																					},
																					"nativeSrc": "4748:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:13"
																				},
																				"nativeSrc": "4745:179:13",
																				"nodeType": "YulIf",
																				"src": "4745:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:13",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:13"
																									},
																									"nativeSrc": "4954:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:13",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:13"
																							},
																							"nativeSrc": "4950:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:13"
																					},
																					"nativeSrc": "4937:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:13"
																				},
																				"nativeSrc": "4937:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:13"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:13",
																	"nodeType": "YulCase",
																	"src": "4365:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:13",
																		"nodeType": "YulBlock",
																		"src": "5000:222:13",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:13",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:13",
																					"nodeType": "YulBlock",
																					"src": "5051:67:13",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:13",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:13"
																										},
																										"nativeSrc": "5084:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:13"
																								},
																								"nativeSrc": "5078:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:13"
																				},
																				"nativeSrc": "5041:77:13",
																				"nodeType": "YulIf",
																				"src": "5041:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:13"
																							},
																							"nativeSrc": "5144:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:13"
																					},
																					"nativeSrc": "5131:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:13"
																				},
																				"nativeSrc": "5131:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:13"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:13",
																	"nodeType": "YulCase",
																	"src": "4992:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:13"
																},
																"nativeSrc": "4342:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:13"
															},
															"nativeSrc": "4335:887:13",
															"nodeType": "YulSwitch",
															"src": "4335:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:13",
														"nodeType": "YulTypedName",
														"src": "3914:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:13",
														"nodeType": "YulTypedName",
														"src": "3920:3:13",
														"type": ""
													}
												],
												"src": "3833:1395:13"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280601e81526020017f68747470733a2f2f697066732e696f2f697066732f7b69647d2e6a736f6e000081525062000058816200005f60201b60201c565b50620003bc565b8060029081620000709190620002d8565b5050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620000f057607f821691505b602082108103620001065762000105620000ab565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200016a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200012d565b6200017686836200012d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001c0620001ba620001b4846200018e565b62000197565b6200018e565b9050919050565b5f819050919050565b620001db83620001a0565b620001f3620001ea82620001c7565b84845462000139565b825550505050565b5f90565b62000209620001fb565b62000216818484620001d0565b505050565b5b818110156200023d57620002315f82620001ff565b6001810190506200021c565b5050565b601f8211156200028c5762000256816200010c565b62000261846200011e565b8101602085101562000271578190505b6200028962000280856200011e565b8301826200021b565b50505b505050565b5f82821c905092915050565b5f620002ae5f198460080262000291565b1980831691505092915050565b5f620002c883836200029d565b9150826002028217905092915050565b620002e38262000074565b67ffffffffffffffff811115620002ff57620002fe6200007e565b5b6200030b8254620000d8565b6200031882828562000241565b5f60209050601f8311600181146200034e575f841562000339578287015190505b620003458582620002bb565b865550620003b4565b601f1984166200035e866200010c565b5f5b82811015620003875784890151825560018201915060208501945060208101905062000360565b86831015620003a75784890151620003a3601f8916826200029d565b8355505b6001600288020188555050505b505050505050565b6124af80620003ca5f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c80634e1273f4116100645780634e1273f41461017b57806358ea82e6146101ab578063a22cb465146101c7578063e985e9c5146101e3578063f242432a146102135761009b565b8062fdd58e1461009f57806301ffc9a7146100cf57806307805a6b146100ff5780630e89341c1461012f5780632eb2c2d61461015f575b5f80fd5b6100b960048036038101906100b491906114d2565b61022f565b6040516100c6919061151f565b60405180910390f35b6100e960048036038101906100e4919061158d565b610284565b6040516100f691906115d2565b60405180910390f35b61011960048036038101906101149190611727565b610365565b604051610126919061151f565b60405180910390f35b61014960048036038101906101449190611781565b6103ac565b6040516101569190611826565b60405180910390f35b610179600480360381019061017491906119a8565b6103ef565b005b61019560048036038101906101909190611b33565b610496565b6040516101a29190611c60565b60405180910390f35b6101c560048036038101906101c09190611c80565b61059d565b005b6101e160048036038101906101dc9190611cfa565b6105bc565b005b6101fd60048036038101906101f89190611d38565b6105d2565b60405161020a91906115d2565b60405180910390f35b61022d60048036038101906102289190611d76565b610660565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061034e57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061035e575061035d82610707565b5b9050919050565b5f6103706003610770565b5f61037b6003610784565b90506103988482600160405180602001604052805f815250610790565b6103a28184610825565b8091505092915050565b60606103b782610848565b60045f8481526020019081526020015f206040516020016103d9929190611f32565b6040516020818303038152906040529050919050565b5f6103f86108da565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561043d575061043b86826105d2565b155b156104815780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610478929190611f64565b60405180910390fd5b61048e86868686866108e1565b505050505050565b606081518351146104e257815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016104d9929190611f8b565b60405180910390fd5b5f835167ffffffffffffffff8111156104fe576104fd611603565b5b60405190808252806020026020018201604052801561052c5781602001602082028036833780820191505090505b5090505f5b84518110156105925761056861055082876109d590919063ffffffff16565b61056383876109e890919063ffffffff16565b61022f565b82828151811061057b5761057a611fb2565b5b602002602001018181525050806001019050610531565b508091505092915050565b6105b783838360405180602001604052805f815250610790565b505050565b6105ce6105c76108da565b83836109fb565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6106696108da565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156106ae57506106ac86826105d2565b155b156106f25780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106e9929190611f64565b60405180910390fd5b6106ff8686868686610b64565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610800575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107f79190611fdf565b60405180910390fd5b5f8061080c8585610c6a565b9150915061081d5f87848487610c9a565b505050505050565b8060045f8481526020019081526020015f2090816108439190612183565b505050565b60606002805461085790611e70565b80601f016020809104026020016040519081016040528092919081815260200182805461088390611e70565b80156108ce5780601f106108a5576101008083540402835291602001916108ce565b820191905f5260205f20905b8154815290600101906020018083116108b157829003601f168201915b50505050509050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610951575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109489190611fdf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036109c1575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016109b89190611fdf565b60405180910390fd5b6109ce8585858585610c9a565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6b575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610a629190611fdf565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b5791906115d2565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bd4575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610bcb9190611fdf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c44575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c3b9190611fdf565b60405180910390fd5b5f80610c508585610c6a565b91509150610c618787848487610c9a565b50505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b610ca685858585610d46565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610d3f575f610ce26108da565b90506001845103610d2e575f610d015f866109e890919063ffffffff16565b90505f610d175f866109e890919063ffffffff16565b9050610d278389898585896110d6565b5050610d3d565b610d3c818787878787611285565b5b505b5050505050565b8051825114610d9057815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610d87929190611f8b565b60405180910390fd5b5f610d996108da565b90505f5b8351811015610f95575f610dba82866109e890919063ffffffff16565b90505f610dd083866109e890919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610ef3575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e9f57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610e969493929190612252565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610f8857805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f8091906122c2565b925050819055505b5050806001019050610d9d565b506001835103611050575f610fb35f856109e890919063ffffffff16565b90505f610fc95f856109e890919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611041929190611f8b565b60405180910390a450506110cf565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516110c69291906122f5565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561127d578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161113695949392919061237c565b6020604051808303815f875af192505050801561117157506040513d601f19601f8201168201806040525081019061116e91906123e8565b60015b6111f2573d805f811461119f576040519150601f19603f3d011682016040523d82523d5f602084013e6111a4565b606091505b505f8151036111ea57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111e19190611fdf565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461127b57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112729190611fdf565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561142c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016112e5959493929190612413565b6020604051808303815f875af192505050801561132057506040513d601f19601f8201168201806040525081019061131d91906123e8565b60015b6113a1573d805f811461134e576040519150601f19603f3d011682016040523d82523d5f602084013e611353565b606091505b505f81510361139957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113909190611fdf565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461142a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114219190611fdf565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61146e82611445565b9050919050565b61147e81611464565b8114611488575f80fd5b50565b5f8135905061149981611475565b92915050565b5f819050919050565b6114b18161149f565b81146114bb575f80fd5b50565b5f813590506114cc816114a8565b92915050565b5f80604083850312156114e8576114e761143d565b5b5f6114f58582860161148b565b9250506020611506858286016114be565b9150509250929050565b6115198161149f565b82525050565b5f6020820190506115325f830184611510565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61156c81611538565b8114611576575f80fd5b50565b5f8135905061158781611563565b92915050565b5f602082840312156115a2576115a161143d565b5b5f6115af84828501611579565b91505092915050565b5f8115159050919050565b6115cc816115b8565b82525050565b5f6020820190506115e55f8301846115c3565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611639826115f3565b810181811067ffffffffffffffff8211171561165857611657611603565b5b80604052505050565b5f61166a611434565b90506116768282611630565b919050565b5f67ffffffffffffffff82111561169557611694611603565b5b61169e826115f3565b9050602081019050919050565b828183375f83830152505050565b5f6116cb6116c68461167b565b611661565b9050828152602081018484840111156116e7576116e66115ef565b5b6116f28482856116ab565b509392505050565b5f82601f83011261170e5761170d6115eb565b5b813561171e8482602086016116b9565b91505092915050565b5f806040838503121561173d5761173c61143d565b5b5f61174a8582860161148b565b925050602083013567ffffffffffffffff81111561176b5761176a611441565b5b611777858286016116fa565b9150509250929050565b5f602082840312156117965761179561143d565b5b5f6117a3848285016114be565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156117e35780820151818401526020810190506117c8565b5f8484015250505050565b5f6117f8826117ac565b61180281856117b6565b93506118128185602086016117c6565b61181b816115f3565b840191505092915050565b5f6020820190508181035f83015261183e81846117ee565b905092915050565b5f67ffffffffffffffff8211156118605761185f611603565b5b602082029050602081019050919050565b5f80fd5b5f61188761188284611846565b611661565b905080838252602082019050602084028301858111156118aa576118a9611871565b5b835b818110156118d357806118bf88826114be565b8452602084019350506020810190506118ac565b5050509392505050565b5f82601f8301126118f1576118f06115eb565b5b8135611901848260208601611875565b91505092915050565b5f67ffffffffffffffff82111561192457611923611603565b5b61192d826115f3565b9050602081019050919050565b5f61194c6119478461190a565b611661565b905082815260208101848484011115611968576119676115ef565b5b6119738482856116ab565b509392505050565b5f82601f83011261198f5761198e6115eb565b5b813561199f84826020860161193a565b91505092915050565b5f805f805f60a086880312156119c1576119c061143d565b5b5f6119ce8882890161148b565b95505060206119df8882890161148b565b945050604086013567ffffffffffffffff811115611a00576119ff611441565b5b611a0c888289016118dd565b935050606086013567ffffffffffffffff811115611a2d57611a2c611441565b5b611a39888289016118dd565b925050608086013567ffffffffffffffff811115611a5a57611a59611441565b5b611a668882890161197b565b9150509295509295909350565b5f67ffffffffffffffff821115611a8d57611a8c611603565b5b602082029050602081019050919050565b5f611ab0611aab84611a73565b611661565b90508083825260208201905060208402830185811115611ad357611ad2611871565b5b835b81811015611afc5780611ae8888261148b565b845260208401935050602081019050611ad5565b5050509392505050565b5f82601f830112611b1a57611b196115eb565b5b8135611b2a848260208601611a9e565b91505092915050565b5f8060408385031215611b4957611b4861143d565b5b5f83013567ffffffffffffffff811115611b6657611b65611441565b5b611b7285828601611b06565b925050602083013567ffffffffffffffff811115611b9357611b92611441565b5b611b9f858286016118dd565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611bdb8161149f565b82525050565b5f611bec8383611bd2565b60208301905092915050565b5f602082019050919050565b5f611c0e82611ba9565b611c188185611bb3565b9350611c2383611bc3565b805f5b83811015611c53578151611c3a8882611be1565b9750611c4583611bf8565b925050600181019050611c26565b5085935050505092915050565b5f6020820190508181035f830152611c788184611c04565b905092915050565b5f805f60608486031215611c9757611c9661143d565b5b5f611ca48682870161148b565b9350506020611cb5868287016114be565b9250506040611cc6868287016114be565b9150509250925092565b611cd9816115b8565b8114611ce3575f80fd5b50565b5f81359050611cf481611cd0565b92915050565b5f8060408385031215611d1057611d0f61143d565b5b5f611d1d8582860161148b565b9250506020611d2e85828601611ce6565b9150509250929050565b5f8060408385031215611d4e57611d4d61143d565b5b5f611d5b8582860161148b565b9250506020611d6c8582860161148b565b9150509250929050565b5f805f805f60a08688031215611d8f57611d8e61143d565b5b5f611d9c8882890161148b565b9550506020611dad8882890161148b565b9450506040611dbe888289016114be565b9350506060611dcf888289016114be565b925050608086013567ffffffffffffffff811115611df057611def611441565b5b611dfc8882890161197b565b9150509295509295909350565b5f81905092915050565b5f611e1d826117ac565b611e278185611e09565b9350611e378185602086016117c6565b80840191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e8757607f821691505b602082108103611e9a57611e99611e43565b5b50919050565b5f819050815f5260205f209050919050565b5f8154611ebe81611e70565b611ec88186611e09565b9450600182165f8114611ee25760018114611ef757611f29565b60ff1983168652811515820286019350611f29565b611f0085611ea0565b5f5b83811015611f2157815481890152600182019150602081019050611f02565b838801955050505b50505092915050565b5f611f3d8285611e13565b9150611f498284611eb2565b91508190509392505050565b611f5e81611464565b82525050565b5f604082019050611f775f830185611f55565b611f846020830184611f55565b9392505050565b5f604082019050611f9e5f830185611510565b611fab6020830184611510565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611ff25f830184611f55565b92915050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612007565b61204c8683612007565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61208761208261207d8461149f565b612064565b61149f565b9050919050565b5f819050919050565b6120a08361206d565b6120b46120ac8261208e565b848454612013565b825550505050565b5f90565b6120c86120bc565b6120d3818484612097565b505050565b5b818110156120f6576120eb5f826120c0565b6001810190506120d9565b5050565b601f82111561213b5761210c81611ea0565b61211584611ff8565b81016020851015612124578190505b61213861213085611ff8565b8301826120d8565b50505b505050565b5f82821c905092915050565b5f61215b5f1984600802612140565b1980831691505092915050565b5f612173838361214c565b9150826002028217905092915050565b61218c826117ac565b67ffffffffffffffff8111156121a5576121a4611603565b5b6121af8254611e70565b6121ba8282856120fa565b5f60209050601f8311600181146121eb575f84156121d9578287015190505b6121e38582612168565b86555061224a565b601f1984166121f986611ea0565b5f5b82811015612220578489015182556001820191506020850194506020810190506121fb565b8683101561223d5784890151612239601f89168261214c565b8355505b6001600288020188555050505b505050505050565b5f6080820190506122655f830187611f55565b6122726020830186611510565b61227f6040830185611510565b61228c6060830184611510565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122cc8261149f565b91506122d78361149f565b92508282019050808211156122ef576122ee612295565b5b92915050565b5f6040820190508181035f83015261230d8185611c04565b905081810360208301526123218184611c04565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61234e8261232a565b6123588185612334565b93506123688185602086016117c6565b612371816115f3565b840191505092915050565b5f60a08201905061238f5f830188611f55565b61239c6020830187611f55565b6123a96040830186611510565b6123b66060830185611510565b81810360808301526123c88184612344565b90509695505050505050565b5f815190506123e281611563565b92915050565b5f602082840312156123fd576123fc61143d565b5b5f61240a848285016123d4565b91505092915050565b5f60a0820190506124265f830188611f55565b6124336020830187611f55565b81810360408301526124458186611c04565b905081810360608301526124598185611c04565b9050818103608083015261246d8184612344565b9050969550505050505056fea264697066735822122017b8a8423b9774f6429be3d8d1a2429f036fcde274bdee8c77bf45d123666c2d64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68747470733A2F2F697066732E696F2F697066732F7B69647D2E6A736F6E0000 DUP2 MSTORE POP PUSH3 0x58 DUP2 PUSH3 0x5F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x3BC JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x70 SWAP2 SWAP1 PUSH3 0x2D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xF0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x106 JUMPI PUSH3 0x105 PUSH3 0xAB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x16A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x12D JUMP JUMPDEST PUSH3 0x176 DUP7 DUP4 PUSH3 0x12D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1C0 PUSH3 0x1BA PUSH3 0x1B4 DUP5 PUSH3 0x18E JUMP JUMPDEST PUSH3 0x197 JUMP JUMPDEST PUSH3 0x18E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1DB DUP4 PUSH3 0x1A0 JUMP JUMPDEST PUSH3 0x1F3 PUSH3 0x1EA DUP3 PUSH3 0x1C7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x139 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x209 PUSH3 0x1FB JUMP JUMPDEST PUSH3 0x216 DUP2 DUP5 DUP5 PUSH3 0x1D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x23D JUMPI PUSH3 0x231 PUSH0 DUP3 PUSH3 0x1FF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x21C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x28C JUMPI PUSH3 0x256 DUP2 PUSH3 0x10C JUMP JUMPDEST PUSH3 0x261 DUP5 PUSH3 0x11E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x271 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x289 PUSH3 0x280 DUP6 PUSH3 0x11E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x21B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2AE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x291 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2C8 DUP4 DUP4 PUSH3 0x29D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2E3 DUP3 PUSH3 0x74 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2FF JUMPI PUSH3 0x2FE PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH3 0x30B DUP3 SLOAD PUSH3 0xD8 JUMP JUMPDEST PUSH3 0x318 DUP3 DUP3 DUP6 PUSH3 0x241 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x34E JUMPI PUSH0 DUP5 ISZERO PUSH3 0x339 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x345 DUP6 DUP3 PUSH3 0x2BB JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3B4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x35E DUP7 PUSH3 0x10C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x387 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x360 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3A7 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3A3 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x29D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24AF DUP1 PUSH3 0x3CA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x58EA82E6 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x213 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x7805A6B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1D38 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x34E JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x35E JUMPI POP PUSH2 0x35D DUP3 PUSH2 0x707 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x370 PUSH1 0x3 PUSH2 0x770 JUMP JUMPDEST PUSH0 PUSH2 0x37B PUSH1 0x3 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP PUSH2 0x398 DUP5 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x790 JUMP JUMPDEST PUSH2 0x3A2 DUP2 DUP5 PUSH2 0x825 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B7 DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI POP PUSH2 0x43B DUP7 DUP3 PUSH2 0x5D2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x481 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x478 SWAP3 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x8E1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4E2 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4FD PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x52C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH2 0x568 PUSH2 0x550 DUP3 DUP8 PUSH2 0x9D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x563 DUP4 DUP8 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x1FB2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x531 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x790 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x5C7 PUSH2 0x8DA JUMP JUMPDEST DUP4 DUP4 PUSH2 0x9FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x669 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI POP PUSH2 0x6AC DUP7 DUP3 PUSH2 0x5D2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6F2 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP3 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB64 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x800 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x80C DUP6 DUP6 PUSH2 0xC6A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x81D PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xC9A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x843 SWAP2 SWAP1 PUSH2 0x2183 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x857 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x883 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x951 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CE DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC9A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xC50 DUP6 DUP6 PUSH2 0xC6A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC61 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xC9A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD46 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD3F JUMPI PUSH0 PUSH2 0xCE2 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xD2E JUMPI PUSH0 PUSH2 0xD01 PUSH0 DUP7 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD17 PUSH0 DUP7 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD27 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x10D6 JUMP JUMPDEST POP POP PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xD3C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xD90 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xD99 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xF95 JUMPI PUSH0 PUSH2 0xDBA DUP3 DUP7 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDD0 DUP4 DUP7 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF3 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE9F JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF88 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xD9D JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1050 JUMPI PUSH0 PUSH2 0xFB3 PUSH0 DUP6 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xFC9 PUSH0 DUP6 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1041 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x10CF JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10C6 SWAP3 SWAP2 SWAP1 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x127D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1136 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1171 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116E SWAP2 SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F2 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x119F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x11EA JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E1 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x127B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x142C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1320 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13A1 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x134E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1399 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x142A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1421 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x146E DUP3 PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147E DUP2 PUSH2 0x1464 JUMP JUMPDEST DUP2 EQ PUSH2 0x1488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1499 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B1 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP2 EQ PUSH2 0x14BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CC DUP2 PUSH2 0x14A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F5 DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1506 DUP6 DUP3 DUP7 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1519 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1532 PUSH0 DUP4 ADD DUP5 PUSH2 0x1510 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156C DUP2 PUSH2 0x1538 JUMP JUMPDEST DUP2 EQ PUSH2 0x1576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1587 DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AF DUP5 DUP3 DUP6 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15CC DUP2 PUSH2 0x15B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x15C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1639 DUP3 PUSH2 0x15F3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1658 JUMPI PUSH2 0x1657 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x166A PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP PUSH2 0x1676 DUP3 DUP3 PUSH2 0x1630 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1695 JUMPI PUSH2 0x1694 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH2 0x169E DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16CB PUSH2 0x16C6 DUP5 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x15EF JUMP JUMPDEST JUMPDEST PUSH2 0x16F2 DUP5 DUP3 DUP6 PUSH2 0x16AB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x170E JUMPI PUSH2 0x170D PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x171E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x173D JUMPI PUSH2 0x173C PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x174A DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176B JUMPI PUSH2 0x176A PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1777 DUP6 DUP3 DUP7 ADD PUSH2 0x16FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A3 DUP5 DUP3 DUP6 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17C8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17F8 DUP3 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x1802 DUP2 DUP6 PUSH2 0x17B6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1812 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183E DUP2 DUP5 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1887 PUSH2 0x1882 DUP5 PUSH2 0x1846 JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1871 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D3 JUMPI DUP1 PUSH2 0x18BF DUP9 DUP3 PUSH2 0x14BE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18AC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1901 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1875 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1924 JUMPI PUSH2 0x1923 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH2 0x192D DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x194C PUSH2 0x1947 DUP5 PUSH2 0x190A JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1968 JUMPI PUSH2 0x1967 PUSH2 0x15EF JUMP JUMPDEST JUMPDEST PUSH2 0x1973 DUP5 DUP3 DUP6 PUSH2 0x16AB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x198F JUMPI PUSH2 0x198E PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x199F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x193A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CE DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x19DF DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x19FF PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1A0C DUP9 DUP3 DUP10 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A2D JUMPI PUSH2 0x1A2C PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1A39 DUP9 DUP3 DUP10 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1A66 DUP9 DUP3 DUP10 ADD PUSH2 0x197B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A8D JUMPI PUSH2 0x1A8C PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB0 PUSH2 0x1AAB DUP5 PUSH2 0x1A73 JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD2 PUSH2 0x1871 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AFC JUMPI DUP1 PUSH2 0x1AE8 DUP9 DUP3 PUSH2 0x148B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AD5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B1A JUMPI PUSH2 0x1B19 PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B2A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B66 JUMPI PUSH2 0x1B65 PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1B72 DUP6 DUP3 DUP7 ADD PUSH2 0x1B06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1B9F DUP6 DUP3 DUP7 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDB DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEC DUP4 DUP4 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0E DUP3 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1C18 DUP2 DUP6 PUSH2 0x1BB3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C23 DUP4 PUSH2 0x1BC3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C53 JUMPI DUP2 MLOAD PUSH2 0x1C3A DUP9 DUP3 PUSH2 0x1BE1 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C45 DUP4 PUSH2 0x1BF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C26 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C78 DUP2 DUP5 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C97 JUMPI PUSH2 0x1C96 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA4 DUP7 DUP3 DUP8 ADD PUSH2 0x148B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CB5 DUP7 DUP3 DUP8 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CC6 DUP7 DUP3 DUP8 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1CD9 DUP2 PUSH2 0x15B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF4 DUP2 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D10 JUMPI PUSH2 0x1D0F PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D1D DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D2E DUP6 DUP3 DUP7 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D4E JUMPI PUSH2 0x1D4D PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D5B DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D6C DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D8F JUMPI PUSH2 0x1D8E PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D9C DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1DAD DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DBE DUP9 DUP3 DUP10 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1DCF DUP9 DUP3 DUP10 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF0 JUMPI PUSH2 0x1DEF PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1DFC DUP9 DUP3 DUP10 ADD PUSH2 0x197B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1D DUP3 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x1E27 DUP2 DUP6 PUSH2 0x1E09 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E87 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E9A JUMPI PUSH2 0x1E99 PUSH2 0x1E43 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1EBE DUP2 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x1EC8 DUP2 DUP7 PUSH2 0x1E09 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x1EE2 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1EF7 JUMPI PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1F00 DUP6 PUSH2 0x1EA0 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F21 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F02 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3D DUP3 DUP6 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 DUP5 PUSH2 0x1EB2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F5E DUP2 PUSH2 0x1464 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F77 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x1F84 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F55 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F9E PUSH0 DUP4 ADD DUP6 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x1FAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1510 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2042 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x204C DUP7 DUP4 PUSH2 0x2007 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2087 PUSH2 0x2082 PUSH2 0x207D DUP5 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x149F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A0 DUP4 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x20B4 PUSH2 0x20AC DUP3 PUSH2 0x208E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2013 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x20BC JUMP JUMPDEST PUSH2 0x20D3 DUP2 DUP5 DUP5 PUSH2 0x2097 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20F6 JUMPI PUSH2 0x20EB PUSH0 DUP3 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x213B JUMPI PUSH2 0x210C DUP2 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0x2115 DUP5 PUSH2 0x1FF8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2124 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2138 PUSH2 0x2130 DUP6 PUSH2 0x1FF8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x20D8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x215B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2140 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2173 DUP4 DUP4 PUSH2 0x214C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x218C DUP3 PUSH2 0x17AC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A5 JUMPI PUSH2 0x21A4 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH2 0x21AF DUP3 SLOAD PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x21BA DUP3 DUP3 DUP6 PUSH2 0x20FA JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21EB JUMPI PUSH0 DUP5 ISZERO PUSH2 0x21D9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x21E3 DUP6 DUP3 PUSH2 0x2168 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x224A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x21F9 DUP7 PUSH2 0x1EA0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2220 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21FB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x223D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2239 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x214C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2265 PUSH0 DUP4 ADD DUP8 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x2272 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x227F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x228C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1510 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22CC DUP3 PUSH2 0x149F JUMP JUMPDEST SWAP2 POP PUSH2 0x22D7 DUP4 PUSH2 0x149F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22EF JUMPI PUSH2 0x22EE PUSH2 0x2295 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230D DUP2 DUP6 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2321 DUP2 DUP5 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x234E DUP3 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x2358 DUP2 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP4 POP PUSH2 0x2368 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST PUSH2 0x2371 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x238F PUSH0 DUP4 ADD DUP9 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x239C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x23A9 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x23B6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1510 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x23C8 DUP2 DUP5 PUSH2 0x2344 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23E2 DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23FD JUMPI PUSH2 0x23FC PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x240A DUP5 DUP3 DUP6 ADD PUSH2 0x23D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2426 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x2433 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F55 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2445 DUP2 DUP7 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2459 DUP2 DUP6 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x246D DUP2 DUP5 PUSH2 0x2344 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xB8 0xA8 TIMESTAMP EXTCODESIZE SWAP8 PUSH21 0xF6429BE3D8D1A2429F036FCDE274BDEE8C77BF45D1 0x23 PUSH7 0x6C2D64736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "177:1009:12:-:0;;;364:58;;;;;;;;;;1251:62:1;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;177:1009:12;;10282:86:1;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;177:1009:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1186": {
									"entryPoint": 3178,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 4741,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 4310,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_862": {
									"entryPoint": 1936,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1563": {
									"entryPoint": 2266,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_799": {
									"entryPoint": 2273,
									"id": 799,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_744": {
									"entryPoint": 2916,
									"id": 744,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1032": {
									"entryPoint": 2555,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_2945": {
									"entryPoint": 2085,
									"id": 2945,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 3226,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 3398,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 1174,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_256": {
									"entryPoint": 559,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@current_1599": {
									"entryPoint": 1924,
									"id": 1599,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1613": {
									"entryPoint": 1904,
									"id": 1613,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_359": {
									"entryPoint": 1490,
									"id": 359,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintFungible_2896": {
									"entryPoint": 1437,
									"id": 2896,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mintNonFungible_2931": {
									"entryPoint": 869,
									"id": 2931,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_449": {
									"entryPoint": 1007,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_403": {
									"entryPoint": 1632,
									"id": 403,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_342": {
									"entryPoint": 1468,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1788": {
									"entryPoint": 1799,
									"id": 1788,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_228": {
									"entryPoint": 644,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1537": {
									"entryPoint": 2536,
									"id": 1537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1550": {
									"entryPoint": 2517,
									"id": 1550,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_239": {
									"entryPoint": 2120,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_2968": {
									"entryPoint": 940,
									"id": 2968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6261,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5817,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9235,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9084,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8949,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8075,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5803,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8343,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:31642:13",
										"nodeType": "YulBlock",
										"src": "0:31642:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "748:87:13",
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nativeSrc": "758:29:13",
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nativeSrc": "767:20:13",
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nativeSrc": "796:33:13",
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nativeSrc": "796:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:13",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:13",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:13",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nativeSrc": "886:32:13",
													"nodeType": "YulBlock",
													"src": "886:32:13",
													"statements": [
														{
															"nativeSrc": "896:16:13",
															"nodeType": "YulAssignment",
															"src": "896:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:13",
																"nodeType": "YulIdentifier",
																"src": "907:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:13",
														"nodeType": "YulTypedName",
														"src": "868:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:13",
														"nodeType": "YulTypedName",
														"src": "878:7:13",
														"type": ""
													}
												],
												"src": "841:77:13"
											},
											{
												"body": {
													"nativeSrc": "967:79:13",
													"nodeType": "YulBlock",
													"src": "967:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:13",
																"nodeType": "YulBlock",
																"src": "1024:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:13"
																			},
																			"nativeSrc": "1026:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:13"
																		},
																		"nativeSrc": "1026:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:13"
																				},
																				"nativeSrc": "997:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:13"
																		},
																		"nativeSrc": "987:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:13"
																},
																"nativeSrc": "980:43:13",
																"nodeType": "YulFunctionCall",
																"src": "980:43:13"
															},
															"nativeSrc": "977:63:13",
															"nodeType": "YulIf",
															"src": "977:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:13",
														"nodeType": "YulTypedName",
														"src": "960:5:13",
														"type": ""
													}
												],
												"src": "924:122:13"
											},
											{
												"body": {
													"nativeSrc": "1104:87:13",
													"nodeType": "YulBlock",
													"src": "1104:87:13",
													"statements": [
														{
															"nativeSrc": "1114:29:13",
															"nodeType": "YulAssignment",
															"src": "1114:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:13"
																},
																"nativeSrc": "1123:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:13"
																},
																"nativeSrc": "1152:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:13"
															},
															"nativeSrc": "1152:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:13",
														"nodeType": "YulTypedName",
														"src": "1082:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:13",
														"nodeType": "YulTypedName",
														"src": "1090:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:13",
														"nodeType": "YulTypedName",
														"src": "1098:5:13",
														"type": ""
													}
												],
												"src": "1052:139:13"
											},
											{
												"body": {
													"nativeSrc": "1280:391:13",
													"nodeType": "YulBlock",
													"src": "1280:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:13",
																"nodeType": "YulBlock",
																"src": "1326:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:13"
																			},
																			"nativeSrc": "1328:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:13"
																		},
																		"nativeSrc": "1328:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:13"
																		},
																		"nativeSrc": "1297:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:13"
																},
																"nativeSrc": "1293:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:13"
															},
															"nativeSrc": "1290:119:13",
															"nodeType": "YulIf",
															"src": "1290:119:13"
														},
														{
															"nativeSrc": "1419:117:13",
															"nodeType": "YulBlock",
															"src": "1419:117:13",
															"statements": [
																{
																	"nativeSrc": "1434:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:13"
																				},
																				"nativeSrc": "1494:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:13"
																		},
																		"nativeSrc": "1473:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:13",
															"nodeType": "YulBlock",
															"src": "1546:118:13",
															"statements": [
																{
																	"nativeSrc": "1561:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:13"
																				},
																				"nativeSrc": "1622:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:13"
																		},
																		"nativeSrc": "1601:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:13",
														"nodeType": "YulTypedName",
														"src": "1242:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:13",
														"nodeType": "YulTypedName",
														"src": "1253:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:13",
														"nodeType": "YulTypedName",
														"src": "1265:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:13",
														"nodeType": "YulTypedName",
														"src": "1273:6:13",
														"type": ""
													}
												],
												"src": "1197:474:13"
											},
											{
												"body": {
													"nativeSrc": "1742:53:13",
													"nodeType": "YulBlock",
													"src": "1742:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:13"
																		},
																		"nativeSrc": "1764:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:13"
																},
																"nativeSrc": "1752:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:13"
															},
															"nativeSrc": "1752:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:13",
														"nodeType": "YulTypedName",
														"src": "1730:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:13",
														"nodeType": "YulTypedName",
														"src": "1737:3:13",
														"type": ""
													}
												],
												"src": "1677:118:13"
											},
											{
												"body": {
													"nativeSrc": "1899:124:13",
													"nodeType": "YulBlock",
													"src": "1899:124:13",
													"statements": [
														{
															"nativeSrc": "1909:26:13",
															"nodeType": "YulAssignment",
															"src": "1909:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:13"
																},
																"nativeSrc": "1917:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:13"
																		},
																		"nativeSrc": "1998:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:13"
																},
																"nativeSrc": "1945:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:13"
															},
															"nativeSrc": "1945:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:13",
														"nodeType": "YulTypedName",
														"src": "1871:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:13",
														"nodeType": "YulTypedName",
														"src": "1883:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:13",
														"nodeType": "YulTypedName",
														"src": "1894:4:13",
														"type": ""
													}
												],
												"src": "1801:222:13"
											},
											{
												"body": {
													"nativeSrc": "2073:105:13",
													"nodeType": "YulBlock",
													"src": "2073:105:13",
													"statements": [
														{
															"nativeSrc": "2083:89:13",
															"nodeType": "YulAssignment",
															"src": "2083:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:13"
																},
																"nativeSrc": "2094:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:13",
														"nodeType": "YulTypedName",
														"src": "2055:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:13",
														"nodeType": "YulTypedName",
														"src": "2065:7:13",
														"type": ""
													}
												],
												"src": "2029:149:13"
											},
											{
												"body": {
													"nativeSrc": "2226:78:13",
													"nodeType": "YulBlock",
													"src": "2226:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:13",
																"nodeType": "YulBlock",
																"src": "2282:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:13"
																			},
																			"nativeSrc": "2284:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:13"
																		},
																		"nativeSrc": "2284:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:13"
																				},
																				"nativeSrc": "2256:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:13"
																		},
																		"nativeSrc": "2246:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:13"
																},
																"nativeSrc": "2239:42:13",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:13"
															},
															"nativeSrc": "2236:62:13",
															"nodeType": "YulIf",
															"src": "2236:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:13",
														"nodeType": "YulTypedName",
														"src": "2219:5:13",
														"type": ""
													}
												],
												"src": "2184:120:13"
											},
											{
												"body": {
													"nativeSrc": "2361:86:13",
													"nodeType": "YulBlock",
													"src": "2361:86:13",
													"statements": [
														{
															"nativeSrc": "2371:29:13",
															"nodeType": "YulAssignment",
															"src": "2371:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:13"
																},
																"nativeSrc": "2380:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:13"
																},
																"nativeSrc": "2409:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:13"
															},
															"nativeSrc": "2409:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:13",
														"nodeType": "YulTypedName",
														"src": "2339:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:13",
														"nodeType": "YulTypedName",
														"src": "2347:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:13",
														"nodeType": "YulTypedName",
														"src": "2355:5:13",
														"type": ""
													}
												],
												"src": "2310:137:13"
											},
											{
												"body": {
													"nativeSrc": "2518:262:13",
													"nodeType": "YulBlock",
													"src": "2518:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:13",
																"nodeType": "YulBlock",
																"src": "2564:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:13"
																			},
																			"nativeSrc": "2566:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:13"
																		},
																		"nativeSrc": "2566:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:13"
																		},
																		"nativeSrc": "2535:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:13"
																},
																"nativeSrc": "2531:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:13"
															},
															"nativeSrc": "2528:119:13",
															"nodeType": "YulIf",
															"src": "2528:119:13"
														},
														{
															"nativeSrc": "2657:116:13",
															"nodeType": "YulBlock",
															"src": "2657:116:13",
															"statements": [
																{
																	"nativeSrc": "2672:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:13",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:13"
																				},
																				"nativeSrc": "2731:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:13"
																		},
																		"nativeSrc": "2711:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:13",
														"nodeType": "YulTypedName",
														"src": "2488:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:13",
														"nodeType": "YulTypedName",
														"src": "2499:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:13",
														"nodeType": "YulTypedName",
														"src": "2511:6:13",
														"type": ""
													}
												],
												"src": "2453:327:13"
											},
											{
												"body": {
													"nativeSrc": "2828:48:13",
													"nodeType": "YulBlock",
													"src": "2828:48:13",
													"statements": [
														{
															"nativeSrc": "2838:32:13",
															"nodeType": "YulAssignment",
															"src": "2838:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:13"
																		},
																		"nativeSrc": "2856:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:13"
																},
																"nativeSrc": "2849:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:13",
														"nodeType": "YulTypedName",
														"src": "2810:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:13",
														"nodeType": "YulTypedName",
														"src": "2820:7:13",
														"type": ""
													}
												],
												"src": "2786:90:13"
											},
											{
												"body": {
													"nativeSrc": "2941:50:13",
													"nodeType": "YulBlock",
													"src": "2941:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:13"
																		},
																		"nativeSrc": "2963:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:13"
																},
																"nativeSrc": "2951:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:13"
															},
															"nativeSrc": "2951:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:13",
														"nodeType": "YulTypedName",
														"src": "2929:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:13",
														"nodeType": "YulTypedName",
														"src": "2936:3:13",
														"type": ""
													}
												],
												"src": "2882:109:13"
											},
											{
												"body": {
													"nativeSrc": "3089:118:13",
													"nodeType": "YulBlock",
													"src": "3089:118:13",
													"statements": [
														{
															"nativeSrc": "3099:26:13",
															"nodeType": "YulAssignment",
															"src": "3099:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:13"
																},
																"nativeSrc": "3107:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:13"
																		},
																		"nativeSrc": "3182:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:13"
																},
																"nativeSrc": "3135:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:13"
															},
															"nativeSrc": "3135:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:13",
														"nodeType": "YulTypedName",
														"src": "3061:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:13",
														"nodeType": "YulTypedName",
														"src": "3073:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:13",
														"nodeType": "YulTypedName",
														"src": "3084:4:13",
														"type": ""
													}
												],
												"src": "2997:210:13"
											},
											{
												"body": {
													"nativeSrc": "3302:28:13",
													"nodeType": "YulBlock",
													"src": "3302:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3319:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3322:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3322:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3312:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:13"
																},
																"nativeSrc": "3312:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3312:12:13"
															},
															"nativeSrc": "3312:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "3312:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3213:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3213:117:13"
											},
											{
												"body": {
													"nativeSrc": "3425:28:13",
													"nodeType": "YulBlock",
													"src": "3425:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3442:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3442:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3445:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3435:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:13"
																},
																"nativeSrc": "3435:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3435:12:13"
															},
															"nativeSrc": "3435:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "3435:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3336:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3336:117:13"
											},
											{
												"body": {
													"nativeSrc": "3507:54:13",
													"nodeType": "YulBlock",
													"src": "3507:54:13",
													"statements": [
														{
															"nativeSrc": "3517:38:13",
															"nodeType": "YulAssignment",
															"src": "3517:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3535:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3535:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3542:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3531:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:13"
																		},
																		"nativeSrc": "3531:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3531:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3551:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3551:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3547:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:13"
																		},
																		"nativeSrc": "3547:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3527:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:13"
																},
																"nativeSrc": "3527:28:13",
																"nodeType": "YulFunctionCall",
																"src": "3527:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3517:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3459:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3490:5:13",
														"nodeType": "YulTypedName",
														"src": "3490:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3500:6:13",
														"nodeType": "YulTypedName",
														"src": "3500:6:13",
														"type": ""
													}
												],
												"src": "3459:102:13"
											},
											{
												"body": {
													"nativeSrc": "3595:152:13",
													"nodeType": "YulBlock",
													"src": "3595:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3612:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:77:13",
																		"nodeType": "YulLiteral",
																		"src": "3615:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3605:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:13"
																},
																"nativeSrc": "3605:88:13",
																"nodeType": "YulFunctionCall",
																"src": "3605:88:13"
															},
															"nativeSrc": "3605:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "3605:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3709:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3709:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3712:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3712:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3702:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:13"
																},
																"nativeSrc": "3702:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3702:15:13"
															},
															"nativeSrc": "3702:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3702:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3733:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3736:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3736:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:13"
																},
																"nativeSrc": "3726:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3726:15:13"
															},
															"nativeSrc": "3726:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3726:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3567:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3567:180:13"
											},
											{
												"body": {
													"nativeSrc": "3796:238:13",
													"nodeType": "YulBlock",
													"src": "3796:238:13",
													"statements": [
														{
															"nativeSrc": "3806:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3806:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3828:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3858:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3858:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3836:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "3836:21:13"
																		},
																		"nativeSrc": "3836:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3836:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3824:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3824:3:13"
																},
																"nativeSrc": "3824:40:13",
																"nodeType": "YulFunctionCall",
																"src": "3824:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3810:10:13",
																	"nodeType": "YulTypedName",
																	"src": "3810:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3975:22:13",
																"nodeType": "YulBlock",
																"src": "3975:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3977:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3977:16:13"
																			},
																			"nativeSrc": "3977:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:18:13"
																		},
																		"nativeSrc": "3977:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3918:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "3918:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3930:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3930:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3915:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3915:2:13"
																		},
																		"nativeSrc": "3915:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3954:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "3954:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3966:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3966:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3951:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3951:2:13"
																		},
																		"nativeSrc": "3951:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3951:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3912:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3912:2:13"
																},
																"nativeSrc": "3912:62:13",
																"nodeType": "YulFunctionCall",
																"src": "3912:62:13"
															},
															"nativeSrc": "3909:88:13",
															"nodeType": "YulIf",
															"src": "3909:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4013:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4013:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4017:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "4017:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4006:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:13"
																},
																"nativeSrc": "4006:22:13",
																"nodeType": "YulFunctionCall",
																"src": "4006:22:13"
															},
															"nativeSrc": "4006:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "4006:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3753:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3782:6:13",
														"nodeType": "YulTypedName",
														"src": "3782:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3790:4:13",
														"nodeType": "YulTypedName",
														"src": "3790:4:13",
														"type": ""
													}
												],
												"src": "3753:281:13"
											},
											{
												"body": {
													"nativeSrc": "4081:88:13",
													"nodeType": "YulBlock",
													"src": "4081:88:13",
													"statements": [
														{
															"nativeSrc": "4091:30:13",
															"nodeType": "YulAssignment",
															"src": "4091:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4101:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4101:18:13"
																},
																"nativeSrc": "4101:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4101:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4091:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4150:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4150:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4158:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4130:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "4130:19:13"
																},
																"nativeSrc": "4130:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4130:33:13"
															},
															"nativeSrc": "4130:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4130:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4040:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4065:4:13",
														"nodeType": "YulTypedName",
														"src": "4065:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4074:6:13",
														"nodeType": "YulTypedName",
														"src": "4074:6:13",
														"type": ""
													}
												],
												"src": "4040:129:13"
											},
											{
												"body": {
													"nativeSrc": "4242:241:13",
													"nodeType": "YulBlock",
													"src": "4242:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4347:22:13",
																"nodeType": "YulBlock",
																"src": "4347:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4349:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4349:16:13"
																			},
																			"nativeSrc": "4349:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4349:18:13"
																		},
																		"nativeSrc": "4349:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4349:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4319:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4327:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4327:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4316:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4316:2:13"
																},
																"nativeSrc": "4316:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4316:30:13"
															},
															"nativeSrc": "4313:56:13",
															"nodeType": "YulIf",
															"src": "4313:56:13"
														},
														{
															"nativeSrc": "4379:37:13",
															"nodeType": "YulAssignment",
															"src": "4379:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4409:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4387:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "4387:21:13"
																},
																"nativeSrc": "4387:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4387:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4379:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:13"
																}
															]
														},
														{
															"nativeSrc": "4453:23:13",
															"nodeType": "YulAssignment",
															"src": "4453:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4465:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4471:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4461:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:13"
																},
																"nativeSrc": "4461:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4461:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4453:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4175:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4226:6:13",
														"nodeType": "YulTypedName",
														"src": "4226:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4237:4:13",
														"nodeType": "YulTypedName",
														"src": "4237:4:13",
														"type": ""
													}
												],
												"src": "4175:308:13"
											},
											{
												"body": {
													"nativeSrc": "4553:82:13",
													"nodeType": "YulBlock",
													"src": "4553:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4576:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4576:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4581:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4586:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4586:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4563:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4563:12:13"
																},
																"nativeSrc": "4563:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4563:30:13"
															},
															"nativeSrc": "4563:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "4563:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4613:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4613:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4618:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4618:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4609:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4609:3:13"
																		},
																		"nativeSrc": "4609:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4609:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4627:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4627:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4602:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:13"
																},
																"nativeSrc": "4602:27:13",
																"nodeType": "YulFunctionCall",
																"src": "4602:27:13"
															},
															"nativeSrc": "4602:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "4602:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4489:146:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4535:3:13",
														"nodeType": "YulTypedName",
														"src": "4535:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4540:3:13",
														"nodeType": "YulTypedName",
														"src": "4540:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4545:6:13",
														"nodeType": "YulTypedName",
														"src": "4545:6:13",
														"type": ""
													}
												],
												"src": "4489:146:13"
											},
											{
												"body": {
													"nativeSrc": "4725:341:13",
													"nodeType": "YulBlock",
													"src": "4725:341:13",
													"statements": [
														{
															"nativeSrc": "4735:75:13",
															"nodeType": "YulAssignment",
															"src": "4735:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4802:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4802:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "4760:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "4760:41:13"
																		},
																		"nativeSrc": "4760:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4760:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4744:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "4744:15:13"
																},
																"nativeSrc": "4744:66:13",
																"nodeType": "YulFunctionCall",
																"src": "4744:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4735:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4735:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4826:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4833:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4833:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4819:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4819:6:13"
																},
																"nativeSrc": "4819:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4819:21:13"
															},
															"nativeSrc": "4819:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4819:21:13"
														},
														{
															"nativeSrc": "4849:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4849:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4864:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4864:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4871:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4871:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4860:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4860:3:13"
																},
																"nativeSrc": "4860:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4860:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4853:3:13",
																	"nodeType": "YulTypedName",
																	"src": "4853:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4914:83:13",
																"nodeType": "YulBlock",
																"src": "4914:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4916:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4916:77:13"
																			},
																			"nativeSrc": "4916:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4916:79:13"
																		},
																		"nativeSrc": "4916:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4916:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4895:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4895:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4900:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4900:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4891:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:13"
																		},
																		"nativeSrc": "4891:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4891:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4909:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4909:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4888:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4888:2:13"
																},
																"nativeSrc": "4888:25:13",
																"nodeType": "YulFunctionCall",
																"src": "4888:25:13"
															},
															"nativeSrc": "4885:112:13",
															"nodeType": "YulIf",
															"src": "4885:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5043:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5043:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5048:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5048:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5053:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5053:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5006:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "5006:36:13"
																},
																"nativeSrc": "5006:54:13",
																"nodeType": "YulFunctionCall",
																"src": "5006:54:13"
															},
															"nativeSrc": "5006:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "5006:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "4641:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4698:3:13",
														"nodeType": "YulTypedName",
														"src": "4698:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4703:6:13",
														"nodeType": "YulTypedName",
														"src": "4703:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4711:3:13",
														"nodeType": "YulTypedName",
														"src": "4711:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4719:5:13",
														"nodeType": "YulTypedName",
														"src": "4719:5:13",
														"type": ""
													}
												],
												"src": "4641:425:13"
											},
											{
												"body": {
													"nativeSrc": "5148:278:13",
													"nodeType": "YulBlock",
													"src": "5148:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5197:83:13",
																"nodeType": "YulBlock",
																"src": "5197:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5199:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5199:77:13"
																			},
																			"nativeSrc": "5199:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5199:79:13"
																		},
																		"nativeSrc": "5199:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5199:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5176:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5176:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5184:4:13",
																						"nodeType": "YulLiteral",
																						"src": "5184:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5172:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5172:3:13"
																				},
																				"nativeSrc": "5172:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5191:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5191:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5168:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:13"
																		},
																		"nativeSrc": "5168:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5161:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:13"
																},
																"nativeSrc": "5161:35:13",
																"nodeType": "YulFunctionCall",
																"src": "5161:35:13"
															},
															"nativeSrc": "5158:122:13",
															"nodeType": "YulIf",
															"src": "5158:122:13"
														},
														{
															"nativeSrc": "5289:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5289:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5316:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5316:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5303:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5303:12:13"
																},
																"nativeSrc": "5303:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5303:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5293:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5293:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5332:88:13",
															"nodeType": "YulAssignment",
															"src": "5332:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5393:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5393:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5401:4:13",
																				"nodeType": "YulLiteral",
																				"src": "5401:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5389:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:13"
																		},
																		"nativeSrc": "5389:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5389:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5408:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5408:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5416:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5416:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "5341:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "5341:47:13"
																},
																"nativeSrc": "5341:79:13",
																"nodeType": "YulFunctionCall",
																"src": "5341:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5332:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5332:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5086:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5126:6:13",
														"nodeType": "YulTypedName",
														"src": "5126:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5134:3:13",
														"nodeType": "YulTypedName",
														"src": "5134:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5142:5:13",
														"nodeType": "YulTypedName",
														"src": "5142:5:13",
														"type": ""
													}
												],
												"src": "5086:340:13"
											},
											{
												"body": {
													"nativeSrc": "5525:561:13",
													"nodeType": "YulBlock",
													"src": "5525:561:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5571:83:13",
																"nodeType": "YulBlock",
																"src": "5571:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5573:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5573:77:13"
																			},
																			"nativeSrc": "5573:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5573:79:13"
																		},
																		"nativeSrc": "5573:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5573:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5546:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5546:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5555:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5555:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5542:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5542:3:13"
																		},
																		"nativeSrc": "5542:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5542:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5567:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5567:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5538:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5538:3:13"
																},
																"nativeSrc": "5538:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5538:32:13"
															},
															"nativeSrc": "5535:119:13",
															"nodeType": "YulIf",
															"src": "5535:119:13"
														},
														{
															"nativeSrc": "5664:117:13",
															"nodeType": "YulBlock",
															"src": "5664:117:13",
															"statements": [
																{
																	"nativeSrc": "5679:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5679:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5693:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5693:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5683:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5683:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5708:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5708:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5743:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5743:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5754:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5754:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5739:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5739:3:13"
																				},
																				"nativeSrc": "5739:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5739:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5763:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5763:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5718:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5718:20:13"
																		},
																		"nativeSrc": "5718:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5718:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5708:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5708:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5791:288:13",
															"nodeType": "YulBlock",
															"src": "5791:288:13",
															"statements": [
																{
																	"nativeSrc": "5806:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5806:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5837:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5837:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5848:2:13",
																						"nodeType": "YulLiteral",
																						"src": "5848:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5833:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5833:3:13"
																				},
																				"nativeSrc": "5833:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5833:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5820:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "5820:12:13"
																		},
																		"nativeSrc": "5820:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5820:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5810:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5810:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5899:83:13",
																		"nodeType": "YulBlock",
																		"src": "5899:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5901:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "5901:77:13"
																					},
																					"nativeSrc": "5901:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5901:79:13"
																				},
																				"nativeSrc": "5901:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5901:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5871:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5871:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5879:18:13",
																				"nodeType": "YulLiteral",
																				"src": "5879:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5868:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5868:2:13"
																		},
																		"nativeSrc": "5868:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:30:13"
																	},
																	"nativeSrc": "5865:117:13",
																	"nodeType": "YulIf",
																	"src": "5865:117:13"
																},
																{
																	"nativeSrc": "5996:73:13",
																	"nodeType": "YulAssignment",
																	"src": "5996:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6041:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6041:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6052:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6052:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6037:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6037:3:13"
																				},
																				"nativeSrc": "6037:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6037:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6061:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6061:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "6006:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "6006:30:13"
																		},
																		"nativeSrc": "6006:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6006:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5996:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5996:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "5432:654:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5487:9:13",
														"nodeType": "YulTypedName",
														"src": "5487:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5498:7:13",
														"nodeType": "YulTypedName",
														"src": "5498:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5510:6:13",
														"nodeType": "YulTypedName",
														"src": "5510:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5518:6:13",
														"nodeType": "YulTypedName",
														"src": "5518:6:13",
														"type": ""
													}
												],
												"src": "5432:654:13"
											},
											{
												"body": {
													"nativeSrc": "6158:263:13",
													"nodeType": "YulBlock",
													"src": "6158:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6204:83:13",
																"nodeType": "YulBlock",
																"src": "6204:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6206:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6206:77:13"
																			},
																			"nativeSrc": "6206:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6206:79:13"
																		},
																		"nativeSrc": "6206:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6206:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6179:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6179:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6188:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6188:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6175:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6175:3:13"
																		},
																		"nativeSrc": "6175:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6175:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6200:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6200:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6171:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6171:3:13"
																},
																"nativeSrc": "6171:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6171:32:13"
															},
															"nativeSrc": "6168:119:13",
															"nodeType": "YulIf",
															"src": "6168:119:13"
														},
														{
															"nativeSrc": "6297:117:13",
															"nodeType": "YulBlock",
															"src": "6297:117:13",
															"statements": [
																{
																	"nativeSrc": "6312:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6312:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6326:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6326:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6316:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6316:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6341:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6341:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6376:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6376:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6387:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6387:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6372:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6372:3:13"
																				},
																				"nativeSrc": "6372:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6372:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6396:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6396:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6351:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6351:20:13"
																		},
																		"nativeSrc": "6351:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6351:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6341:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6341:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6092:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6128:9:13",
														"nodeType": "YulTypedName",
														"src": "6128:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6139:7:13",
														"nodeType": "YulTypedName",
														"src": "6139:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6151:6:13",
														"nodeType": "YulTypedName",
														"src": "6151:6:13",
														"type": ""
													}
												],
												"src": "6092:329:13"
											},
											{
												"body": {
													"nativeSrc": "6486:40:13",
													"nodeType": "YulBlock",
													"src": "6486:40:13",
													"statements": [
														{
															"nativeSrc": "6497:22:13",
															"nodeType": "YulAssignment",
															"src": "6497:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6513:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6513:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6507:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6507:5:13"
																},
																"nativeSrc": "6507:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6507:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6497:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6497:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "6427:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6469:5:13",
														"nodeType": "YulTypedName",
														"src": "6469:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6479:6:13",
														"nodeType": "YulTypedName",
														"src": "6479:6:13",
														"type": ""
													}
												],
												"src": "6427:99:13"
											},
											{
												"body": {
													"nativeSrc": "6628:73:13",
													"nodeType": "YulBlock",
													"src": "6628:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6645:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6645:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6650:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6650:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6638:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6638:6:13"
																},
																"nativeSrc": "6638:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6638:19:13"
															},
															"nativeSrc": "6638:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "6638:19:13"
														},
														{
															"nativeSrc": "6666:29:13",
															"nodeType": "YulAssignment",
															"src": "6666:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6685:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6685:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6690:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6690:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6681:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:13"
																},
																"nativeSrc": "6681:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6681:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6666:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "6666:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6532:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6600:3:13",
														"nodeType": "YulTypedName",
														"src": "6600:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6605:6:13",
														"nodeType": "YulTypedName",
														"src": "6605:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6616:11:13",
														"nodeType": "YulTypedName",
														"src": "6616:11:13",
														"type": ""
													}
												],
												"src": "6532:169:13"
											},
											{
												"body": {
													"nativeSrc": "6769:184:13",
													"nodeType": "YulBlock",
													"src": "6769:184:13",
													"statements": [
														{
															"nativeSrc": "6779:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6779:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6788:1:13",
																"nodeType": "YulLiteral",
																"src": "6788:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6783:1:13",
																	"nodeType": "YulTypedName",
																	"src": "6783:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6848:63:13",
																"nodeType": "YulBlock",
																"src": "6848:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6873:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6873:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6878:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "6878:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6869:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6869:3:13"
																					},
																					"nativeSrc": "6869:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6869:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6892:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6892:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6897:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "6897:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6888:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6888:3:13"
																							},
																							"nativeSrc": "6888:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6888:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6882:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6882:5:13"
																					},
																					"nativeSrc": "6882:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6882:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6862:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6862:6:13"
																			},
																			"nativeSrc": "6862:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6862:39:13"
																		},
																		"nativeSrc": "6862:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6862:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6809:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6809:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6812:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6812:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6806:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6806:2:13"
																},
																"nativeSrc": "6806:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6806:13:13"
															},
															"nativeSrc": "6798:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6820:19:13",
																"nodeType": "YulBlock",
																"src": "6820:19:13",
																"statements": [
																	{
																		"nativeSrc": "6822:15:13",
																		"nodeType": "YulAssignment",
																		"src": "6822:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6831:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "6831:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6834:2:13",
																					"nodeType": "YulLiteral",
																					"src": "6834:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6827:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6827:3:13"
																			},
																			"nativeSrc": "6827:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6827:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6822:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6822:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6802:3:13",
																"nodeType": "YulBlock",
																"src": "6802:3:13",
																"statements": []
															},
															"src": "6798:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6931:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6931:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6936:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6936:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6927:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6927:3:13"
																		},
																		"nativeSrc": "6927:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6927:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6945:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6945:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6920:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6920:6:13"
																},
																"nativeSrc": "6920:27:13",
																"nodeType": "YulFunctionCall",
																"src": "6920:27:13"
															},
															"nativeSrc": "6920:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "6920:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6707:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6751:3:13",
														"nodeType": "YulTypedName",
														"src": "6751:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6756:3:13",
														"nodeType": "YulTypedName",
														"src": "6756:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6761:6:13",
														"nodeType": "YulTypedName",
														"src": "6761:6:13",
														"type": ""
													}
												],
												"src": "6707:246:13"
											},
											{
												"body": {
													"nativeSrc": "7051:285:13",
													"nodeType": "YulBlock",
													"src": "7051:285:13",
													"statements": [
														{
															"nativeSrc": "7061:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7061:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7108:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7108:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7075:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "7075:32:13"
																},
																"nativeSrc": "7075:39:13",
																"nodeType": "YulFunctionCall",
																"src": "7075:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7065:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7065:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7123:78:13",
															"nodeType": "YulAssignment",
															"src": "7123:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7189:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7189:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7194:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7194:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7130:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7130:58:13"
																},
																"nativeSrc": "7130:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7130:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7123:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7123:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7249:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7249:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7256:4:13",
																				"nodeType": "YulLiteral",
																				"src": "7256:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7245:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7245:3:13"
																		},
																		"nativeSrc": "7245:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7245:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7263:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7268:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7268:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7210:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "7210:34:13"
																},
																"nativeSrc": "7210:65:13",
																"nodeType": "YulFunctionCall",
																"src": "7210:65:13"
															},
															"nativeSrc": "7210:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "7210:65:13"
														},
														{
															"nativeSrc": "7284:46:13",
															"nodeType": "YulAssignment",
															"src": "7284:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7295:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7295:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7322:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7322:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7300:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "7300:21:13"
																		},
																		"nativeSrc": "7300:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7300:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7291:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7291:3:13"
																},
																"nativeSrc": "7291:39:13",
																"nodeType": "YulFunctionCall",
																"src": "7291:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7284:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6959:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7032:5:13",
														"nodeType": "YulTypedName",
														"src": "7032:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7039:3:13",
														"nodeType": "YulTypedName",
														"src": "7039:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7047:3:13",
														"nodeType": "YulTypedName",
														"src": "7047:3:13",
														"type": ""
													}
												],
												"src": "6959:377:13"
											},
											{
												"body": {
													"nativeSrc": "7460:195:13",
													"nodeType": "YulBlock",
													"src": "7460:195:13",
													"statements": [
														{
															"nativeSrc": "7470:26:13",
															"nodeType": "YulAssignment",
															"src": "7470:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7482:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7482:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7493:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7493:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7478:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7478:3:13"
																},
																"nativeSrc": "7478:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7478:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7470:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7470:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7517:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7517:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7528:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7528:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7513:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7513:3:13"
																		},
																		"nativeSrc": "7513:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7513:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7536:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7536:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7542:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7542:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7532:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7532:3:13"
																		},
																		"nativeSrc": "7532:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7506:6:13"
																},
																"nativeSrc": "7506:47:13",
																"nodeType": "YulFunctionCall",
																"src": "7506:47:13"
															},
															"nativeSrc": "7506:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "7506:47:13"
														},
														{
															"nativeSrc": "7562:86:13",
															"nodeType": "YulAssignment",
															"src": "7562:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7634:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7634:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7643:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7643:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7570:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "7570:63:13"
																},
																"nativeSrc": "7570:78:13",
																"nodeType": "YulFunctionCall",
																"src": "7570:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7562:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7342:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7432:9:13",
														"nodeType": "YulTypedName",
														"src": "7432:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7444:6:13",
														"nodeType": "YulTypedName",
														"src": "7444:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7455:4:13",
														"nodeType": "YulTypedName",
														"src": "7455:4:13",
														"type": ""
													}
												],
												"src": "7342:313:13"
											},
											{
												"body": {
													"nativeSrc": "7743:229:13",
													"nodeType": "YulBlock",
													"src": "7743:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7848:22:13",
																"nodeType": "YulBlock",
																"src": "7848:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7850:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7850:16:13"
																			},
																			"nativeSrc": "7850:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7850:18:13"
																		},
																		"nativeSrc": "7850:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7850:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7820:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7828:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7828:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7817:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7817:2:13"
																},
																"nativeSrc": "7817:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7817:30:13"
															},
															"nativeSrc": "7814:56:13",
															"nodeType": "YulIf",
															"src": "7814:56:13"
														},
														{
															"nativeSrc": "7880:25:13",
															"nodeType": "YulAssignment",
															"src": "7880:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7892:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7892:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7900:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7900:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7888:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7888:3:13"
																},
																"nativeSrc": "7888:17:13",
																"nodeType": "YulFunctionCall",
																"src": "7888:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7880:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7880:4:13"
																}
															]
														},
														{
															"nativeSrc": "7942:23:13",
															"nodeType": "YulAssignment",
															"src": "7942:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7954:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7954:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7960:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7960:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7950:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7950:3:13"
																},
																"nativeSrc": "7950:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7950:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7942:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7942:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7661:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7727:6:13",
														"nodeType": "YulTypedName",
														"src": "7727:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7738:4:13",
														"nodeType": "YulTypedName",
														"src": "7738:4:13",
														"type": ""
													}
												],
												"src": "7661:311:13"
											},
											{
												"body": {
													"nativeSrc": "8067:28:13",
													"nodeType": "YulBlock",
													"src": "8067:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8084:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8084:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8087:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8087:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8077:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8077:6:13"
																},
																"nativeSrc": "8077:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8077:12:13"
															},
															"nativeSrc": "8077:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "8077:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7978:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7978:117:13"
											},
											{
												"body": {
													"nativeSrc": "8220:608:13",
													"nodeType": "YulBlock",
													"src": "8220:608:13",
													"statements": [
														{
															"nativeSrc": "8230:90:13",
															"nodeType": "YulAssignment",
															"src": "8230:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8312:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8312:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8255:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "8255:56:13"
																		},
																		"nativeSrc": "8255:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8255:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8239:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "8239:15:13"
																},
																"nativeSrc": "8239:81:13",
																"nodeType": "YulFunctionCall",
																"src": "8239:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8230:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8230:5:13"
																}
															]
														},
														{
															"nativeSrc": "8329:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8329:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "8340:5:13",
																"nodeType": "YulIdentifier",
																"src": "8340:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8333:3:13",
																	"nodeType": "YulTypedName",
																	"src": "8333:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8362:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8362:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8369:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8369:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8355:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8355:6:13"
																},
																"nativeSrc": "8355:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8355:21:13"
															},
															"nativeSrc": "8355:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8355:21:13"
														},
														{
															"nativeSrc": "8385:23:13",
															"nodeType": "YulAssignment",
															"src": "8385:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8396:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8396:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8403:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8403:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8392:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8392:3:13"
																},
																"nativeSrc": "8392:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8392:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "8385:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8385:3:13"
																}
															]
														},
														{
															"nativeSrc": "8418:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8418:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8436:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8436:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8448:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8448:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8456:4:13",
																				"nodeType": "YulLiteral",
																				"src": "8456:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:13"
																		},
																		"nativeSrc": "8444:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8444:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8432:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8432:3:13"
																},
																"nativeSrc": "8432:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8432:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "8422:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8422:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8490:103:13",
																"nodeType": "YulBlock",
																"src": "8490:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8504:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8504:77:13"
																			},
																			"nativeSrc": "8504:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8504:79:13"
																		},
																		"nativeSrc": "8504:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8504:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8477:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8477:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8485:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8485:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8474:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8474:2:13"
																},
																"nativeSrc": "8474:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8474:15:13"
															},
															"nativeSrc": "8471:122:13",
															"nodeType": "YulIf",
															"src": "8471:122:13"
														},
														{
															"body": {
																"nativeSrc": "8678:144:13",
																"nodeType": "YulBlock",
																"src": "8678:144:13",
																"statements": [
																	{
																		"nativeSrc": "8693:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8693:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "8711:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8711:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "8697:10:13",
																				"nodeType": "YulTypedName",
																				"src": "8697:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8735:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8735:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "8761:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "8761:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "8773:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8773:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "8740:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "8740:20:13"
																					},
																					"nativeSrc": "8740:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8740:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8728:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8728:6:13"
																			},
																			"nativeSrc": "8728:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8728:50:13"
																		},
																		"nativeSrc": "8728:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8728:50:13"
																	},
																	{
																		"nativeSrc": "8791:21:13",
																		"nodeType": "YulAssignment",
																		"src": "8791:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8802:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8802:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8807:4:13",
																					"nodeType": "YulLiteral",
																					"src": "8807:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8798:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8798:3:13"
																			},
																			"nativeSrc": "8798:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8798:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "8791:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8791:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8631:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8631:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8636:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8636:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8628:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8628:2:13"
																},
																"nativeSrc": "8628:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8628:15:13"
															},
															"nativeSrc": "8602:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8644:25:13",
																"nodeType": "YulBlock",
																"src": "8644:25:13",
																"statements": [
																	{
																		"nativeSrc": "8646:21:13",
																		"nodeType": "YulAssignment",
																		"src": "8646:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "8657:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8657:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8662:4:13",
																					"nodeType": "YulLiteral",
																					"src": "8662:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8653:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:13"
																			},
																			"nativeSrc": "8653:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8653:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "8646:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8646:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8606:21:13",
																"nodeType": "YulBlock",
																"src": "8606:21:13",
																"statements": [
																	{
																		"nativeSrc": "8608:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8608:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "8619:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8619:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "8612:3:13",
																				"nodeType": "YulTypedName",
																				"src": "8612:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8602:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8118:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8190:6:13",
														"nodeType": "YulTypedName",
														"src": "8190:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8198:6:13",
														"nodeType": "YulTypedName",
														"src": "8198:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8206:3:13",
														"nodeType": "YulTypedName",
														"src": "8206:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8214:5:13",
														"nodeType": "YulTypedName",
														"src": "8214:5:13",
														"type": ""
													}
												],
												"src": "8118:710:13"
											},
											{
												"body": {
													"nativeSrc": "8928:293:13",
													"nodeType": "YulBlock",
													"src": "8928:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8977:83:13",
																"nodeType": "YulBlock",
																"src": "8977:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8979:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8979:77:13"
																			},
																			"nativeSrc": "8979:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8979:79:13"
																		},
																		"nativeSrc": "8979:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8979:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8956:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8956:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8964:4:13",
																						"nodeType": "YulLiteral",
																						"src": "8964:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8952:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8952:3:13"
																				},
																				"nativeSrc": "8952:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8952:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8971:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8971:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8948:3:13"
																		},
																		"nativeSrc": "8948:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8948:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8941:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8941:6:13"
																},
																"nativeSrc": "8941:35:13",
																"nodeType": "YulFunctionCall",
																"src": "8941:35:13"
															},
															"nativeSrc": "8938:122:13",
															"nodeType": "YulIf",
															"src": "8938:122:13"
														},
														{
															"nativeSrc": "9069:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9069:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9096:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9096:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9083:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9083:12:13"
																},
																"nativeSrc": "9083:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9083:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9073:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9073:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9112:103:13",
															"nodeType": "YulAssignment",
															"src": "9112:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9188:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9188:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9196:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9196:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9184:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:13"
																		},
																		"nativeSrc": "9184:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9184:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9203:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9203:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9211:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9211:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "9121:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "9121:62:13"
																},
																"nativeSrc": "9121:94:13",
																"nodeType": "YulFunctionCall",
																"src": "9121:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9112:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9112:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8851:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8906:6:13",
														"nodeType": "YulTypedName",
														"src": "8906:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8914:3:13",
														"nodeType": "YulTypedName",
														"src": "8914:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8922:5:13",
														"nodeType": "YulTypedName",
														"src": "8922:5:13",
														"type": ""
													}
												],
												"src": "8851:370:13"
											},
											{
												"body": {
													"nativeSrc": "9293:241:13",
													"nodeType": "YulBlock",
													"src": "9293:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9398:22:13",
																"nodeType": "YulBlock",
																"src": "9398:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9400:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9400:16:13"
																			},
																			"nativeSrc": "9400:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9400:18:13"
																		},
																		"nativeSrc": "9400:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9400:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9370:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9370:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9378:18:13",
																		"nodeType": "YulLiteral",
																		"src": "9378:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9367:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9367:2:13"
																},
																"nativeSrc": "9367:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9367:30:13"
															},
															"nativeSrc": "9364:56:13",
															"nodeType": "YulIf",
															"src": "9364:56:13"
														},
														{
															"nativeSrc": "9430:37:13",
															"nodeType": "YulAssignment",
															"src": "9430:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9460:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9460:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9438:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "9438:21:13"
																},
																"nativeSrc": "9438:29:13",
																"nodeType": "YulFunctionCall",
																"src": "9438:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9430:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9430:4:13"
																}
															]
														},
														{
															"nativeSrc": "9504:23:13",
															"nodeType": "YulAssignment",
															"src": "9504:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9516:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9516:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9522:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9522:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9512:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9512:3:13"
																},
																"nativeSrc": "9512:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9512:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9504:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9504:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9227:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9277:6:13",
														"nodeType": "YulTypedName",
														"src": "9277:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9288:4:13",
														"nodeType": "YulTypedName",
														"src": "9288:4:13",
														"type": ""
													}
												],
												"src": "9227:307:13"
											},
											{
												"body": {
													"nativeSrc": "9623:340:13",
													"nodeType": "YulBlock",
													"src": "9623:340:13",
													"statements": [
														{
															"nativeSrc": "9633:74:13",
															"nodeType": "YulAssignment",
															"src": "9633:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9699:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9699:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9658:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "9658:40:13"
																		},
																		"nativeSrc": "9658:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9658:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9642:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9642:15:13"
																},
																"nativeSrc": "9642:65:13",
																"nodeType": "YulFunctionCall",
																"src": "9642:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9633:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9633:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9723:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9723:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9730:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9730:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9716:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9716:6:13"
																},
																"nativeSrc": "9716:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9716:21:13"
															},
															"nativeSrc": "9716:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9716:21:13"
														},
														{
															"nativeSrc": "9746:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9746:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9761:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9761:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9768:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9768:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9757:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9757:3:13"
																},
																"nativeSrc": "9757:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9757:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9750:3:13",
																	"nodeType": "YulTypedName",
																	"src": "9750:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9811:83:13",
																"nodeType": "YulBlock",
																"src": "9811:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9813:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9813:77:13"
																			},
																			"nativeSrc": "9813:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9813:79:13"
																		},
																		"nativeSrc": "9813:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9813:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9792:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9792:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9797:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9797:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9788:3:13"
																		},
																		"nativeSrc": "9788:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9788:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9806:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9806:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9785:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9785:2:13"
																},
																"nativeSrc": "9785:25:13",
																"nodeType": "YulFunctionCall",
																"src": "9785:25:13"
															},
															"nativeSrc": "9782:112:13",
															"nodeType": "YulIf",
															"src": "9782:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9940:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9940:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9945:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9945:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9950:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9950:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9903:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "9903:36:13"
																},
																"nativeSrc": "9903:54:13",
																"nodeType": "YulFunctionCall",
																"src": "9903:54:13"
															},
															"nativeSrc": "9903:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "9903:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9540:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9596:3:13",
														"nodeType": "YulTypedName",
														"src": "9596:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9601:6:13",
														"nodeType": "YulTypedName",
														"src": "9601:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9609:3:13",
														"nodeType": "YulTypedName",
														"src": "9609:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9617:5:13",
														"nodeType": "YulTypedName",
														"src": "9617:5:13",
														"type": ""
													}
												],
												"src": "9540:423:13"
											},
											{
												"body": {
													"nativeSrc": "10043:277:13",
													"nodeType": "YulBlock",
													"src": "10043:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10092:83:13",
																"nodeType": "YulBlock",
																"src": "10092:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10094:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10094:77:13"
																			},
																			"nativeSrc": "10094:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10094:79:13"
																		},
																		"nativeSrc": "10094:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10094:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10071:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10071:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10079:4:13",
																						"nodeType": "YulLiteral",
																						"src": "10079:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10067:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10067:3:13"
																				},
																				"nativeSrc": "10067:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10067:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10086:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10086:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10063:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10063:3:13"
																		},
																		"nativeSrc": "10063:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10063:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10056:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10056:6:13"
																},
																"nativeSrc": "10056:35:13",
																"nodeType": "YulFunctionCall",
																"src": "10056:35:13"
															},
															"nativeSrc": "10053:122:13",
															"nodeType": "YulIf",
															"src": "10053:122:13"
														},
														{
															"nativeSrc": "10184:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10184:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10211:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10211:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10198:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10198:12:13"
																},
																"nativeSrc": "10198:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10198:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10188:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10188:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10227:87:13",
															"nodeType": "YulAssignment",
															"src": "10227:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10287:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10287:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10295:4:13",
																				"nodeType": "YulLiteral",
																				"src": "10295:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10283:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10283:3:13"
																		},
																		"nativeSrc": "10283:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10283:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10302:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10302:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10310:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10310:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10236:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "10236:46:13"
																},
																"nativeSrc": "10236:78:13",
																"nodeType": "YulFunctionCall",
																"src": "10236:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10227:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10227:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9982:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10021:6:13",
														"nodeType": "YulTypedName",
														"src": "10021:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10029:3:13",
														"nodeType": "YulTypedName",
														"src": "10029:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10037:5:13",
														"nodeType": "YulTypedName",
														"src": "10037:5:13",
														"type": ""
													}
												],
												"src": "9982:338:13"
											},
											{
												"body": {
													"nativeSrc": "10519:1316:13",
													"nodeType": "YulBlock",
													"src": "10519:1316:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10566:83:13",
																"nodeType": "YulBlock",
																"src": "10566:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10568:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10568:77:13"
																			},
																			"nativeSrc": "10568:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10568:79:13"
																		},
																		"nativeSrc": "10568:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10568:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10540:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10540:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10549:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10549:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10536:3:13"
																		},
																		"nativeSrc": "10536:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10536:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10561:3:13",
																		"nodeType": "YulLiteral",
																		"src": "10561:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10532:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10532:3:13"
																},
																"nativeSrc": "10532:33:13",
																"nodeType": "YulFunctionCall",
																"src": "10532:33:13"
															},
															"nativeSrc": "10529:120:13",
															"nodeType": "YulIf",
															"src": "10529:120:13"
														},
														{
															"nativeSrc": "10659:117:13",
															"nodeType": "YulBlock",
															"src": "10659:117:13",
															"statements": [
																{
																	"nativeSrc": "10674:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10674:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10688:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10688:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10678:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10678:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10703:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10703:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10738:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10738:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10749:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10749:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10734:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10734:3:13"
																				},
																				"nativeSrc": "10734:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10734:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10758:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10758:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10713:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10713:20:13"
																		},
																		"nativeSrc": "10713:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10713:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10703:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10703:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10786:118:13",
															"nodeType": "YulBlock",
															"src": "10786:118:13",
															"statements": [
																{
																	"nativeSrc": "10801:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10801:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10815:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10815:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10805:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10805:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10831:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10831:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10866:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10866:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10877:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10877:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10862:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10862:3:13"
																				},
																				"nativeSrc": "10862:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10862:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10886:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10886:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10841:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10841:20:13"
																		},
																		"nativeSrc": "10841:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10841:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10831:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10831:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10914:303:13",
															"nodeType": "YulBlock",
															"src": "10914:303:13",
															"statements": [
																{
																	"nativeSrc": "10929:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10929:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10960:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10960:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "10971:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10956:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10956:3:13"
																				},
																				"nativeSrc": "10956:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10956:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10943:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "10943:12:13"
																		},
																		"nativeSrc": "10943:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10943:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10933:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10933:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11022:83:13",
																		"nodeType": "YulBlock",
																		"src": "11022:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11024:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "11024:77:13"
																					},
																					"nativeSrc": "11024:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11024:79:13"
																				},
																				"nativeSrc": "11024:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "11024:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10994:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10994:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11002:18:13",
																				"nodeType": "YulLiteral",
																				"src": "11002:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10991:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10991:2:13"
																		},
																		"nativeSrc": "10991:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10991:30:13"
																	},
																	"nativeSrc": "10988:117:13",
																	"nodeType": "YulIf",
																	"src": "10988:117:13"
																},
																{
																	"nativeSrc": "11119:88:13",
																	"nodeType": "YulAssignment",
																	"src": "11119:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11179:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11179:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11190:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11190:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11175:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11175:3:13"
																				},
																				"nativeSrc": "11175:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11175:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11199:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11199:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "11129:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "11129:45:13"
																		},
																		"nativeSrc": "11129:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11129:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11119:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11119:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11227:303:13",
															"nodeType": "YulBlock",
															"src": "11227:303:13",
															"statements": [
																{
																	"nativeSrc": "11242:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11242:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11273:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11273:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11284:2:13",
																						"nodeType": "YulLiteral",
																						"src": "11284:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11269:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11269:3:13"
																				},
																				"nativeSrc": "11269:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11269:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11256:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "11256:12:13"
																		},
																		"nativeSrc": "11256:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11256:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11246:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11246:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11335:83:13",
																		"nodeType": "YulBlock",
																		"src": "11335:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11337:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "11337:77:13"
																					},
																					"nativeSrc": "11337:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11337:79:13"
																				},
																				"nativeSrc": "11337:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "11337:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11307:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11307:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11315:18:13",
																				"nodeType": "YulLiteral",
																				"src": "11315:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11304:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11304:2:13"
																		},
																		"nativeSrc": "11304:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11304:30:13"
																	},
																	"nativeSrc": "11301:117:13",
																	"nodeType": "YulIf",
																	"src": "11301:117:13"
																},
																{
																	"nativeSrc": "11432:88:13",
																	"nodeType": "YulAssignment",
																	"src": "11432:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11492:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11492:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11503:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11503:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11488:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11488:3:13"
																				},
																				"nativeSrc": "11488:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11488:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11512:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11512:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "11442:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "11442:45:13"
																		},
																		"nativeSrc": "11442:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11442:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11432:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11432:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11540:288:13",
															"nodeType": "YulBlock",
															"src": "11540:288:13",
															"statements": [
																{
																	"nativeSrc": "11555:47:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11555:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11586:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11586:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11597:3:13",
																						"nodeType": "YulLiteral",
																						"src": "11597:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11582:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11582:3:13"
																				},
																				"nativeSrc": "11582:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11582:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11569:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "11569:12:13"
																		},
																		"nativeSrc": "11569:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11569:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11559:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11559:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11649:83:13",
																		"nodeType": "YulBlock",
																		"src": "11649:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11651:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "11651:77:13"
																					},
																					"nativeSrc": "11651:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11651:79:13"
																				},
																				"nativeSrc": "11651:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "11651:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11621:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11621:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11629:18:13",
																				"nodeType": "YulLiteral",
																				"src": "11629:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11618:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11618:2:13"
																		},
																		"nativeSrc": "11618:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11618:30:13"
																	},
																	"nativeSrc": "11615:117:13",
																	"nodeType": "YulIf",
																	"src": "11615:117:13"
																},
																{
																	"nativeSrc": "11746:72:13",
																	"nodeType": "YulAssignment",
																	"src": "11746:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11790:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11790:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11801:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11801:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11786:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11786:3:13"
																				},
																				"nativeSrc": "11786:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11786:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11810:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11810:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11756:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "11756:29:13"
																		},
																		"nativeSrc": "11756:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11756:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11746:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11746:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "10326:1509:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10457:9:13",
														"nodeType": "YulTypedName",
														"src": "10457:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10468:7:13",
														"nodeType": "YulTypedName",
														"src": "10468:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10480:6:13",
														"nodeType": "YulTypedName",
														"src": "10480:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10488:6:13",
														"nodeType": "YulTypedName",
														"src": "10488:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10496:6:13",
														"nodeType": "YulTypedName",
														"src": "10496:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10504:6:13",
														"nodeType": "YulTypedName",
														"src": "10504:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10512:6:13",
														"nodeType": "YulTypedName",
														"src": "10512:6:13",
														"type": ""
													}
												],
												"src": "10326:1509:13"
											},
											{
												"body": {
													"nativeSrc": "11923:229:13",
													"nodeType": "YulBlock",
													"src": "11923:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12028:22:13",
																"nodeType": "YulBlock",
																"src": "12028:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12030:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12030:16:13"
																			},
																			"nativeSrc": "12030:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12030:18:13"
																		},
																		"nativeSrc": "12030:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12030:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12000:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12000:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12008:18:13",
																		"nodeType": "YulLiteral",
																		"src": "12008:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11997:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11997:2:13"
																},
																"nativeSrc": "11997:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11997:30:13"
															},
															"nativeSrc": "11994:56:13",
															"nodeType": "YulIf",
															"src": "11994:56:13"
														},
														{
															"nativeSrc": "12060:25:13",
															"nodeType": "YulAssignment",
															"src": "12060:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12072:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12072:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12080:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12080:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12068:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12068:3:13"
																},
																"nativeSrc": "12068:17:13",
																"nodeType": "YulFunctionCall",
																"src": "12068:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12060:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12060:4:13"
																}
															]
														},
														{
															"nativeSrc": "12122:23:13",
															"nodeType": "YulAssignment",
															"src": "12122:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "12134:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12134:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12140:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12140:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12130:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12130:3:13"
																},
																"nativeSrc": "12130:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12130:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12122:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12122:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11841:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11907:6:13",
														"nodeType": "YulTypedName",
														"src": "11907:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11918:4:13",
														"nodeType": "YulTypedName",
														"src": "11918:4:13",
														"type": ""
													}
												],
												"src": "11841:311:13"
											},
											{
												"body": {
													"nativeSrc": "12277:608:13",
													"nodeType": "YulBlock",
													"src": "12277:608:13",
													"statements": [
														{
															"nativeSrc": "12287:90:13",
															"nodeType": "YulAssignment",
															"src": "12287:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12369:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12369:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12312:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "12312:56:13"
																		},
																		"nativeSrc": "12312:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12312:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12296:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "12296:15:13"
																},
																"nativeSrc": "12296:81:13",
																"nodeType": "YulFunctionCall",
																"src": "12296:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12287:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12287:5:13"
																}
															]
														},
														{
															"nativeSrc": "12386:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12386:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "12397:5:13",
																"nodeType": "YulIdentifier",
																"src": "12397:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12390:3:13",
																	"nodeType": "YulTypedName",
																	"src": "12390:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12419:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12419:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12426:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12426:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12412:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12412:6:13"
																},
																"nativeSrc": "12412:21:13",
																"nodeType": "YulFunctionCall",
																"src": "12412:21:13"
															},
															"nativeSrc": "12412:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "12412:21:13"
														},
														{
															"nativeSrc": "12442:23:13",
															"nodeType": "YulAssignment",
															"src": "12442:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12453:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12453:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12460:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12460:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12449:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12449:3:13"
																},
																"nativeSrc": "12449:16:13",
																"nodeType": "YulFunctionCall",
																"src": "12449:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "12442:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12442:3:13"
																}
															]
														},
														{
															"nativeSrc": "12475:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12475:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12493:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12493:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12505:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12505:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12513:4:13",
																				"nodeType": "YulLiteral",
																				"src": "12513:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12501:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12501:3:13"
																		},
																		"nativeSrc": "12501:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12501:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12489:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12489:3:13"
																},
																"nativeSrc": "12489:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12489:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "12479:6:13",
																	"nodeType": "YulTypedName",
																	"src": "12479:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12547:103:13",
																"nodeType": "YulBlock",
																"src": "12547:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "12561:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12561:77:13"
																			},
																			"nativeSrc": "12561:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12561:79:13"
																		},
																		"nativeSrc": "12561:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12561:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12534:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12534:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12542:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12542:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12531:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12531:2:13"
																},
																"nativeSrc": "12531:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12531:15:13"
															},
															"nativeSrc": "12528:122:13",
															"nodeType": "YulIf",
															"src": "12528:122:13"
														},
														{
															"body": {
																"nativeSrc": "12735:144:13",
																"nodeType": "YulBlock",
																"src": "12735:144:13",
																"statements": [
																	{
																		"nativeSrc": "12750:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12750:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "12768:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12768:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "12754:10:13",
																				"nodeType": "YulTypedName",
																				"src": "12754:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12792:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12792:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "12818:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "12818:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "12830:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "12830:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "12797:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "12797:20:13"
																					},
																					"nativeSrc": "12797:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12797:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12785:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12785:6:13"
																			},
																			"nativeSrc": "12785:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12785:50:13"
																		},
																		"nativeSrc": "12785:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12785:50:13"
																	},
																	{
																		"nativeSrc": "12848:21:13",
																		"nodeType": "YulAssignment",
																		"src": "12848:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12859:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12859:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12864:4:13",
																					"nodeType": "YulLiteral",
																					"src": "12864:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12855:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12855:3:13"
																			},
																			"nativeSrc": "12855:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12855:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "12848:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12848:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12688:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12688:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12693:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12693:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12685:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12685:2:13"
																},
																"nativeSrc": "12685:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12685:15:13"
															},
															"nativeSrc": "12659:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12701:25:13",
																"nodeType": "YulBlock",
																"src": "12701:25:13",
																"statements": [
																	{
																		"nativeSrc": "12703:21:13",
																		"nodeType": "YulAssignment",
																		"src": "12703:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12714:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12714:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12719:4:13",
																					"nodeType": "YulLiteral",
																					"src": "12719:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12710:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12710:3:13"
																			},
																			"nativeSrc": "12710:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12710:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "12703:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12703:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12663:21:13",
																"nodeType": "YulBlock",
																"src": "12663:21:13",
																"statements": [
																	{
																		"nativeSrc": "12665:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12665:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "12676:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12676:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "12669:3:13",
																				"nodeType": "YulTypedName",
																				"src": "12669:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12659:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12175:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12247:6:13",
														"nodeType": "YulTypedName",
														"src": "12247:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12255:6:13",
														"nodeType": "YulTypedName",
														"src": "12255:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12263:3:13",
														"nodeType": "YulTypedName",
														"src": "12263:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12271:5:13",
														"nodeType": "YulTypedName",
														"src": "12271:5:13",
														"type": ""
													}
												],
												"src": "12175:710:13"
											},
											{
												"body": {
													"nativeSrc": "12985:293:13",
													"nodeType": "YulBlock",
													"src": "12985:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "13034:83:13",
																"nodeType": "YulBlock",
																"src": "13034:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "13036:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "13036:77:13"
																			},
																			"nativeSrc": "13036:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13036:79:13"
																		},
																		"nativeSrc": "13036:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13036:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "13013:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13013:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13021:4:13",
																						"nodeType": "YulLiteral",
																						"src": "13021:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13009:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13009:3:13"
																				},
																				"nativeSrc": "13009:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13009:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "13028:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13028:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "13005:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13005:3:13"
																		},
																		"nativeSrc": "13005:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13005:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12998:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12998:6:13"
																},
																"nativeSrc": "12998:35:13",
																"nodeType": "YulFunctionCall",
																"src": "12998:35:13"
															},
															"nativeSrc": "12995:122:13",
															"nodeType": "YulIf",
															"src": "12995:122:13"
														},
														{
															"nativeSrc": "13126:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13126:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13153:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13153:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13140:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "13140:12:13"
																},
																"nativeSrc": "13140:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13140:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13130:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13130:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13169:103:13",
															"nodeType": "YulAssignment",
															"src": "13169:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13245:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13245:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13253:4:13",
																				"nodeType": "YulLiteral",
																				"src": "13253:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13241:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13241:3:13"
																		},
																		"nativeSrc": "13241:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13241:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13260:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13260:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13268:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13268:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "13178:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "13178:62:13"
																},
																"nativeSrc": "13178:94:13",
																"nodeType": "YulFunctionCall",
																"src": "13178:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13169:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13169:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12908:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12963:6:13",
														"nodeType": "YulTypedName",
														"src": "12963:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12971:3:13",
														"nodeType": "YulTypedName",
														"src": "12971:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12979:5:13",
														"nodeType": "YulTypedName",
														"src": "12979:5:13",
														"type": ""
													}
												],
												"src": "12908:370:13"
											},
											{
												"body": {
													"nativeSrc": "13417:761:13",
													"nodeType": "YulBlock",
													"src": "13417:761:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "13463:83:13",
																"nodeType": "YulBlock",
																"src": "13463:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13465:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "13465:77:13"
																			},
																			"nativeSrc": "13465:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13465:79:13"
																		},
																		"nativeSrc": "13465:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13465:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13438:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13438:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13447:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13447:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13434:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13434:3:13"
																		},
																		"nativeSrc": "13434:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13434:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13459:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13459:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13430:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13430:3:13"
																},
																"nativeSrc": "13430:32:13",
																"nodeType": "YulFunctionCall",
																"src": "13430:32:13"
															},
															"nativeSrc": "13427:119:13",
															"nodeType": "YulIf",
															"src": "13427:119:13"
														},
														{
															"nativeSrc": "13556:302:13",
															"nodeType": "YulBlock",
															"src": "13556:302:13",
															"statements": [
																{
																	"nativeSrc": "13571:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13571:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13602:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13602:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13613:1:13",
																						"nodeType": "YulLiteral",
																						"src": "13613:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13598:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13598:3:13"
																				},
																				"nativeSrc": "13598:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13598:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13585:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "13585:12:13"
																		},
																		"nativeSrc": "13585:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13585:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13575:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13575:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13663:83:13",
																		"nodeType": "YulBlock",
																		"src": "13663:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13665:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "13665:77:13"
																					},
																					"nativeSrc": "13665:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13665:79:13"
																				},
																				"nativeSrc": "13665:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "13665:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13635:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13635:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13643:18:13",
																				"nodeType": "YulLiteral",
																				"src": "13643:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13632:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "13632:2:13"
																		},
																		"nativeSrc": "13632:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13632:30:13"
																	},
																	"nativeSrc": "13629:117:13",
																	"nodeType": "YulIf",
																	"src": "13629:117:13"
																},
																{
																	"nativeSrc": "13760:88:13",
																	"nodeType": "YulAssignment",
																	"src": "13760:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13820:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13820:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13831:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13831:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13816:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13816:3:13"
																				},
																				"nativeSrc": "13816:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13816:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13840:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13840:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "13770:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "13770:45:13"
																		},
																		"nativeSrc": "13770:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13770:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13760:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13760:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13868:303:13",
															"nodeType": "YulBlock",
															"src": "13868:303:13",
															"statements": [
																{
																	"nativeSrc": "13883:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13883:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13914:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13914:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13925:2:13",
																						"nodeType": "YulLiteral",
																						"src": "13925:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13910:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13910:3:13"
																				},
																				"nativeSrc": "13910:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13910:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13897:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "13897:12:13"
																		},
																		"nativeSrc": "13897:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13897:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13887:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13887:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13976:83:13",
																		"nodeType": "YulBlock",
																		"src": "13976:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13978:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "13978:77:13"
																					},
																					"nativeSrc": "13978:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "13978:79:13"
																				},
																				"nativeSrc": "13978:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "13978:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13948:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13948:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13956:18:13",
																				"nodeType": "YulLiteral",
																				"src": "13956:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13945:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "13945:2:13"
																		},
																		"nativeSrc": "13945:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13945:30:13"
																	},
																	"nativeSrc": "13942:117:13",
																	"nodeType": "YulIf",
																	"src": "13942:117:13"
																},
																{
																	"nativeSrc": "14073:88:13",
																	"nodeType": "YulAssignment",
																	"src": "14073:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14133:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "14133:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14144:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "14144:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14129:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14129:3:13"
																				},
																				"nativeSrc": "14129:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14129:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14153:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14153:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "14083:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "14083:45:13"
																		},
																		"nativeSrc": "14083:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14083:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14073:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "14073:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13284:894:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13379:9:13",
														"nodeType": "YulTypedName",
														"src": "13379:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13390:7:13",
														"nodeType": "YulTypedName",
														"src": "13390:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13402:6:13",
														"nodeType": "YulTypedName",
														"src": "13402:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13410:6:13",
														"nodeType": "YulTypedName",
														"src": "13410:6:13",
														"type": ""
													}
												],
												"src": "13284:894:13"
											},
											{
												"body": {
													"nativeSrc": "14258:40:13",
													"nodeType": "YulBlock",
													"src": "14258:40:13",
													"statements": [
														{
															"nativeSrc": "14269:22:13",
															"nodeType": "YulAssignment",
															"src": "14269:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14285:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14285:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14279:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14279:5:13"
																},
																"nativeSrc": "14279:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14279:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14269:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14269:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14184:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14241:5:13",
														"nodeType": "YulTypedName",
														"src": "14241:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14251:6:13",
														"nodeType": "YulTypedName",
														"src": "14251:6:13",
														"type": ""
													}
												],
												"src": "14184:114:13"
											},
											{
												"body": {
													"nativeSrc": "14415:73:13",
													"nodeType": "YulBlock",
													"src": "14415:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14432:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14432:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14437:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14437:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14425:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14425:6:13"
																},
																"nativeSrc": "14425:19:13",
																"nodeType": "YulFunctionCall",
																"src": "14425:19:13"
															},
															"nativeSrc": "14425:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "14425:19:13"
														},
														{
															"nativeSrc": "14453:29:13",
															"nodeType": "YulAssignment",
															"src": "14453:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14472:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14472:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14477:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14477:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14468:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14468:3:13"
																},
																"nativeSrc": "14468:14:13",
																"nodeType": "YulFunctionCall",
																"src": "14468:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14453:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "14453:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14304:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14387:3:13",
														"nodeType": "YulTypedName",
														"src": "14387:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14392:6:13",
														"nodeType": "YulTypedName",
														"src": "14392:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14403:11:13",
														"nodeType": "YulTypedName",
														"src": "14403:11:13",
														"type": ""
													}
												],
												"src": "14304:184:13"
											},
											{
												"body": {
													"nativeSrc": "14566:60:13",
													"nodeType": "YulBlock",
													"src": "14566:60:13",
													"statements": [
														{
															"nativeSrc": "14576:11:13",
															"nodeType": "YulAssignment",
															"src": "14576:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "14584:3:13",
																"nodeType": "YulIdentifier",
																"src": "14584:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14576:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14576:4:13"
																}
															]
														},
														{
															"nativeSrc": "14597:22:13",
															"nodeType": "YulAssignment",
															"src": "14597:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14609:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14609:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14614:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14614:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14605:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14605:3:13"
																},
																"nativeSrc": "14605:14:13",
																"nodeType": "YulFunctionCall",
																"src": "14605:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14597:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14597:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14494:132:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14553:3:13",
														"nodeType": "YulTypedName",
														"src": "14553:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14561:4:13",
														"nodeType": "YulTypedName",
														"src": "14561:4:13",
														"type": ""
													}
												],
												"src": "14494:132:13"
											},
											{
												"body": {
													"nativeSrc": "14687:53:13",
													"nodeType": "YulBlock",
													"src": "14687:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14704:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14704:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14727:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14727:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14709:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "14709:17:13"
																		},
																		"nativeSrc": "14709:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14709:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14697:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14697:6:13"
																},
																"nativeSrc": "14697:37:13",
																"nodeType": "YulFunctionCall",
																"src": "14697:37:13"
															},
															"nativeSrc": "14697:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "14697:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "14632:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14675:5:13",
														"nodeType": "YulTypedName",
														"src": "14675:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14682:3:13",
														"nodeType": "YulTypedName",
														"src": "14682:3:13",
														"type": ""
													}
												],
												"src": "14632:108:13"
											},
											{
												"body": {
													"nativeSrc": "14826:99:13",
													"nodeType": "YulBlock",
													"src": "14826:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14870:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14870:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14878:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14878:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "14836:33:13",
																	"nodeType": "YulIdentifier",
																	"src": "14836:33:13"
																},
																"nativeSrc": "14836:46:13",
																"nodeType": "YulFunctionCall",
																"src": "14836:46:13"
															},
															"nativeSrc": "14836:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "14836:46:13"
														},
														{
															"nativeSrc": "14891:28:13",
															"nodeType": "YulAssignment",
															"src": "14891:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14909:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14909:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14914:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14914:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14905:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14905:3:13"
																},
																"nativeSrc": "14905:14:13",
																"nodeType": "YulFunctionCall",
																"src": "14905:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "14891:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "14891:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "14746:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "14799:6:13",
														"nodeType": "YulTypedName",
														"src": "14799:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14807:3:13",
														"nodeType": "YulTypedName",
														"src": "14807:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "14815:10:13",
														"nodeType": "YulTypedName",
														"src": "14815:10:13",
														"type": ""
													}
												],
												"src": "14746:179:13"
											},
											{
												"body": {
													"nativeSrc": "15006:38:13",
													"nodeType": "YulBlock",
													"src": "15006:38:13",
													"statements": [
														{
															"nativeSrc": "15016:22:13",
															"nodeType": "YulAssignment",
															"src": "15016:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15028:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15028:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15033:4:13",
																		"nodeType": "YulLiteral",
																		"src": "15033:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15024:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15024:3:13"
																},
																"nativeSrc": "15024:14:13",
																"nodeType": "YulFunctionCall",
																"src": "15024:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "15016:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15016:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14931:113:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14993:3:13",
														"nodeType": "YulTypedName",
														"src": "14993:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "15001:4:13",
														"nodeType": "YulTypedName",
														"src": "15001:4:13",
														"type": ""
													}
												],
												"src": "14931:113:13"
											},
											{
												"body": {
													"nativeSrc": "15204:608:13",
													"nodeType": "YulBlock",
													"src": "15204:608:13",
													"statements": [
														{
															"nativeSrc": "15214:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15214:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15276:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15276:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "15228:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "15228:47:13"
																},
																"nativeSrc": "15228:54:13",
																"nodeType": "YulFunctionCall",
																"src": "15228:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15218:6:13",
																	"nodeType": "YulTypedName",
																	"src": "15218:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15291:93:13",
															"nodeType": "YulAssignment",
															"src": "15291:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15372:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15372:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15377:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15377:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "15298:73:13",
																	"nodeType": "YulIdentifier",
																	"src": "15298:73:13"
																},
																"nativeSrc": "15298:86:13",
																"nodeType": "YulFunctionCall",
																"src": "15298:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15291:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15291:3:13"
																}
															]
														},
														{
															"nativeSrc": "15393:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15393:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15458:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15458:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "15408:49:13",
																	"nodeType": "YulIdentifier",
																	"src": "15408:49:13"
																},
																"nativeSrc": "15408:56:13",
																"nodeType": "YulFunctionCall",
																"src": "15408:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "15397:7:13",
																	"nodeType": "YulTypedName",
																	"src": "15397:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15473:21:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15473:21:13",
															"value": {
																"name": "baseRef",
																"nativeSrc": "15487:7:13",
																"nodeType": "YulIdentifier",
																"src": "15487:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "15477:6:13",
																	"nodeType": "YulTypedName",
																	"src": "15477:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15563:224:13",
																"nodeType": "YulBlock",
																"src": "15563:224:13",
																"statements": [
																	{
																		"nativeSrc": "15577:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15577:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15604:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "15604:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "15598:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "15598:5:13"
																			},
																			"nativeSrc": "15598:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15598:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "15581:13:13",
																				"nodeType": "YulTypedName",
																				"src": "15581:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15624:70:13",
																		"nodeType": "YulAssignment",
																		"src": "15624:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "15675:13:13",
																					"nodeType": "YulIdentifier",
																					"src": "15675:13:13"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "15690:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15690:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "15631:43:13",
																				"nodeType": "YulIdentifier",
																				"src": "15631:43:13"
																			},
																			"nativeSrc": "15631:63:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15631:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "15624:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "15624:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "15707:70:13",
																		"nodeType": "YulAssignment",
																		"src": "15707:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15770:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "15770:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "15717:52:13",
																				"nodeType": "YulIdentifier",
																				"src": "15717:52:13"
																			},
																			"nativeSrc": "15717:60:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15717:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "15707:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15707:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "15525:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15525:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15528:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15528:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15522:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15522:2:13"
																},
																"nativeSrc": "15522:13:13",
																"nodeType": "YulFunctionCall",
																"src": "15522:13:13"
															},
															"nativeSrc": "15503:284:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15536:18:13",
																"nodeType": "YulBlock",
																"src": "15536:18:13",
																"statements": [
																	{
																		"nativeSrc": "15538:14:13",
																		"nodeType": "YulAssignment",
																		"src": "15538:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "15547:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "15547:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15550:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15550:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15543:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "15543:3:13"
																			},
																			"nativeSrc": "15543:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15543:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "15538:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "15538:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15507:14:13",
																"nodeType": "YulBlock",
																"src": "15507:14:13",
																"statements": [
																	{
																		"nativeSrc": "15509:10:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15509:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "15518:1:13",
																			"nodeType": "YulLiteral",
																			"src": "15518:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "15513:1:13",
																				"nodeType": "YulTypedName",
																				"src": "15513:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15503:284:13"
														},
														{
															"nativeSrc": "15796:10:13",
															"nodeType": "YulAssignment",
															"src": "15796:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "15803:3:13",
																"nodeType": "YulIdentifier",
																"src": "15803:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15796:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15796:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "15080:732:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15183:5:13",
														"nodeType": "YulTypedName",
														"src": "15183:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15190:3:13",
														"nodeType": "YulTypedName",
														"src": "15190:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15199:3:13",
														"nodeType": "YulTypedName",
														"src": "15199:3:13",
														"type": ""
													}
												],
												"src": "15080:732:13"
											},
											{
												"body": {
													"nativeSrc": "15966:225:13",
													"nodeType": "YulBlock",
													"src": "15966:225:13",
													"statements": [
														{
															"nativeSrc": "15976:26:13",
															"nodeType": "YulAssignment",
															"src": "15976:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15988:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15988:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15999:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15999:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15984:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15984:3:13"
																},
																"nativeSrc": "15984:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15984:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15976:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15976:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16023:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16023:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16034:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16034:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16019:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16019:3:13"
																		},
																		"nativeSrc": "16019:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16019:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16042:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16042:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16048:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16048:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16038:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16038:3:13"
																		},
																		"nativeSrc": "16038:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16038:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16012:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16012:6:13"
																},
																"nativeSrc": "16012:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16012:47:13"
															},
															"nativeSrc": "16012:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16012:47:13"
														},
														{
															"nativeSrc": "16068:116:13",
															"nodeType": "YulAssignment",
															"src": "16068:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16170:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16170:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "16179:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16179:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "16076:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "16076:93:13"
																},
																"nativeSrc": "16076:108:13",
																"nodeType": "YulFunctionCall",
																"src": "16076:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16068:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16068:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "15818:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15938:9:13",
														"nodeType": "YulTypedName",
														"src": "15938:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15950:6:13",
														"nodeType": "YulTypedName",
														"src": "15950:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15961:4:13",
														"nodeType": "YulTypedName",
														"src": "15961:4:13",
														"type": ""
													}
												],
												"src": "15818:373:13"
											},
											{
												"body": {
													"nativeSrc": "16297:519:13",
													"nodeType": "YulBlock",
													"src": "16297:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16343:83:13",
																"nodeType": "YulBlock",
																"src": "16343:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16345:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "16345:77:13"
																			},
																			"nativeSrc": "16345:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16345:79:13"
																		},
																		"nativeSrc": "16345:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16345:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16318:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16318:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16327:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16327:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16314:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16314:3:13"
																		},
																		"nativeSrc": "16314:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16314:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16339:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16339:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16310:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16310:3:13"
																},
																"nativeSrc": "16310:32:13",
																"nodeType": "YulFunctionCall",
																"src": "16310:32:13"
															},
															"nativeSrc": "16307:119:13",
															"nodeType": "YulIf",
															"src": "16307:119:13"
														},
														{
															"nativeSrc": "16436:117:13",
															"nodeType": "YulBlock",
															"src": "16436:117:13",
															"statements": [
																{
																	"nativeSrc": "16451:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16451:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16465:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16465:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16455:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16455:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16480:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16480:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16515:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16515:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16526:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16526:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16511:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16511:3:13"
																				},
																				"nativeSrc": "16511:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16511:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16535:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16535:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16490:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16490:20:13"
																		},
																		"nativeSrc": "16490:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16490:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16480:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16480:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16563:118:13",
															"nodeType": "YulBlock",
															"src": "16563:118:13",
															"statements": [
																{
																	"nativeSrc": "16578:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16578:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16592:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16592:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16582:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16582:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16608:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16608:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16643:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16643:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16654:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16654:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16639:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16639:3:13"
																				},
																				"nativeSrc": "16639:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16639:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16663:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16663:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16618:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16618:20:13"
																		},
																		"nativeSrc": "16618:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16618:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16608:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16608:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16691:118:13",
															"nodeType": "YulBlock",
															"src": "16691:118:13",
															"statements": [
																{
																	"nativeSrc": "16706:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16706:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16720:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16720:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16710:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16710:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16736:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16736:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16771:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16771:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16782:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16782:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16767:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16767:3:13"
																				},
																				"nativeSrc": "16767:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16767:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16791:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16791:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16746:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16746:20:13"
																		},
																		"nativeSrc": "16746:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16746:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16736:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16736:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "16197:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16251:9:13",
														"nodeType": "YulTypedName",
														"src": "16251:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16262:7:13",
														"nodeType": "YulTypedName",
														"src": "16262:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16274:6:13",
														"nodeType": "YulTypedName",
														"src": "16274:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16282:6:13",
														"nodeType": "YulTypedName",
														"src": "16282:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16290:6:13",
														"nodeType": "YulTypedName",
														"src": "16290:6:13",
														"type": ""
													}
												],
												"src": "16197:619:13"
											},
											{
												"body": {
													"nativeSrc": "16862:76:13",
													"nodeType": "YulBlock",
													"src": "16862:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16916:16:13",
																"nodeType": "YulBlock",
																"src": "16916:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16925:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16925:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16928:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16928:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16918:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16918:6:13"
																			},
																			"nativeSrc": "16918:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16918:12:13"
																		},
																		"nativeSrc": "16918:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16918:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16885:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "16885:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16907:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "16907:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "16892:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "16892:14:13"
																				},
																				"nativeSrc": "16892:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16892:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16882:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "16882:2:13"
																		},
																		"nativeSrc": "16882:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16882:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16875:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16875:6:13"
																},
																"nativeSrc": "16875:40:13",
																"nodeType": "YulFunctionCall",
																"src": "16875:40:13"
															},
															"nativeSrc": "16872:60:13",
															"nodeType": "YulIf",
															"src": "16872:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "16822:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16855:5:13",
														"nodeType": "YulTypedName",
														"src": "16855:5:13",
														"type": ""
													}
												],
												"src": "16822:116:13"
											},
											{
												"body": {
													"nativeSrc": "16993:84:13",
													"nodeType": "YulBlock",
													"src": "16993:84:13",
													"statements": [
														{
															"nativeSrc": "17003:29:13",
															"nodeType": "YulAssignment",
															"src": "17003:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17025:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17025:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "17012:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "17012:12:13"
																},
																"nativeSrc": "17012:20:13",
																"nodeType": "YulFunctionCall",
																"src": "17012:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17003:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17003:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17065:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17065:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "17041:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "17041:23:13"
																},
																"nativeSrc": "17041:30:13",
																"nodeType": "YulFunctionCall",
																"src": "17041:30:13"
															},
															"nativeSrc": "17041:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "17041:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "16944:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16971:6:13",
														"nodeType": "YulTypedName",
														"src": "16971:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16979:3:13",
														"nodeType": "YulTypedName",
														"src": "16979:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16987:5:13",
														"nodeType": "YulTypedName",
														"src": "16987:5:13",
														"type": ""
													}
												],
												"src": "16944:133:13"
											},
											{
												"body": {
													"nativeSrc": "17163:388:13",
													"nodeType": "YulBlock",
													"src": "17163:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17209:83:13",
																"nodeType": "YulBlock",
																"src": "17209:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17211:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "17211:77:13"
																			},
																			"nativeSrc": "17211:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17211:79:13"
																		},
																		"nativeSrc": "17211:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17211:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17184:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17184:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17193:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17193:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17180:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17180:3:13"
																		},
																		"nativeSrc": "17180:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17180:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17205:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17205:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17176:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17176:3:13"
																},
																"nativeSrc": "17176:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17176:32:13"
															},
															"nativeSrc": "17173:119:13",
															"nodeType": "YulIf",
															"src": "17173:119:13"
														},
														{
															"nativeSrc": "17302:117:13",
															"nodeType": "YulBlock",
															"src": "17302:117:13",
															"statements": [
																{
																	"nativeSrc": "17317:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17317:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17331:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17331:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17321:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17321:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17346:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17346:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17381:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17381:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17392:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17392:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17377:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17377:3:13"
																				},
																				"nativeSrc": "17377:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17377:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17401:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17401:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17356:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17356:20:13"
																		},
																		"nativeSrc": "17356:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17356:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17346:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17346:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17429:115:13",
															"nodeType": "YulBlock",
															"src": "17429:115:13",
															"statements": [
																{
																	"nativeSrc": "17444:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17444:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17458:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17458:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17448:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17448:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17474:60:13",
																	"nodeType": "YulAssignment",
																	"src": "17474:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17506:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17506:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17517:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17517:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17502:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17502:3:13"
																				},
																				"nativeSrc": "17502:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17502:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17526:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17526:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "17484:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "17484:17:13"
																		},
																		"nativeSrc": "17484:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17484:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17474:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17474:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "17083:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17125:9:13",
														"nodeType": "YulTypedName",
														"src": "17125:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17136:7:13",
														"nodeType": "YulTypedName",
														"src": "17136:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17148:6:13",
														"nodeType": "YulTypedName",
														"src": "17148:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17156:6:13",
														"nodeType": "YulTypedName",
														"src": "17156:6:13",
														"type": ""
													}
												],
												"src": "17083:468:13"
											},
											{
												"body": {
													"nativeSrc": "17640:391:13",
													"nodeType": "YulBlock",
													"src": "17640:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17686:83:13",
																"nodeType": "YulBlock",
																"src": "17686:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17688:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "17688:77:13"
																			},
																			"nativeSrc": "17688:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17688:79:13"
																		},
																		"nativeSrc": "17688:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17688:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17661:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17661:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17670:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17670:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17657:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17657:3:13"
																		},
																		"nativeSrc": "17657:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17657:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17682:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17682:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17653:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17653:3:13"
																},
																"nativeSrc": "17653:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17653:32:13"
															},
															"nativeSrc": "17650:119:13",
															"nodeType": "YulIf",
															"src": "17650:119:13"
														},
														{
															"nativeSrc": "17779:117:13",
															"nodeType": "YulBlock",
															"src": "17779:117:13",
															"statements": [
																{
																	"nativeSrc": "17794:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17794:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17808:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17808:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17798:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17798:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17823:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17823:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17858:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17858:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17869:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17869:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17854:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17854:3:13"
																				},
																				"nativeSrc": "17854:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17854:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17878:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17878:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17833:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17833:20:13"
																		},
																		"nativeSrc": "17833:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17833:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17823:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17823:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17906:118:13",
															"nodeType": "YulBlock",
															"src": "17906:118:13",
															"statements": [
																{
																	"nativeSrc": "17921:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17921:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17935:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17935:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17925:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17925:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17951:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17951:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17986:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17986:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17997:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17997:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17982:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17982:3:13"
																				},
																				"nativeSrc": "17982:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17982:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18006:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18006:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17961:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17961:20:13"
																		},
																		"nativeSrc": "17961:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17961:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17951:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17951:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "17557:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17602:9:13",
														"nodeType": "YulTypedName",
														"src": "17602:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17613:7:13",
														"nodeType": "YulTypedName",
														"src": "17613:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17625:6:13",
														"nodeType": "YulTypedName",
														"src": "17625:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17633:6:13",
														"nodeType": "YulTypedName",
														"src": "17633:6:13",
														"type": ""
													}
												],
												"src": "17557:474:13"
											},
											{
												"body": {
													"nativeSrc": "18180:946:13",
													"nodeType": "YulBlock",
													"src": "18180:946:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "18227:83:13",
																"nodeType": "YulBlock",
																"src": "18227:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18229:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "18229:77:13"
																			},
																			"nativeSrc": "18229:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18229:79:13"
																		},
																		"nativeSrc": "18229:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18229:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18201:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18201:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18210:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18210:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18197:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18197:3:13"
																		},
																		"nativeSrc": "18197:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18197:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18222:3:13",
																		"nodeType": "YulLiteral",
																		"src": "18222:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18193:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18193:3:13"
																},
																"nativeSrc": "18193:33:13",
																"nodeType": "YulFunctionCall",
																"src": "18193:33:13"
															},
															"nativeSrc": "18190:120:13",
															"nodeType": "YulIf",
															"src": "18190:120:13"
														},
														{
															"nativeSrc": "18320:117:13",
															"nodeType": "YulBlock",
															"src": "18320:117:13",
															"statements": [
																{
																	"nativeSrc": "18335:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18335:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18349:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18349:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18339:6:13",
																			"nodeType": "YulTypedName",
																			"src": "18339:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18364:63:13",
																	"nodeType": "YulAssignment",
																	"src": "18364:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18399:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "18399:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18410:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "18410:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18395:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18395:3:13"
																				},
																				"nativeSrc": "18395:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18395:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18419:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18419:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18374:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "18374:20:13"
																		},
																		"nativeSrc": "18374:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18374:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18364:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "18364:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18447:118:13",
															"nodeType": "YulBlock",
															"src": "18447:118:13",
															"statements": [
																{
																	"nativeSrc": "18462:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18462:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18476:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18476:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18466:6:13",
																			"nodeType": "YulTypedName",
																			"src": "18466:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18492:63:13",
																	"nodeType": "YulAssignment",
																	"src": "18492:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18527:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "18527:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18538:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "18538:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18523:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18523:3:13"
																				},
																				"nativeSrc": "18523:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18523:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18547:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18547:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18502:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "18502:20:13"
																		},
																		"nativeSrc": "18502:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18502:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18492:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "18492:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18575:118:13",
															"nodeType": "YulBlock",
															"src": "18575:118:13",
															"statements": [
																{
																	"nativeSrc": "18590:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18590:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18604:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18604:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18594:6:13",
																			"nodeType": "YulTypedName",
																			"src": "18594:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18620:63:13",
																	"nodeType": "YulAssignment",
																	"src": "18620:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18655:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "18655:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18666:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "18666:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18651:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18651:3:13"
																				},
																				"nativeSrc": "18651:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18651:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18675:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18675:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18630:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "18630:20:13"
																		},
																		"nativeSrc": "18630:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18630:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "18620:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "18620:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18703:118:13",
															"nodeType": "YulBlock",
															"src": "18703:118:13",
															"statements": [
																{
																	"nativeSrc": "18718:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18718:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18732:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18732:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18722:6:13",
																			"nodeType": "YulTypedName",
																			"src": "18722:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18748:63:13",
																	"nodeType": "YulAssignment",
																	"src": "18748:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18783:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "18783:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18794:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "18794:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18779:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18779:3:13"
																				},
																				"nativeSrc": "18779:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18779:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18803:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18803:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18758:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "18758:20:13"
																		},
																		"nativeSrc": "18758:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18758:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "18748:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "18748:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18831:288:13",
															"nodeType": "YulBlock",
															"src": "18831:288:13",
															"statements": [
																{
																	"nativeSrc": "18846:47:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18846:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18877:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "18877:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18888:3:13",
																						"nodeType": "YulLiteral",
																						"src": "18888:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18873:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18873:3:13"
																				},
																				"nativeSrc": "18873:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18873:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "18860:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "18860:12:13"
																		},
																		"nativeSrc": "18860:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18860:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18850:6:13",
																			"nodeType": "YulTypedName",
																			"src": "18850:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "18940:83:13",
																		"nodeType": "YulBlock",
																		"src": "18940:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "18942:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "18942:77:13"
																					},
																					"nativeSrc": "18942:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "18942:79:13"
																				},
																				"nativeSrc": "18942:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "18942:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "18912:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18912:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18920:18:13",
																				"nodeType": "YulLiteral",
																				"src": "18920:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "18909:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "18909:2:13"
																		},
																		"nativeSrc": "18909:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18909:30:13"
																	},
																	"nativeSrc": "18906:117:13",
																	"nodeType": "YulIf",
																	"src": "18906:117:13"
																},
																{
																	"nativeSrc": "19037:72:13",
																	"nodeType": "YulAssignment",
																	"src": "19037:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19081:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "19081:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19092:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "19092:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19077:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "19077:3:13"
																				},
																				"nativeSrc": "19077:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "19077:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19101:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "19101:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "19047:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "19047:29:13"
																		},
																		"nativeSrc": "19047:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19047:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "19037:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "19037:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "18037:1089:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18118:9:13",
														"nodeType": "YulTypedName",
														"src": "18118:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18129:7:13",
														"nodeType": "YulTypedName",
														"src": "18129:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18141:6:13",
														"nodeType": "YulTypedName",
														"src": "18141:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18149:6:13",
														"nodeType": "YulTypedName",
														"src": "18149:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18157:6:13",
														"nodeType": "YulTypedName",
														"src": "18157:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18165:6:13",
														"nodeType": "YulTypedName",
														"src": "18165:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18173:6:13",
														"nodeType": "YulTypedName",
														"src": "18173:6:13",
														"type": ""
													}
												],
												"src": "18037:1089:13"
											},
											{
												"body": {
													"nativeSrc": "19246:34:13",
													"nodeType": "YulBlock",
													"src": "19246:34:13",
													"statements": [
														{
															"nativeSrc": "19256:18:13",
															"nodeType": "YulAssignment",
															"src": "19256:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "19271:3:13",
																"nodeType": "YulIdentifier",
																"src": "19271:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19256:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "19256:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19132:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19218:3:13",
														"nodeType": "YulTypedName",
														"src": "19218:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19223:6:13",
														"nodeType": "YulTypedName",
														"src": "19223:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19234:11:13",
														"nodeType": "YulTypedName",
														"src": "19234:11:13",
														"type": ""
													}
												],
												"src": "19132:148:13"
											},
											{
												"body": {
													"nativeSrc": "19396:280:13",
													"nodeType": "YulBlock",
													"src": "19396:280:13",
													"statements": [
														{
															"nativeSrc": "19406:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19406:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19453:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19453:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19420:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "19420:32:13"
																},
																"nativeSrc": "19420:39:13",
																"nodeType": "YulFunctionCall",
																"src": "19420:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19410:6:13",
																	"nodeType": "YulTypedName",
																	"src": "19410:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19468:96:13",
															"nodeType": "YulAssignment",
															"src": "19468:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19552:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19552:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19557:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19557:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19475:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "19475:76:13"
																},
																"nativeSrc": "19475:89:13",
																"nodeType": "YulFunctionCall",
																"src": "19475:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19468:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19468:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19612:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19612:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19619:4:13",
																				"nodeType": "YulLiteral",
																				"src": "19619:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19608:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19608:3:13"
																		},
																		"nativeSrc": "19608:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19608:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19626:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19626:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19631:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19631:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19573:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "19573:34:13"
																},
																"nativeSrc": "19573:65:13",
																"nodeType": "YulFunctionCall",
																"src": "19573:65:13"
															},
															"nativeSrc": "19573:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "19573:65:13"
														},
														{
															"nativeSrc": "19647:23:13",
															"nodeType": "YulAssignment",
															"src": "19647:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19658:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19658:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19663:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19663:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19654:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19654:3:13"
																},
																"nativeSrc": "19654:16:13",
																"nodeType": "YulFunctionCall",
																"src": "19654:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19647:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19647:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19286:390:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19377:5:13",
														"nodeType": "YulTypedName",
														"src": "19377:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19384:3:13",
														"nodeType": "YulTypedName",
														"src": "19384:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19392:3:13",
														"nodeType": "YulTypedName",
														"src": "19392:3:13",
														"type": ""
													}
												],
												"src": "19286:390:13"
											},
											{
												"body": {
													"nativeSrc": "19710:152:13",
													"nodeType": "YulBlock",
													"src": "19710:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19727:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19727:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19730:77:13",
																		"nodeType": "YulLiteral",
																		"src": "19730:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19720:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19720:6:13"
																},
																"nativeSrc": "19720:88:13",
																"nodeType": "YulFunctionCall",
																"src": "19720:88:13"
															},
															"nativeSrc": "19720:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "19720:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19824:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19824:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19827:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19827:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19817:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19817:6:13"
																},
																"nativeSrc": "19817:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19817:15:13"
															},
															"nativeSrc": "19817:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19817:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19848:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19848:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19851:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19851:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19841:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19841:6:13"
																},
																"nativeSrc": "19841:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19841:15:13"
															},
															"nativeSrc": "19841:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19841:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "19682:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "19682:180:13"
											},
											{
												"body": {
													"nativeSrc": "19919:269:13",
													"nodeType": "YulBlock",
													"src": "19919:269:13",
													"statements": [
														{
															"nativeSrc": "19929:22:13",
															"nodeType": "YulAssignment",
															"src": "19929:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19943:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19943:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19949:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19949:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19939:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19939:3:13"
																},
																"nativeSrc": "19939:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19939:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19929:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19929:6:13"
																}
															]
														},
														{
															"nativeSrc": "19960:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19960:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19990:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19990:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19996:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19996:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19986:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19986:3:13"
																},
																"nativeSrc": "19986:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19986:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "19964:18:13",
																	"nodeType": "YulTypedName",
																	"src": "19964:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20037:51:13",
																"nodeType": "YulBlock",
																"src": "20037:51:13",
																"statements": [
																	{
																		"nativeSrc": "20051:27:13",
																		"nodeType": "YulAssignment",
																		"src": "20051:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "20065:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "20065:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20073:4:13",
																					"nodeType": "YulLiteral",
																					"src": "20073:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "20061:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "20061:3:13"
																			},
																			"nativeSrc": "20061:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20061:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "20051:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20051:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "20017:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "20017:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20010:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20010:6:13"
																},
																"nativeSrc": "20010:26:13",
																"nodeType": "YulFunctionCall",
																"src": "20010:26:13"
															},
															"nativeSrc": "20007:81:13",
															"nodeType": "YulIf",
															"src": "20007:81:13"
														},
														{
															"body": {
																"nativeSrc": "20140:42:13",
																"nodeType": "YulBlock",
																"src": "20140:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "20154:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "20154:16:13"
																			},
																			"nativeSrc": "20154:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20154:18:13"
																		},
																		"nativeSrc": "20154:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20154:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "20104:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "20104:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20127:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20127:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20135:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20135:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "20124:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "20124:2:13"
																		},
																		"nativeSrc": "20124:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20124:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20101:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "20101:2:13"
																},
																"nativeSrc": "20101:38:13",
																"nodeType": "YulFunctionCall",
																"src": "20101:38:13"
															},
															"nativeSrc": "20098:84:13",
															"nodeType": "YulIf",
															"src": "20098:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "19868:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19903:4:13",
														"nodeType": "YulTypedName",
														"src": "19903:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19912:6:13",
														"nodeType": "YulTypedName",
														"src": "19912:6:13",
														"type": ""
													}
												],
												"src": "19868:320:13"
											},
											{
												"body": {
													"nativeSrc": "20248:87:13",
													"nodeType": "YulBlock",
													"src": "20248:87:13",
													"statements": [
														{
															"nativeSrc": "20258:11:13",
															"nodeType": "YulAssignment",
															"src": "20258:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "20266:3:13",
																"nodeType": "YulIdentifier",
																"src": "20266:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20258:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20258:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20286:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20286:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "20289:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20289:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20279:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20279:6:13"
																},
																"nativeSrc": "20279:14:13",
																"nodeType": "YulFunctionCall",
																"src": "20279:14:13"
															},
															"nativeSrc": "20279:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "20279:14:13"
														},
														{
															"nativeSrc": "20302:26:13",
															"nodeType": "YulAssignment",
															"src": "20302:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20320:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20323:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20323:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "20310:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "20310:9:13"
																},
																"nativeSrc": "20310:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20310:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20302:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20302:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "20194:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "20235:3:13",
														"nodeType": "YulTypedName",
														"src": "20235:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "20243:4:13",
														"nodeType": "YulTypedName",
														"src": "20243:4:13",
														"type": ""
													}
												],
												"src": "20194:141:13"
											},
											{
												"body": {
													"nativeSrc": "20472:767:13",
													"nodeType": "YulBlock",
													"src": "20472:767:13",
													"statements": [
														{
															"nativeSrc": "20482:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "20482:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20505:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20505:5:13"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "20499:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20499:5:13"
																},
																"nativeSrc": "20499:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20499:12:13"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "20486:9:13",
																	"nodeType": "YulTypedName",
																	"src": "20486:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20520:50:13",
															"nodeType": "YulVariableDeclaration",
															"src": "20520:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "20560:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20560:9:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "20534:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "20534:25:13"
																},
																"nativeSrc": "20534:36:13",
																"nodeType": "YulFunctionCall",
																"src": "20534:36:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20524:6:13",
																	"nodeType": "YulTypedName",
																	"src": "20524:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20579:96:13",
															"nodeType": "YulAssignment",
															"src": "20579:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20663:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20663:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20668:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20668:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20586:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "20586:76:13"
																},
																"nativeSrc": "20586:89:13",
																"nodeType": "YulFunctionCall",
																"src": "20586:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20579:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20579:3:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "20724:159:13",
																		"nodeType": "YulBlock",
																		"src": "20724:159:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "20777:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "20777:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "20786:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "20786:9:13"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "20801:4:13",
																											"nodeType": "YulLiteral",
																											"src": "20801:4:13",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "20797:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "20797:3:13"
																									},
																									"nativeSrc": "20797:9:13",
																									"nodeType": "YulFunctionCall",
																									"src": "20797:9:13"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "20782:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20782:3:13"
																							},
																							"nativeSrc": "20782:25:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20782:25:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "20770:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "20770:6:13"
																					},
																					"nativeSrc": "20770:38:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20770:38:13"
																				},
																				"nativeSrc": "20770:38:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "20770:38:13"
																			},
																			{
																				"nativeSrc": "20821:52:13",
																				"nodeType": "YulAssignment",
																				"src": "20821:52:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "20832:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "20832:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "20841:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "20841:6:13"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "20863:6:13",
																													"nodeType": "YulIdentifier",
																													"src": "20863:6:13"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "20856:6:13",
																												"nodeType": "YulIdentifier",
																												"src": "20856:6:13"
																											},
																											"nativeSrc": "20856:14:13",
																											"nodeType": "YulFunctionCall",
																											"src": "20856:14:13"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "20849:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "20849:6:13"
																									},
																									"nativeSrc": "20849:22:13",
																									"nodeType": "YulFunctionCall",
																									"src": "20849:22:13"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "20837:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20837:3:13"
																							},
																							"nativeSrc": "20837:35:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20837:35:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20828:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "20828:3:13"
																					},
																					"nativeSrc": "20828:45:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20828:45:13"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "20821:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "20821:3:13"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "20717:166:13",
																	"nodeType": "YulCase",
																	"src": "20717:166:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20722:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20722:1:13",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20899:334:13",
																		"nodeType": "YulBlock",
																		"src": "20899:334:13",
																		"statements": [
																			{
																				"nativeSrc": "20944:53:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20944:53:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "20991:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "20991:5:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "20959:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "20959:31:13"
																					},
																					"nativeSrc": "20959:38:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20959:38:13"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "20948:7:13",
																						"nodeType": "YulTypedName",
																						"src": "20948:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21010:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21010:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21019:1:13",
																					"nodeType": "YulLiteral",
																					"src": "21019:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "21014:1:13",
																						"nodeType": "YulTypedName",
																						"src": "21014:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21077:110:13",
																					"nodeType": "YulBlock",
																					"src": "21077:110:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "21106:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "21106:3:13"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "21111:1:13",
																												"nodeType": "YulIdentifier",
																												"src": "21111:1:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21102:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "21102:3:13"
																										},
																										"nativeSrc": "21102:11:13",
																										"nodeType": "YulFunctionCall",
																										"src": "21102:11:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "21121:7:13",
																												"nodeType": "YulIdentifier",
																												"src": "21121:7:13"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "21115:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "21115:5:13"
																										},
																										"nativeSrc": "21115:14:13",
																										"nodeType": "YulFunctionCall",
																										"src": "21115:14:13"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "21095:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "21095:6:13"
																								},
																								"nativeSrc": "21095:35:13",
																								"nodeType": "YulFunctionCall",
																								"src": "21095:35:13"
																							},
																							"nativeSrc": "21095:35:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "21095:35:13"
																						},
																						{
																							"nativeSrc": "21147:26:13",
																							"nodeType": "YulAssignment",
																							"src": "21147:26:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "21162:7:13",
																										"nodeType": "YulIdentifier",
																										"src": "21162:7:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21171:1:13",
																										"nodeType": "YulLiteral",
																										"src": "21171:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21158:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "21158:3:13"
																								},
																								"nativeSrc": "21158:15:13",
																								"nodeType": "YulFunctionCall",
																								"src": "21158:15:13"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "21147:7:13",
																									"nodeType": "YulIdentifier",
																									"src": "21147:7:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "21044:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "21044:1:13"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "21047:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "21047:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21041:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "21041:2:13"
																					},
																					"nativeSrc": "21041:13:13",
																					"nodeType": "YulFunctionCall",
																					"src": "21041:13:13"
																				},
																				"nativeSrc": "21033:154:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "21055:21:13",
																					"nodeType": "YulBlock",
																					"src": "21055:21:13",
																					"statements": [
																						{
																							"nativeSrc": "21057:17:13",
																							"nodeType": "YulAssignment",
																							"src": "21057:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "21066:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "21066:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21069:4:13",
																										"nodeType": "YulLiteral",
																										"src": "21069:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21062:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "21062:3:13"
																								},
																								"nativeSrc": "21062:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "21062:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "21057:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "21057:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "21037:3:13",
																					"nodeType": "YulBlock",
																					"src": "21037:3:13",
																					"statements": []
																				},
																				"src": "21033:154:13"
																			},
																			{
																				"nativeSrc": "21200:23:13",
																				"nodeType": "YulAssignment",
																				"src": "21200:23:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "21211:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "21211:3:13"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "21216:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "21216:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "21207:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "21207:3:13"
																					},
																					"nativeSrc": "21207:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "21207:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "21200:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "21200:3:13"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "20892:341:13",
																	"nodeType": "YulCase",
																	"src": "20892:341:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20897:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20897:1:13",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "20695:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20695:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20706:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20706:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20691:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20691:3:13"
																},
																"nativeSrc": "20691:17:13",
																"nodeType": "YulFunctionCall",
																"src": "20691:17:13"
															},
															"nativeSrc": "20684:549:13",
															"nodeType": "YulSwitch",
															"src": "20684:549:13"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20365:874:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20453:5:13",
														"nodeType": "YulTypedName",
														"src": "20453:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20460:3:13",
														"nodeType": "YulTypedName",
														"src": "20460:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20468:3:13",
														"nodeType": "YulTypedName",
														"src": "20468:3:13",
														"type": ""
													}
												],
												"src": "20365:874:13"
											},
											{
												"body": {
													"nativeSrc": "21426:248:13",
													"nodeType": "YulBlock",
													"src": "21426:248:13",
													"statements": [
														{
															"nativeSrc": "21437:102:13",
															"nodeType": "YulAssignment",
															"src": "21437:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21526:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21526:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21535:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21535:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21444:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "21444:81:13"
																},
																"nativeSrc": "21444:95:13",
																"nodeType": "YulFunctionCall",
																"src": "21444:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21437:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21437:3:13"
																}
															]
														},
														{
															"nativeSrc": "21549:99:13",
															"nodeType": "YulAssignment",
															"src": "21549:99:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21635:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21635:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21644:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21644:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21556:78:13",
																	"nodeType": "YulIdentifier",
																	"src": "21556:78:13"
																},
																"nativeSrc": "21556:92:13",
																"nodeType": "YulFunctionCall",
																"src": "21556:92:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21549:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21549:3:13"
																}
															]
														},
														{
															"nativeSrc": "21658:10:13",
															"nodeType": "YulAssignment",
															"src": "21658:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "21665:3:13",
																"nodeType": "YulIdentifier",
																"src": "21665:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21658:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21658:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21245:429:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21397:3:13",
														"nodeType": "YulTypedName",
														"src": "21397:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21403:6:13",
														"nodeType": "YulTypedName",
														"src": "21403:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21411:6:13",
														"nodeType": "YulTypedName",
														"src": "21411:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21422:3:13",
														"nodeType": "YulTypedName",
														"src": "21422:3:13",
														"type": ""
													}
												],
												"src": "21245:429:13"
											},
											{
												"body": {
													"nativeSrc": "21745:53:13",
													"nodeType": "YulBlock",
													"src": "21745:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21762:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21762:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21785:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "21785:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "21767:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "21767:17:13"
																		},
																		"nativeSrc": "21767:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21767:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21755:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21755:6:13"
																},
																"nativeSrc": "21755:37:13",
																"nodeType": "YulFunctionCall",
																"src": "21755:37:13"
															},
															"nativeSrc": "21755:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "21755:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "21680:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21733:5:13",
														"nodeType": "YulTypedName",
														"src": "21733:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21740:3:13",
														"nodeType": "YulTypedName",
														"src": "21740:3:13",
														"type": ""
													}
												],
												"src": "21680:118:13"
											},
											{
												"body": {
													"nativeSrc": "21930:206:13",
													"nodeType": "YulBlock",
													"src": "21930:206:13",
													"statements": [
														{
															"nativeSrc": "21940:26:13",
															"nodeType": "YulAssignment",
															"src": "21940:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21952:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21952:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21963:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21963:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21948:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21948:3:13"
																},
																"nativeSrc": "21948:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21948:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21940:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21940:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22020:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22020:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22033:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22033:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22044:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22044:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22029:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22029:3:13"
																		},
																		"nativeSrc": "22029:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22029:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21976:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21976:43:13"
																},
																"nativeSrc": "21976:71:13",
																"nodeType": "YulFunctionCall",
																"src": "21976:71:13"
															},
															"nativeSrc": "21976:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "21976:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22101:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22101:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22114:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22114:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22125:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22125:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22110:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22110:3:13"
																		},
																		"nativeSrc": "22110:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22110:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22057:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22057:43:13"
																},
																"nativeSrc": "22057:72:13",
																"nodeType": "YulFunctionCall",
																"src": "22057:72:13"
															},
															"nativeSrc": "22057:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "22057:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "21804:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21894:9:13",
														"nodeType": "YulTypedName",
														"src": "21894:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21906:6:13",
														"nodeType": "YulTypedName",
														"src": "21906:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21914:6:13",
														"nodeType": "YulTypedName",
														"src": "21914:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21925:4:13",
														"nodeType": "YulTypedName",
														"src": "21925:4:13",
														"type": ""
													}
												],
												"src": "21804:332:13"
											},
											{
												"body": {
													"nativeSrc": "22268:206:13",
													"nodeType": "YulBlock",
													"src": "22268:206:13",
													"statements": [
														{
															"nativeSrc": "22278:26:13",
															"nodeType": "YulAssignment",
															"src": "22278:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22290:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22290:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22301:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22301:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22286:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22286:3:13"
																},
																"nativeSrc": "22286:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22286:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22278:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22278:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22358:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22358:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22371:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22371:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22382:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22382:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22367:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22367:3:13"
																		},
																		"nativeSrc": "22367:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22367:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22314:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22314:43:13"
																},
																"nativeSrc": "22314:71:13",
																"nodeType": "YulFunctionCall",
																"src": "22314:71:13"
															},
															"nativeSrc": "22314:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "22314:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22439:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22439:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22452:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22452:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22463:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22463:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22448:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22448:3:13"
																		},
																		"nativeSrc": "22448:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22448:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22395:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22395:43:13"
																},
																"nativeSrc": "22395:72:13",
																"nodeType": "YulFunctionCall",
																"src": "22395:72:13"
															},
															"nativeSrc": "22395:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "22395:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22142:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22232:9:13",
														"nodeType": "YulTypedName",
														"src": "22232:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22244:6:13",
														"nodeType": "YulTypedName",
														"src": "22244:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22252:6:13",
														"nodeType": "YulTypedName",
														"src": "22252:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22263:4:13",
														"nodeType": "YulTypedName",
														"src": "22263:4:13",
														"type": ""
													}
												],
												"src": "22142:332:13"
											},
											{
												"body": {
													"nativeSrc": "22508:152:13",
													"nodeType": "YulBlock",
													"src": "22508:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22525:1:13",
																		"nodeType": "YulLiteral",
																		"src": "22525:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22528:77:13",
																		"nodeType": "YulLiteral",
																		"src": "22528:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22518:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22518:6:13"
																},
																"nativeSrc": "22518:88:13",
																"nodeType": "YulFunctionCall",
																"src": "22518:88:13"
															},
															"nativeSrc": "22518:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "22518:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22622:1:13",
																		"nodeType": "YulLiteral",
																		"src": "22622:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22625:4:13",
																		"nodeType": "YulLiteral",
																		"src": "22625:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22615:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22615:6:13"
																},
																"nativeSrc": "22615:15:13",
																"nodeType": "YulFunctionCall",
																"src": "22615:15:13"
															},
															"nativeSrc": "22615:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "22615:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22646:1:13",
																		"nodeType": "YulLiteral",
																		"src": "22646:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22649:4:13",
																		"nodeType": "YulLiteral",
																		"src": "22649:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22639:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22639:6:13"
																},
																"nativeSrc": "22639:15:13",
																"nodeType": "YulFunctionCall",
																"src": "22639:15:13"
															},
															"nativeSrc": "22639:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "22639:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "22480:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "22480:180:13"
											},
											{
												"body": {
													"nativeSrc": "22764:124:13",
													"nodeType": "YulBlock",
													"src": "22764:124:13",
													"statements": [
														{
															"nativeSrc": "22774:26:13",
															"nodeType": "YulAssignment",
															"src": "22774:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22786:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22786:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22797:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22797:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22782:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22782:3:13"
																},
																"nativeSrc": "22782:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22782:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22774:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22774:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22854:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22854:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22867:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22867:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22878:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22878:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22863:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22863:3:13"
																		},
																		"nativeSrc": "22863:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22863:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22810:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22810:43:13"
																},
																"nativeSrc": "22810:71:13",
																"nodeType": "YulFunctionCall",
																"src": "22810:71:13"
															},
															"nativeSrc": "22810:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "22810:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "22666:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22736:9:13",
														"nodeType": "YulTypedName",
														"src": "22736:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22748:6:13",
														"nodeType": "YulTypedName",
														"src": "22748:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22759:4:13",
														"nodeType": "YulTypedName",
														"src": "22759:4:13",
														"type": ""
													}
												],
												"src": "22666:222:13"
											},
											{
												"body": {
													"nativeSrc": "22938:49:13",
													"nodeType": "YulBlock",
													"src": "22938:49:13",
													"statements": [
														{
															"nativeSrc": "22948:33:13",
															"nodeType": "YulAssignment",
															"src": "22948:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22966:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "22966:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22973:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22973:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22962:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22962:3:13"
																		},
																		"nativeSrc": "22962:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22962:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22978:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22978:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22958:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22958:3:13"
																},
																"nativeSrc": "22958:23:13",
																"nodeType": "YulFunctionCall",
																"src": "22958:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22948:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22948:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "22894:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22921:5:13",
														"nodeType": "YulTypedName",
														"src": "22921:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22931:6:13",
														"nodeType": "YulTypedName",
														"src": "22931:6:13",
														"type": ""
													}
												],
												"src": "22894:93:13"
											},
											{
												"body": {
													"nativeSrc": "23046:54:13",
													"nodeType": "YulBlock",
													"src": "23046:54:13",
													"statements": [
														{
															"nativeSrc": "23056:37:13",
															"nodeType": "YulAssignment",
															"src": "23056:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23081:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23081:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23087:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23087:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "23077:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23077:3:13"
																},
																"nativeSrc": "23077:16:13",
																"nodeType": "YulFunctionCall",
																"src": "23077:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23056:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "23056:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "22993:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23021:4:13",
														"nodeType": "YulTypedName",
														"src": "23021:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23027:5:13",
														"nodeType": "YulTypedName",
														"src": "23027:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23037:8:13",
														"nodeType": "YulTypedName",
														"src": "23037:8:13",
														"type": ""
													}
												],
												"src": "22993:107:13"
											},
											{
												"body": {
													"nativeSrc": "23182:317:13",
													"nodeType": "YulBlock",
													"src": "23182:317:13",
													"statements": [
														{
															"nativeSrc": "23192:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23192:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "23213:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "23213:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23225:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23225:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23209:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23209:3:13"
																},
																"nativeSrc": "23209:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23209:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "23196:9:13",
																	"nodeType": "YulTypedName",
																	"src": "23196:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23236:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23236:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23267:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23267:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23278:66:13",
																		"nodeType": "YulLiteral",
																		"src": "23278:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23248:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "23248:18:13"
																},
																"nativeSrc": "23248:97:13",
																"nodeType": "YulFunctionCall",
																"src": "23248:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23240:4:13",
																	"nodeType": "YulTypedName",
																	"src": "23240:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23354:51:13",
															"nodeType": "YulAssignment",
															"src": "23354:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23385:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23385:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "23396:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "23396:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23366:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "23366:18:13"
																},
																"nativeSrc": "23366:39:13",
																"nodeType": "YulFunctionCall",
																"src": "23366:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "23354:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "23354:8:13"
																}
															]
														},
														{
															"nativeSrc": "23414:30:13",
															"nodeType": "YulAssignment",
															"src": "23414:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23427:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23427:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "23438:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23438:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "23434:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23434:3:13"
																		},
																		"nativeSrc": "23434:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23434:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23423:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23423:3:13"
																},
																"nativeSrc": "23423:21:13",
																"nodeType": "YulFunctionCall",
																"src": "23423:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23414:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "23414:5:13"
																}
															]
														},
														{
															"nativeSrc": "23453:40:13",
															"nodeType": "YulAssignment",
															"src": "23453:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23466:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23466:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "23477:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "23477:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "23487:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23487:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23473:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23473:3:13"
																		},
																		"nativeSrc": "23473:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23473:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23463:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "23463:2:13"
																},
																"nativeSrc": "23463:30:13",
																"nodeType": "YulFunctionCall",
																"src": "23463:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23453:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23453:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "23106:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23143:5:13",
														"nodeType": "YulTypedName",
														"src": "23143:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "23150:10:13",
														"nodeType": "YulTypedName",
														"src": "23150:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "23162:8:13",
														"nodeType": "YulTypedName",
														"src": "23162:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23175:6:13",
														"nodeType": "YulTypedName",
														"src": "23175:6:13",
														"type": ""
													}
												],
												"src": "23106:393:13"
											},
											{
												"body": {
													"nativeSrc": "23537:28:13",
													"nodeType": "YulBlock",
													"src": "23537:28:13",
													"statements": [
														{
															"nativeSrc": "23547:12:13",
															"nodeType": "YulAssignment",
															"src": "23547:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "23554:5:13",
																"nodeType": "YulIdentifier",
																"src": "23554:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23547:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23547:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "23505:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23523:5:13",
														"nodeType": "YulTypedName",
														"src": "23523:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23533:3:13",
														"nodeType": "YulTypedName",
														"src": "23533:3:13",
														"type": ""
													}
												],
												"src": "23505:60:13"
											},
											{
												"body": {
													"nativeSrc": "23631:82:13",
													"nodeType": "YulBlock",
													"src": "23631:82:13",
													"statements": [
														{
															"nativeSrc": "23641:66:13",
															"nodeType": "YulAssignment",
															"src": "23641:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23699:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "23699:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "23681:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "23681:17:13"
																				},
																				"nativeSrc": "23681:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "23681:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23672:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "23672:8:13"
																		},
																		"nativeSrc": "23672:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23672:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23654:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "23654:17:13"
																},
																"nativeSrc": "23654:53:13",
																"nodeType": "YulFunctionCall",
																"src": "23654:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23641:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "23641:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "23571:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23611:5:13",
														"nodeType": "YulTypedName",
														"src": "23611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23621:9:13",
														"nodeType": "YulTypedName",
														"src": "23621:9:13",
														"type": ""
													}
												],
												"src": "23571:142:13"
											},
											{
												"body": {
													"nativeSrc": "23766:28:13",
													"nodeType": "YulBlock",
													"src": "23766:28:13",
													"statements": [
														{
															"nativeSrc": "23776:12:13",
															"nodeType": "YulAssignment",
															"src": "23776:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "23783:5:13",
																"nodeType": "YulIdentifier",
																"src": "23783:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23776:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23776:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "23719:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23752:5:13",
														"nodeType": "YulTypedName",
														"src": "23752:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23762:3:13",
														"nodeType": "YulTypedName",
														"src": "23762:3:13",
														"type": ""
													}
												],
												"src": "23719:75:13"
											},
											{
												"body": {
													"nativeSrc": "23876:193:13",
													"nodeType": "YulBlock",
													"src": "23876:193:13",
													"statements": [
														{
															"nativeSrc": "23886:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23886:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "23941:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "23941:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "23910:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "23910:30:13"
																},
																"nativeSrc": "23910:39:13",
																"nodeType": "YulFunctionCall",
																"src": "23910:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "23890:16:13",
																	"nodeType": "YulTypedName",
																	"src": "23890:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23965:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23965:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "24005:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "24005:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23999:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "23999:5:13"
																				},
																				"nativeSrc": "23999:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "23999:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "24012:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "24012:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "24044:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "24044:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "24020:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "24020:23:13"
																				},
																				"nativeSrc": "24020:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "24020:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "23971:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "23971:27:13"
																		},
																		"nativeSrc": "23971:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23971:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23958:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23958:6:13"
																},
																"nativeSrc": "23958:105:13",
																"nodeType": "YulFunctionCall",
																"src": "23958:105:13"
															},
															"nativeSrc": "23958:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "23958:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "23800:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23853:4:13",
														"nodeType": "YulTypedName",
														"src": "23853:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23859:6:13",
														"nodeType": "YulTypedName",
														"src": "23859:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "23867:7:13",
														"nodeType": "YulTypedName",
														"src": "23867:7:13",
														"type": ""
													}
												],
												"src": "23800:269:13"
											},
											{
												"body": {
													"nativeSrc": "24124:24:13",
													"nodeType": "YulBlock",
													"src": "24124:24:13",
													"statements": [
														{
															"nativeSrc": "24134:8:13",
															"nodeType": "YulAssignment",
															"src": "24134:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "24141:1:13",
																"nodeType": "YulLiteral",
																"src": "24141:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24134:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24134:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "24075:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24120:3:13",
														"nodeType": "YulTypedName",
														"src": "24120:3:13",
														"type": ""
													}
												],
												"src": "24075:73:13"
											},
											{
												"body": {
													"nativeSrc": "24207:136:13",
													"nodeType": "YulBlock",
													"src": "24207:136:13",
													"statements": [
														{
															"nativeSrc": "24217:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "24217:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "24231:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "24231:30:13"
																},
																"nativeSrc": "24231:32:13",
																"nodeType": "YulFunctionCall",
																"src": "24231:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "24221:6:13",
																	"nodeType": "YulTypedName",
																	"src": "24221:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24316:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "24316:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "24322:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24322:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "24330:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24330:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "24272:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24272:43:13"
																},
																"nativeSrc": "24272:65:13",
																"nodeType": "YulFunctionCall",
																"src": "24272:65:13"
															},
															"nativeSrc": "24272:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "24272:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "24154:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24193:4:13",
														"nodeType": "YulTypedName",
														"src": "24193:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24199:6:13",
														"nodeType": "YulTypedName",
														"src": "24199:6:13",
														"type": ""
													}
												],
												"src": "24154:189:13"
											},
											{
												"body": {
													"nativeSrc": "24399:136:13",
													"nodeType": "YulBlock",
													"src": "24399:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "24466:63:13",
																"nodeType": "YulBlock",
																"src": "24466:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24510:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "24510:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24517:1:13",
																					"nodeType": "YulLiteral",
																					"src": "24517:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "24480:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "24480:29:13"
																			},
																			"nativeSrc": "24480:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24480:39:13"
																		},
																		"nativeSrc": "24480:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24480:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "24419:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "24419:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "24426:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "24426:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "24416:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24416:2:13"
																},
																"nativeSrc": "24416:14:13",
																"nodeType": "YulFunctionCall",
																"src": "24416:14:13"
															},
															"nativeSrc": "24409:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "24431:26:13",
																"nodeType": "YulBlock",
																"src": "24431:26:13",
																"statements": [
																	{
																		"nativeSrc": "24433:22:13",
																		"nodeType": "YulAssignment",
																		"src": "24433:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24446:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "24446:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24453:1:13",
																					"nodeType": "YulLiteral",
																					"src": "24453:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24442:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "24442:3:13"
																			},
																			"nativeSrc": "24442:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24442:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "24433:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "24433:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "24413:2:13",
																"nodeType": "YulBlock",
																"src": "24413:2:13",
																"statements": []
															},
															"src": "24409:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "24349:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "24387:5:13",
														"nodeType": "YulTypedName",
														"src": "24387:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24394:3:13",
														"nodeType": "YulTypedName",
														"src": "24394:3:13",
														"type": ""
													}
												],
												"src": "24349:186:13"
											},
											{
												"body": {
													"nativeSrc": "24620:464:13",
													"nodeType": "YulBlock",
													"src": "24620:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "24646:431:13",
																"nodeType": "YulBlock",
																"src": "24646:431:13",
																"statements": [
																	{
																		"nativeSrc": "24660:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24660:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "24708:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "24708:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "24676:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "24676:31:13"
																			},
																			"nativeSrc": "24676:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24676:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "24664:8:13",
																				"nodeType": "YulTypedName",
																				"src": "24664:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "24727:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24727:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "24750:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "24750:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "24778:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "24778:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "24760:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "24760:17:13"
																					},
																					"nativeSrc": "24760:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24760:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24746:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "24746:3:13"
																			},
																			"nativeSrc": "24746:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24746:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "24731:11:13",
																				"nodeType": "YulTypedName",
																				"src": "24731:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24947:27:13",
																			"nodeType": "YulBlock",
																			"src": "24947:27:13",
																			"statements": [
																				{
																					"nativeSrc": "24949:23:13",
																					"nodeType": "YulAssignment",
																					"src": "24949:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "24964:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "24964:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "24949:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "24949:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "24931:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "24931:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24943:2:13",
																					"nodeType": "YulLiteral",
																					"src": "24943:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24928:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "24928:2:13"
																			},
																			"nativeSrc": "24928:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24928:18:13"
																		},
																		"nativeSrc": "24925:49:13",
																		"nodeType": "YulIf",
																		"src": "24925:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "25016:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "25016:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "25033:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "25033:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "25061:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "25061:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "25043:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "25043:17:13"
																							},
																							"nativeSrc": "25043:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "25043:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "25029:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "25029:3:13"
																					},
																					"nativeSrc": "25029:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25029:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "24987:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "24987:28:13"
																			},
																			"nativeSrc": "24987:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24987:80:13"
																		},
																		"nativeSrc": "24987:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24987:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "24637:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "24637:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24642:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24642:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24634:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24634:2:13"
																},
																"nativeSrc": "24634:11:13",
																"nodeType": "YulFunctionCall",
																"src": "24634:11:13"
															},
															"nativeSrc": "24631:446:13",
															"nodeType": "YulIf",
															"src": "24631:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "24541:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "24596:5:13",
														"nodeType": "YulTypedName",
														"src": "24596:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24603:3:13",
														"nodeType": "YulTypedName",
														"src": "24603:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "24608:10:13",
														"nodeType": "YulTypedName",
														"src": "24608:10:13",
														"type": ""
													}
												],
												"src": "24541:543:13"
											},
											{
												"body": {
													"nativeSrc": "25153:54:13",
													"nodeType": "YulBlock",
													"src": "25153:54:13",
													"statements": [
														{
															"nativeSrc": "25163:37:13",
															"nodeType": "YulAssignment",
															"src": "25163:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "25188:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25188:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "25194:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "25194:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "25184:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25184:3:13"
																},
																"nativeSrc": "25184:16:13",
																"nodeType": "YulFunctionCall",
																"src": "25184:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "25163:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "25163:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "25090:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "25128:4:13",
														"nodeType": "YulTypedName",
														"src": "25128:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "25134:5:13",
														"nodeType": "YulTypedName",
														"src": "25134:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "25144:8:13",
														"nodeType": "YulTypedName",
														"src": "25144:8:13",
														"type": ""
													}
												],
												"src": "25090:117:13"
											},
											{
												"body": {
													"nativeSrc": "25264:118:13",
													"nodeType": "YulBlock",
													"src": "25264:118:13",
													"statements": [
														{
															"nativeSrc": "25274:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "25274:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25323:1:13",
																						"nodeType": "YulLiteral",
																						"src": "25323:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "25326:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "25326:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "25319:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "25319:3:13"
																				},
																				"nativeSrc": "25319:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "25319:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25338:1:13",
																						"nodeType": "YulLiteral",
																						"src": "25338:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "25334:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "25334:3:13"
																				},
																				"nativeSrc": "25334:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "25334:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "25290:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "25290:28:13"
																		},
																		"nativeSrc": "25290:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25290:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "25286:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25286:3:13"
																},
																"nativeSrc": "25286:56:13",
																"nodeType": "YulFunctionCall",
																"src": "25286:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "25278:4:13",
																	"nodeType": "YulTypedName",
																	"src": "25278:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25351:25:13",
															"nodeType": "YulAssignment",
															"src": "25351:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25365:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25365:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "25371:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25371:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25361:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25361:3:13"
																},
																"nativeSrc": "25361:15:13",
																"nodeType": "YulFunctionCall",
																"src": "25361:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25351:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "25351:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "25213:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25241:4:13",
														"nodeType": "YulTypedName",
														"src": "25241:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "25247:5:13",
														"nodeType": "YulTypedName",
														"src": "25247:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25257:6:13",
														"nodeType": "YulTypedName",
														"src": "25257:6:13",
														"type": ""
													}
												],
												"src": "25213:169:13"
											},
											{
												"body": {
													"nativeSrc": "25468:214:13",
													"nodeType": "YulBlock",
													"src": "25468:214:13",
													"statements": [
														{
															"nativeSrc": "25601:37:13",
															"nodeType": "YulAssignment",
															"src": "25601:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25628:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25628:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "25634:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "25634:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "25609:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "25609:18:13"
																},
																"nativeSrc": "25609:29:13",
																"nodeType": "YulFunctionCall",
																"src": "25609:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25601:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "25601:4:13"
																}
															]
														},
														{
															"nativeSrc": "25647:29:13",
															"nodeType": "YulAssignment",
															"src": "25647:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25658:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25658:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "25668:1:13",
																				"nodeType": "YulLiteral",
																				"src": "25668:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "25671:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "25671:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "25664:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25664:3:13"
																		},
																		"nativeSrc": "25664:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25664:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "25655:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "25655:2:13"
																},
																"nativeSrc": "25655:21:13",
																"nodeType": "YulFunctionCall",
																"src": "25655:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "25647:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "25647:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "25387:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25449:4:13",
														"nodeType": "YulTypedName",
														"src": "25449:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "25455:3:13",
														"nodeType": "YulTypedName",
														"src": "25455:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "25463:4:13",
														"nodeType": "YulTypedName",
														"src": "25463:4:13",
														"type": ""
													}
												],
												"src": "25387:295:13"
											},
											{
												"body": {
													"nativeSrc": "25779:1303:13",
													"nodeType": "YulBlock",
													"src": "25779:1303:13",
													"statements": [
														{
															"nativeSrc": "25790:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "25790:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "25837:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "25837:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "25804:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "25804:32:13"
																},
																"nativeSrc": "25804:37:13",
																"nodeType": "YulFunctionCall",
																"src": "25804:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "25794:6:13",
																	"nodeType": "YulTypedName",
																	"src": "25794:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25926:22:13",
																"nodeType": "YulBlock",
																"src": "25926:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "25928:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "25928:16:13"
																			},
																			"nativeSrc": "25928:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "25928:18:13"
																		},
																		"nativeSrc": "25928:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "25928:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25898:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "25898:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25906:18:13",
																		"nodeType": "YulLiteral",
																		"src": "25906:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25895:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "25895:2:13"
																},
																"nativeSrc": "25895:30:13",
																"nodeType": "YulFunctionCall",
																"src": "25895:30:13"
															},
															"nativeSrc": "25892:56:13",
															"nodeType": "YulIf",
															"src": "25892:56:13"
														},
														{
															"nativeSrc": "25958:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "25958:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "26004:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "26004:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "25998:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "25998:5:13"
																		},
																		"nativeSrc": "25998:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25998:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "25972:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "25972:25:13"
																},
																"nativeSrc": "25972:38:13",
																"nodeType": "YulFunctionCall",
																"src": "25972:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "25962:6:13",
																	"nodeType": "YulTypedName",
																	"src": "25962:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26103:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "26103:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "26109:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26109:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "26117:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26117:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "26057:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "26057:45:13"
																},
																"nativeSrc": "26057:67:13",
																"nodeType": "YulFunctionCall",
																"src": "26057:67:13"
															},
															"nativeSrc": "26057:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "26057:67:13"
														},
														{
															"nativeSrc": "26134:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "26134:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "26151:1:13",
																"nodeType": "YulLiteral",
																"src": "26151:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26138:9:13",
																	"nodeType": "YulTypedName",
																	"src": "26138:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26162:17:13",
															"nodeType": "YulAssignment",
															"src": "26162:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "26175:4:13",
																"nodeType": "YulLiteral",
																"src": "26175:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26162:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "26162:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "26226:611:13",
																		"nodeType": "YulBlock",
																		"src": "26226:611:13",
																		"statements": [
																			{
																				"nativeSrc": "26240:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26240:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "26259:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "26259:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "26271:4:13",
																									"nodeType": "YulLiteral",
																									"src": "26271:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "26267:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "26267:3:13"
																							},
																							"nativeSrc": "26267:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "26267:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "26255:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "26255:3:13"
																					},
																					"nativeSrc": "26255:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26255:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "26244:7:13",
																						"nodeType": "YulTypedName",
																						"src": "26244:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26291:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26291:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26337:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "26337:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "26305:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "26305:31:13"
																					},
																					"nativeSrc": "26305:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26305:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "26295:6:13",
																						"nodeType": "YulTypedName",
																						"src": "26295:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26355:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26355:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26364:1:13",
																					"nodeType": "YulLiteral",
																					"src": "26364:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "26359:1:13",
																						"nodeType": "YulTypedName",
																						"src": "26359:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26423:163:13",
																					"nodeType": "YulBlock",
																					"src": "26423:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26448:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "26448:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "26466:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "26466:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "26471:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "26471:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "26462:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "26462:3:13"
																												},
																												"nativeSrc": "26462:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "26462:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "26456:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "26456:5:13"
																										},
																										"nativeSrc": "26456:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "26456:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26441:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "26441:6:13"
																								},
																								"nativeSrc": "26441:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26441:42:13"
																							},
																							"nativeSrc": "26441:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "26441:42:13"
																						},
																						{
																							"nativeSrc": "26500:24:13",
																							"nodeType": "YulAssignment",
																							"src": "26500:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26514:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "26514:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26522:1:13",
																										"nodeType": "YulLiteral",
																										"src": "26522:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26510:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "26510:3:13"
																								},
																								"nativeSrc": "26510:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26510:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "26500:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "26500:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "26541:31:13",
																							"nodeType": "YulAssignment",
																							"src": "26541:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "26558:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "26558:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26569:2:13",
																										"nodeType": "YulLiteral",
																										"src": "26569:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26554:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "26554:3:13"
																								},
																								"nativeSrc": "26554:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26554:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "26541:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "26541:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "26389:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "26389:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26392:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "26392:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26386:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "26386:2:13"
																					},
																					"nativeSrc": "26386:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26386:14:13"
																				},
																				"nativeSrc": "26378:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "26401:21:13",
																					"nodeType": "YulBlock",
																					"src": "26401:21:13",
																					"statements": [
																						{
																							"nativeSrc": "26403:17:13",
																							"nodeType": "YulAssignment",
																							"src": "26403:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "26412:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "26412:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26415:4:13",
																										"nodeType": "YulLiteral",
																										"src": "26415:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26408:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "26408:3:13"
																								},
																								"nativeSrc": "26408:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26408:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "26403:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "26403:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "26382:3:13",
																					"nodeType": "YulBlock",
																					"src": "26382:3:13",
																					"statements": []
																				},
																				"src": "26378:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "26622:156:13",
																					"nodeType": "YulBlock",
																					"src": "26622:156:13",
																					"statements": [
																						{
																							"nativeSrc": "26640:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "26640:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26667:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "26667:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26672:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "26672:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26663:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "26663:3:13"
																										},
																										"nativeSrc": "26663:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "26663:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26657:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "26657:5:13"
																								},
																								"nativeSrc": "26657:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26657:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "26644:9:13",
																									"nodeType": "YulTypedName",
																									"src": "26644:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26707:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "26707:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "26734:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "26734:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "26749:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "26749:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "26757:4:13",
																														"nodeType": "YulLiteral",
																														"src": "26757:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "26745:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "26745:3:13"
																												},
																												"nativeSrc": "26745:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "26745:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "26715:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "26715:18:13"
																										},
																										"nativeSrc": "26715:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "26715:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26700:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "26700:6:13"
																								},
																								"nativeSrc": "26700:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26700:64:13"
																							},
																							"nativeSrc": "26700:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "26700:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26605:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "26605:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "26614:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "26614:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26602:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "26602:2:13"
																					},
																					"nativeSrc": "26602:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26602:19:13"
																				},
																				"nativeSrc": "26599:179:13",
																				"nodeType": "YulIf",
																				"src": "26599:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26798:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "26798:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "26812:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "26812:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "26820:1:13",
																											"nodeType": "YulLiteral",
																											"src": "26820:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "26808:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "26808:3:13"
																									},
																									"nativeSrc": "26808:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "26808:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "26824:1:13",
																									"nodeType": "YulLiteral",
																									"src": "26824:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "26804:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "26804:3:13"
																							},
																							"nativeSrc": "26804:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "26804:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26791:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "26791:6:13"
																					},
																					"nativeSrc": "26791:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26791:36:13"
																				},
																				"nativeSrc": "26791:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "26791:36:13"
																			}
																		]
																	},
																	"nativeSrc": "26219:618:13",
																	"nodeType": "YulCase",
																	"src": "26219:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26224:1:13",
																		"nodeType": "YulLiteral",
																		"src": "26224:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "26854:222:13",
																		"nodeType": "YulBlock",
																		"src": "26854:222:13",
																		"statements": [
																			{
																				"nativeSrc": "26868:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26868:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26881:1:13",
																					"nodeType": "YulLiteral",
																					"src": "26881:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "26872:5:13",
																						"nodeType": "YulTypedName",
																						"src": "26872:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26905:67:13",
																					"nodeType": "YulBlock",
																					"src": "26905:67:13",
																					"statements": [
																						{
																							"nativeSrc": "26923:35:13",
																							"nodeType": "YulAssignment",
																							"src": "26923:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26942:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "26942:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26947:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "26947:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26938:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "26938:3:13"
																										},
																										"nativeSrc": "26938:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "26938:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26932:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "26932:5:13"
																								},
																								"nativeSrc": "26932:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "26932:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "26923:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "26923:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "26898:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "26898:6:13"
																				},
																				"nativeSrc": "26895:77:13",
																				"nodeType": "YulIf",
																				"src": "26895:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26992:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "26992:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "27051:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "27051:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "27058:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "27058:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "26998:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "26998:52:13"
																							},
																							"nativeSrc": "26998:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "26998:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26985:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "26985:6:13"
																					},
																					"nativeSrc": "26985:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "26985:81:13"
																				},
																				"nativeSrc": "26985:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "26985:81:13"
																			}
																		]
																	},
																	"nativeSrc": "26846:230:13",
																	"nodeType": "YulCase",
																	"src": "26846:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26199:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26199:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26207:2:13",
																		"nodeType": "YulLiteral",
																		"src": "26207:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26196:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "26196:2:13"
																},
																"nativeSrc": "26196:14:13",
																"nodeType": "YulFunctionCall",
																"src": "26196:14:13"
															},
															"nativeSrc": "26189:887:13",
															"nodeType": "YulSwitch",
															"src": "26189:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "25687:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25768:4:13",
														"nodeType": "YulTypedName",
														"src": "25768:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "25774:3:13",
														"nodeType": "YulTypedName",
														"src": "25774:3:13",
														"type": ""
													}
												],
												"src": "25687:1395:13"
											},
											{
												"body": {
													"nativeSrc": "27270:371:13",
													"nodeType": "YulBlock",
													"src": "27270:371:13",
													"statements": [
														{
															"nativeSrc": "27280:27:13",
															"nodeType": "YulAssignment",
															"src": "27280:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27292:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "27292:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27303:3:13",
																		"nodeType": "YulLiteral",
																		"src": "27303:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27288:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "27288:3:13"
																},
																"nativeSrc": "27288:19:13",
																"nodeType": "YulFunctionCall",
																"src": "27288:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27280:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "27280:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27361:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "27361:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27374:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27374:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27385:1:13",
																				"nodeType": "YulLiteral",
																				"src": "27385:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27370:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27370:3:13"
																		},
																		"nativeSrc": "27370:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27370:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27317:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27317:43:13"
																},
																"nativeSrc": "27317:71:13",
																"nodeType": "YulFunctionCall",
																"src": "27317:71:13"
															},
															"nativeSrc": "27317:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "27317:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27442:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "27442:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27455:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27455:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27466:2:13",
																				"nodeType": "YulLiteral",
																				"src": "27466:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27451:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27451:3:13"
																		},
																		"nativeSrc": "27451:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27451:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27398:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27398:43:13"
																},
																"nativeSrc": "27398:72:13",
																"nodeType": "YulFunctionCall",
																"src": "27398:72:13"
															},
															"nativeSrc": "27398:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "27398:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27524:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "27524:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27537:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27537:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27548:2:13",
																				"nodeType": "YulLiteral",
																				"src": "27548:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27533:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27533:3:13"
																		},
																		"nativeSrc": "27533:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27533:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27480:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27480:43:13"
																},
																"nativeSrc": "27480:72:13",
																"nodeType": "YulFunctionCall",
																"src": "27480:72:13"
															},
															"nativeSrc": "27480:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "27480:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "27606:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "27606:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27619:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27619:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27630:2:13",
																				"nodeType": "YulLiteral",
																				"src": "27630:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27615:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27615:3:13"
																		},
																		"nativeSrc": "27615:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27615:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27562:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27562:43:13"
																},
																"nativeSrc": "27562:72:13",
																"nodeType": "YulFunctionCall",
																"src": "27562:72:13"
															},
															"nativeSrc": "27562:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "27562:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "27088:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27218:9:13",
														"nodeType": "YulTypedName",
														"src": "27218:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "27230:6:13",
														"nodeType": "YulTypedName",
														"src": "27230:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27238:6:13",
														"nodeType": "YulTypedName",
														"src": "27238:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27246:6:13",
														"nodeType": "YulTypedName",
														"src": "27246:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27254:6:13",
														"nodeType": "YulTypedName",
														"src": "27254:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27265:4:13",
														"nodeType": "YulTypedName",
														"src": "27265:4:13",
														"type": ""
													}
												],
												"src": "27088:553:13"
											},
											{
												"body": {
													"nativeSrc": "27675:152:13",
													"nodeType": "YulBlock",
													"src": "27675:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27692:1:13",
																		"nodeType": "YulLiteral",
																		"src": "27692:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27695:77:13",
																		"nodeType": "YulLiteral",
																		"src": "27695:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27685:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "27685:6:13"
																},
																"nativeSrc": "27685:88:13",
																"nodeType": "YulFunctionCall",
																"src": "27685:88:13"
															},
															"nativeSrc": "27685:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "27685:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27789:1:13",
																		"nodeType": "YulLiteral",
																		"src": "27789:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27792:4:13",
																		"nodeType": "YulLiteral",
																		"src": "27792:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27782:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "27782:6:13"
																},
																"nativeSrc": "27782:15:13",
																"nodeType": "YulFunctionCall",
																"src": "27782:15:13"
															},
															"nativeSrc": "27782:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "27782:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27813:1:13",
																		"nodeType": "YulLiteral",
																		"src": "27813:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27816:4:13",
																		"nodeType": "YulLiteral",
																		"src": "27816:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "27806:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "27806:6:13"
																},
																"nativeSrc": "27806:15:13",
																"nodeType": "YulFunctionCall",
																"src": "27806:15:13"
															},
															"nativeSrc": "27806:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "27806:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "27647:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "27647:180:13"
											},
											{
												"body": {
													"nativeSrc": "27877:147:13",
													"nodeType": "YulBlock",
													"src": "27877:147:13",
													"statements": [
														{
															"nativeSrc": "27887:25:13",
															"nodeType": "YulAssignment",
															"src": "27887:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27910:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "27910:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27892:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "27892:17:13"
																},
																"nativeSrc": "27892:20:13",
																"nodeType": "YulFunctionCall",
																"src": "27892:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "27887:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "27887:1:13"
																}
															]
														},
														{
															"nativeSrc": "27921:25:13",
															"nodeType": "YulAssignment",
															"src": "27921:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27944:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "27944:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27926:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "27926:17:13"
																},
																"nativeSrc": "27926:20:13",
																"nodeType": "YulFunctionCall",
																"src": "27926:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "27921:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "27921:1:13"
																}
															]
														},
														{
															"nativeSrc": "27955:16:13",
															"nodeType": "YulAssignment",
															"src": "27955:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27966:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "27966:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "27969:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "27969:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27962:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "27962:3:13"
																},
																"nativeSrc": "27962:9:13",
																"nodeType": "YulFunctionCall",
																"src": "27962:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "27955:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "27955:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27995:22:13",
																"nodeType": "YulBlock",
																"src": "27995:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "27997:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "27997:16:13"
																			},
																			"nativeSrc": "27997:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "27997:18:13"
																		},
																		"nativeSrc": "27997:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "27997:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27987:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "27987:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "27990:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "27990:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27984:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "27984:2:13"
																},
																"nativeSrc": "27984:10:13",
																"nodeType": "YulFunctionCall",
																"src": "27984:10:13"
															},
															"nativeSrc": "27981:36:13",
															"nodeType": "YulIf",
															"src": "27981:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "27833:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "27864:1:13",
														"nodeType": "YulTypedName",
														"src": "27864:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "27867:1:13",
														"nodeType": "YulTypedName",
														"src": "27867:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "27873:3:13",
														"nodeType": "YulTypedName",
														"src": "27873:3:13",
														"type": ""
													}
												],
												"src": "27833:191:13"
											},
											{
												"body": {
													"nativeSrc": "28256:408:13",
													"nodeType": "YulBlock",
													"src": "28256:408:13",
													"statements": [
														{
															"nativeSrc": "28266:26:13",
															"nodeType": "YulAssignment",
															"src": "28266:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28278:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "28278:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28289:2:13",
																		"nodeType": "YulLiteral",
																		"src": "28289:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28274:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "28274:3:13"
																},
																"nativeSrc": "28274:18:13",
																"nodeType": "YulFunctionCall",
																"src": "28274:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28266:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "28266:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28313:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "28313:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28324:1:13",
																				"nodeType": "YulLiteral",
																				"src": "28324:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28309:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "28309:3:13"
																		},
																		"nativeSrc": "28309:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "28309:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28332:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "28332:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28338:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "28338:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28328:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "28328:3:13"
																		},
																		"nativeSrc": "28328:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "28328:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28302:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "28302:6:13"
																},
																"nativeSrc": "28302:47:13",
																"nodeType": "YulFunctionCall",
																"src": "28302:47:13"
															},
															"nativeSrc": "28302:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "28302:47:13"
														},
														{
															"nativeSrc": "28358:116:13",
															"nodeType": "YulAssignment",
															"src": "28358:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28460:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "28460:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "28469:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "28469:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "28366:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "28366:93:13"
																},
																"nativeSrc": "28366:108:13",
																"nodeType": "YulFunctionCall",
																"src": "28366:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28358:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "28358:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28495:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "28495:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28506:2:13",
																				"nodeType": "YulLiteral",
																				"src": "28506:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28491:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "28491:3:13"
																		},
																		"nativeSrc": "28491:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "28491:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28515:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "28515:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28521:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "28521:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28511:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "28511:3:13"
																		},
																		"nativeSrc": "28511:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "28511:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28484:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "28484:6:13"
																},
																"nativeSrc": "28484:48:13",
																"nodeType": "YulFunctionCall",
																"src": "28484:48:13"
															},
															"nativeSrc": "28484:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "28484:48:13"
														},
														{
															"nativeSrc": "28541:116:13",
															"nodeType": "YulAssignment",
															"src": "28541:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28643:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "28643:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "28652:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "28652:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "28549:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "28549:93:13"
																},
																"nativeSrc": "28549:108:13",
																"nodeType": "YulFunctionCall",
																"src": "28549:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28541:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "28541:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "28030:634:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28220:9:13",
														"nodeType": "YulTypedName",
														"src": "28220:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28232:6:13",
														"nodeType": "YulTypedName",
														"src": "28232:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28240:6:13",
														"nodeType": "YulTypedName",
														"src": "28240:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28251:4:13",
														"nodeType": "YulTypedName",
														"src": "28251:4:13",
														"type": ""
													}
												],
												"src": "28030:634:13"
											},
											{
												"body": {
													"nativeSrc": "28728:40:13",
													"nodeType": "YulBlock",
													"src": "28728:40:13",
													"statements": [
														{
															"nativeSrc": "28739:22:13",
															"nodeType": "YulAssignment",
															"src": "28739:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28755:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "28755:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "28749:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "28749:5:13"
																},
																"nativeSrc": "28749:12:13",
																"nodeType": "YulFunctionCall",
																"src": "28749:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "28739:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "28739:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "28670:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28711:5:13",
														"nodeType": "YulTypedName",
														"src": "28711:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "28721:6:13",
														"nodeType": "YulTypedName",
														"src": "28721:6:13",
														"type": ""
													}
												],
												"src": "28670:98:13"
											},
											{
												"body": {
													"nativeSrc": "28869:73:13",
													"nodeType": "YulBlock",
													"src": "28869:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28886:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "28886:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28891:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "28891:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28879:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "28879:6:13"
																},
																"nativeSrc": "28879:19:13",
																"nodeType": "YulFunctionCall",
																"src": "28879:19:13"
															},
															"nativeSrc": "28879:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "28879:19:13"
														},
														{
															"nativeSrc": "28907:29:13",
															"nodeType": "YulAssignment",
															"src": "28907:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28926:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "28926:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28931:4:13",
																		"nodeType": "YulLiteral",
																		"src": "28931:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "28922:3:13"
																},
																"nativeSrc": "28922:14:13",
																"nodeType": "YulFunctionCall",
																"src": "28922:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "28907:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "28907:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "28774:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28841:3:13",
														"nodeType": "YulTypedName",
														"src": "28841:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "28846:6:13",
														"nodeType": "YulTypedName",
														"src": "28846:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "28857:11:13",
														"nodeType": "YulTypedName",
														"src": "28857:11:13",
														"type": ""
													}
												],
												"src": "28774:168:13"
											},
											{
												"body": {
													"nativeSrc": "29038:283:13",
													"nodeType": "YulBlock",
													"src": "29038:283:13",
													"statements": [
														{
															"nativeSrc": "29048:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "29048:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29094:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "29094:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "29062:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "29062:31:13"
																},
																"nativeSrc": "29062:38:13",
																"nodeType": "YulFunctionCall",
																"src": "29062:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "29052:6:13",
																	"nodeType": "YulTypedName",
																	"src": "29052:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "29109:77:13",
															"nodeType": "YulAssignment",
															"src": "29109:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29174:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "29174:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29179:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "29179:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "29116:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "29116:57:13"
																},
																"nativeSrc": "29116:70:13",
																"nodeType": "YulFunctionCall",
																"src": "29116:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29109:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29109:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "29234:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "29234:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29241:4:13",
																				"nodeType": "YulLiteral",
																				"src": "29241:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29230:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29230:3:13"
																		},
																		"nativeSrc": "29230:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29230:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "29248:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "29248:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29253:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "29253:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "29195:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "29195:34:13"
																},
																"nativeSrc": "29195:65:13",
																"nodeType": "YulFunctionCall",
																"src": "29195:65:13"
															},
															"nativeSrc": "29195:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "29195:65:13"
														},
														{
															"nativeSrc": "29269:46:13",
															"nodeType": "YulAssignment",
															"src": "29269:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29280:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "29280:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "29307:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "29307:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "29285:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "29285:21:13"
																		},
																		"nativeSrc": "29285:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29285:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29276:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29276:3:13"
																},
																"nativeSrc": "29276:39:13",
																"nodeType": "YulFunctionCall",
																"src": "29276:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29269:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29269:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "28948:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29019:5:13",
														"nodeType": "YulTypedName",
														"src": "29019:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "29026:3:13",
														"nodeType": "YulTypedName",
														"src": "29026:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29034:3:13",
														"nodeType": "YulTypedName",
														"src": "29034:3:13",
														"type": ""
													}
												],
												"src": "28948:373:13"
											},
											{
												"body": {
													"nativeSrc": "29555:523:13",
													"nodeType": "YulBlock",
													"src": "29555:523:13",
													"statements": [
														{
															"nativeSrc": "29565:27:13",
															"nodeType": "YulAssignment",
															"src": "29565:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29577:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "29577:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29588:3:13",
																		"nodeType": "YulLiteral",
																		"src": "29588:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29573:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "29573:3:13"
																},
																"nativeSrc": "29573:19:13",
																"nodeType": "YulFunctionCall",
																"src": "29573:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29565:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "29565:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29646:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "29646:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29659:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29659:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29670:1:13",
																				"nodeType": "YulLiteral",
																				"src": "29670:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29655:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29655:3:13"
																		},
																		"nativeSrc": "29655:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29655:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29602:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "29602:43:13"
																},
																"nativeSrc": "29602:71:13",
																"nodeType": "YulFunctionCall",
																"src": "29602:71:13"
															},
															"nativeSrc": "29602:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "29602:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "29727:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "29727:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29740:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29740:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29751:2:13",
																				"nodeType": "YulLiteral",
																				"src": "29751:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29736:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29736:3:13"
																		},
																		"nativeSrc": "29736:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29736:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29683:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "29683:43:13"
																},
																"nativeSrc": "29683:72:13",
																"nodeType": "YulFunctionCall",
																"src": "29683:72:13"
															},
															"nativeSrc": "29683:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "29683:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "29809:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "29809:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29822:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29822:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29833:2:13",
																				"nodeType": "YulLiteral",
																				"src": "29833:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29818:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29818:3:13"
																		},
																		"nativeSrc": "29818:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29818:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "29765:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "29765:43:13"
																},
																"nativeSrc": "29765:72:13",
																"nodeType": "YulFunctionCall",
																"src": "29765:72:13"
															},
															"nativeSrc": "29765:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "29765:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "29891:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "29891:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29904:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29904:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29915:2:13",
																				"nodeType": "YulLiteral",
																				"src": "29915:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29900:3:13"
																		},
																		"nativeSrc": "29900:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29900:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "29847:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "29847:43:13"
																},
																"nativeSrc": "29847:72:13",
																"nodeType": "YulFunctionCall",
																"src": "29847:72:13"
															},
															"nativeSrc": "29847:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "29847:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29940:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29940:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29951:3:13",
																				"nodeType": "YulLiteral",
																				"src": "29951:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29936:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29936:3:13"
																		},
																		"nativeSrc": "29936:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29936:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29961:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "29961:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29967:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "29967:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29957:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "29957:3:13"
																		},
																		"nativeSrc": "29957:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "29957:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29929:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "29929:6:13"
																},
																"nativeSrc": "29929:49:13",
																"nodeType": "YulFunctionCall",
																"src": "29929:49:13"
															},
															"nativeSrc": "29929:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "29929:49:13"
														},
														{
															"nativeSrc": "29987:84:13",
															"nodeType": "YulAssignment",
															"src": "29987:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "30057:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "30057:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "30066:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "30066:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "29995:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "29995:61:13"
																},
																"nativeSrc": "29995:76:13",
																"nodeType": "YulFunctionCall",
																"src": "29995:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29987:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "29987:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "29327:751:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29495:9:13",
														"nodeType": "YulTypedName",
														"src": "29495:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "29507:6:13",
														"nodeType": "YulTypedName",
														"src": "29507:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "29515:6:13",
														"nodeType": "YulTypedName",
														"src": "29515:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "29523:6:13",
														"nodeType": "YulTypedName",
														"src": "29523:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29531:6:13",
														"nodeType": "YulTypedName",
														"src": "29531:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29539:6:13",
														"nodeType": "YulTypedName",
														"src": "29539:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29550:4:13",
														"nodeType": "YulTypedName",
														"src": "29550:4:13",
														"type": ""
													}
												],
												"src": "29327:751:13"
											},
											{
												"body": {
													"nativeSrc": "30146:79:13",
													"nodeType": "YulBlock",
													"src": "30146:79:13",
													"statements": [
														{
															"nativeSrc": "30156:22:13",
															"nodeType": "YulAssignment",
															"src": "30156:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "30171:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "30171:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30165:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "30165:5:13"
																},
																"nativeSrc": "30165:13:13",
																"nodeType": "YulFunctionCall",
																"src": "30165:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "30156:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "30156:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30213:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "30213:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "30187:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "30187:25:13"
																},
																"nativeSrc": "30187:32:13",
																"nodeType": "YulFunctionCall",
																"src": "30187:32:13"
															},
															"nativeSrc": "30187:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "30187:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "30084:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "30124:6:13",
														"nodeType": "YulTypedName",
														"src": "30124:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "30132:3:13",
														"nodeType": "YulTypedName",
														"src": "30132:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "30140:5:13",
														"nodeType": "YulTypedName",
														"src": "30140:5:13",
														"type": ""
													}
												],
												"src": "30084:141:13"
											},
											{
												"body": {
													"nativeSrc": "30307:273:13",
													"nodeType": "YulBlock",
													"src": "30307:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "30353:83:13",
																"nodeType": "YulBlock",
																"src": "30353:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "30355:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "30355:77:13"
																			},
																			"nativeSrc": "30355:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "30355:79:13"
																		},
																		"nativeSrc": "30355:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "30355:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "30328:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "30328:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30337:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "30337:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30324:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "30324:3:13"
																		},
																		"nativeSrc": "30324:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "30324:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30349:2:13",
																		"nodeType": "YulLiteral",
																		"src": "30349:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "30320:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "30320:3:13"
																},
																"nativeSrc": "30320:32:13",
																"nodeType": "YulFunctionCall",
																"src": "30320:32:13"
															},
															"nativeSrc": "30317:119:13",
															"nodeType": "YulIf",
															"src": "30317:119:13"
														},
														{
															"nativeSrc": "30446:127:13",
															"nodeType": "YulBlock",
															"src": "30446:127:13",
															"statements": [
																{
																	"nativeSrc": "30461:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "30461:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "30475:1:13",
																		"nodeType": "YulLiteral",
																		"src": "30475:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "30465:6:13",
																			"nodeType": "YulTypedName",
																			"src": "30465:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "30490:73:13",
																	"nodeType": "YulAssignment",
																	"src": "30490:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "30535:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "30535:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "30546:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "30546:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "30531:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "30531:3:13"
																				},
																				"nativeSrc": "30531:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "30531:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "30555:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "30555:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "30500:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "30500:30:13"
																		},
																		"nativeSrc": "30500:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "30500:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "30490:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "30490:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "30231:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30277:9:13",
														"nodeType": "YulTypedName",
														"src": "30277:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "30288:7:13",
														"nodeType": "YulTypedName",
														"src": "30288:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "30300:6:13",
														"nodeType": "YulTypedName",
														"src": "30300:6:13",
														"type": ""
													}
												],
												"src": "30231:349:13"
											},
											{
												"body": {
													"nativeSrc": "30914:725:13",
													"nodeType": "YulBlock",
													"src": "30914:725:13",
													"statements": [
														{
															"nativeSrc": "30924:27:13",
															"nodeType": "YulAssignment",
															"src": "30924:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30936:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "30936:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30947:3:13",
																		"nodeType": "YulLiteral",
																		"src": "30947:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30932:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "30932:3:13"
																},
																"nativeSrc": "30932:19:13",
																"nodeType": "YulFunctionCall",
																"src": "30932:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30924:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "30924:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31005:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "31005:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31018:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "31018:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31029:1:13",
																				"nodeType": "YulLiteral",
																				"src": "31029:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31014:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "31014:3:13"
																		},
																		"nativeSrc": "31014:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "31014:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30961:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "30961:43:13"
																},
																"nativeSrc": "30961:71:13",
																"nodeType": "YulFunctionCall",
																"src": "30961:71:13"
															},
															"nativeSrc": "30961:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "30961:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31086:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "31086:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31099:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "31099:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31110:2:13",
																				"nodeType": "YulLiteral",
																				"src": "31110:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31095:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "31095:3:13"
																		},
																		"nativeSrc": "31095:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "31095:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31042:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "31042:43:13"
																},
																"nativeSrc": "31042:72:13",
																"nodeType": "YulFunctionCall",
																"src": "31042:72:13"
															},
															"nativeSrc": "31042:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "31042:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31135:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "31135:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31146:2:13",
																				"nodeType": "YulLiteral",
																				"src": "31146:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31131:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "31131:3:13"
																		},
																		"nativeSrc": "31131:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "31131:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31155:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "31155:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31161:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "31161:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31151:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "31151:3:13"
																		},
																		"nativeSrc": "31151:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "31151:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31124:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "31124:6:13"
																},
																"nativeSrc": "31124:48:13",
																"nodeType": "YulFunctionCall",
																"src": "31124:48:13"
															},
															"nativeSrc": "31124:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "31124:48:13"
														},
														{
															"nativeSrc": "31181:116:13",
															"nodeType": "YulAssignment",
															"src": "31181:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31283:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "31283:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31292:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "31292:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "31189:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "31189:93:13"
																},
																"nativeSrc": "31189:108:13",
																"nodeType": "YulFunctionCall",
																"src": "31189:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31181:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "31181:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31318:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "31318:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31329:2:13",
																				"nodeType": "YulLiteral",
																				"src": "31329:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31314:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "31314:3:13"
																		},
																		"nativeSrc": "31314:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "31314:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31338:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "31338:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31344:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "31344:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31334:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "31334:3:13"
																		},
																		"nativeSrc": "31334:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "31334:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31307:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "31307:6:13"
																},
																"nativeSrc": "31307:48:13",
																"nodeType": "YulFunctionCall",
																"src": "31307:48:13"
															},
															"nativeSrc": "31307:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "31307:48:13"
														},
														{
															"nativeSrc": "31364:116:13",
															"nodeType": "YulAssignment",
															"src": "31364:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "31466:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "31466:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31475:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "31475:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "31372:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "31372:93:13"
																},
																"nativeSrc": "31372:108:13",
																"nodeType": "YulFunctionCall",
																"src": "31372:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31364:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "31364:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31501:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "31501:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31512:3:13",
																				"nodeType": "YulLiteral",
																				"src": "31512:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31497:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "31497:3:13"
																		},
																		"nativeSrc": "31497:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "31497:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31522:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "31522:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31528:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "31528:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31518:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "31518:3:13"
																		},
																		"nativeSrc": "31518:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "31518:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31490:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "31490:6:13"
																},
																"nativeSrc": "31490:49:13",
																"nodeType": "YulFunctionCall",
																"src": "31490:49:13"
															},
															"nativeSrc": "31490:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "31490:49:13"
														},
														{
															"nativeSrc": "31548:84:13",
															"nodeType": "YulAssignment",
															"src": "31548:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "31618:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "31618:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31627:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "31627:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "31556:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "31556:61:13"
																},
																"nativeSrc": "31556:76:13",
																"nodeType": "YulFunctionCall",
																"src": "31556:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31548:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "31548:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "30586:1053:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30854:9:13",
														"nodeType": "YulTypedName",
														"src": "30854:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "30866:6:13",
														"nodeType": "YulTypedName",
														"src": "30866:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "30874:6:13",
														"nodeType": "YulTypedName",
														"src": "30874:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "30882:6:13",
														"nodeType": "YulTypedName",
														"src": "30882:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30890:6:13",
														"nodeType": "YulTypedName",
														"src": "30890:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30898:6:13",
														"nodeType": "YulTypedName",
														"src": "30898:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30909:4:13",
														"nodeType": "YulTypedName",
														"src": "30909:4:13",
														"type": ""
													}
												],
												"src": "30586:1053:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c80634e1273f4116100645780634e1273f41461017b57806358ea82e6146101ab578063a22cb465146101c7578063e985e9c5146101e3578063f242432a146102135761009b565b8062fdd58e1461009f57806301ffc9a7146100cf57806307805a6b146100ff5780630e89341c1461012f5780632eb2c2d61461015f575b5f80fd5b6100b960048036038101906100b491906114d2565b61022f565b6040516100c6919061151f565b60405180910390f35b6100e960048036038101906100e4919061158d565b610284565b6040516100f691906115d2565b60405180910390f35b61011960048036038101906101149190611727565b610365565b604051610126919061151f565b60405180910390f35b61014960048036038101906101449190611781565b6103ac565b6040516101569190611826565b60405180910390f35b610179600480360381019061017491906119a8565b6103ef565b005b61019560048036038101906101909190611b33565b610496565b6040516101a29190611c60565b60405180910390f35b6101c560048036038101906101c09190611c80565b61059d565b005b6101e160048036038101906101dc9190611cfa565b6105bc565b005b6101fd60048036038101906101f89190611d38565b6105d2565b60405161020a91906115d2565b60405180910390f35b61022d60048036038101906102289190611d76565b610660565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061034e57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061035e575061035d82610707565b5b9050919050565b5f6103706003610770565b5f61037b6003610784565b90506103988482600160405180602001604052805f815250610790565b6103a28184610825565b8091505092915050565b60606103b782610848565b60045f8481526020019081526020015f206040516020016103d9929190611f32565b6040516020818303038152906040529050919050565b5f6103f86108da565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561043d575061043b86826105d2565b155b156104815780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610478929190611f64565b60405180910390fd5b61048e86868686866108e1565b505050505050565b606081518351146104e257815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016104d9929190611f8b565b60405180910390fd5b5f835167ffffffffffffffff8111156104fe576104fd611603565b5b60405190808252806020026020018201604052801561052c5781602001602082028036833780820191505090505b5090505f5b84518110156105925761056861055082876109d590919063ffffffff16565b61056383876109e890919063ffffffff16565b61022f565b82828151811061057b5761057a611fb2565b5b602002602001018181525050806001019050610531565b508091505092915050565b6105b783838360405180602001604052805f815250610790565b505050565b6105ce6105c76108da565b83836109fb565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6106696108da565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156106ae57506106ac86826105d2565b155b156106f25780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106e9929190611f64565b60405180910390fd5b6106ff8686868686610b64565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610800575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107f79190611fdf565b60405180910390fd5b5f8061080c8585610c6a565b9150915061081d5f87848487610c9a565b505050505050565b8060045f8481526020019081526020015f2090816108439190612183565b505050565b60606002805461085790611e70565b80601f016020809104026020016040519081016040528092919081815260200182805461088390611e70565b80156108ce5780601f106108a5576101008083540402835291602001916108ce565b820191905f5260205f20905b8154815290600101906020018083116108b157829003601f168201915b50505050509050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610951575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109489190611fdf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036109c1575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016109b89190611fdf565b60405180910390fd5b6109ce8585858585610c9a565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6b575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610a629190611fdf565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b5791906115d2565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bd4575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610bcb9190611fdf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c44575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c3b9190611fdf565b60405180910390fd5b5f80610c508585610c6a565b91509150610c618787848487610c9a565b50505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b610ca685858585610d46565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610d3f575f610ce26108da565b90506001845103610d2e575f610d015f866109e890919063ffffffff16565b90505f610d175f866109e890919063ffffffff16565b9050610d278389898585896110d6565b5050610d3d565b610d3c818787878787611285565b5b505b5050505050565b8051825114610d9057815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610d87929190611f8b565b60405180910390fd5b5f610d996108da565b90505f5b8351811015610f95575f610dba82866109e890919063ffffffff16565b90505f610dd083866109e890919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610ef3575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e9f57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610e969493929190612252565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610f8857805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f8091906122c2565b925050819055505b5050806001019050610d9d565b506001835103611050575f610fb35f856109e890919063ffffffff16565b90505f610fc95f856109e890919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611041929190611f8b565b60405180910390a450506110cf565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516110c69291906122f5565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561127d578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161113695949392919061237c565b6020604051808303815f875af192505050801561117157506040513d601f19601f8201168201806040525081019061116e91906123e8565b60015b6111f2573d805f811461119f576040519150601f19603f3d011682016040523d82523d5f602084013e6111a4565b606091505b505f8151036111ea57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111e19190611fdf565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461127b57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112729190611fdf565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561142c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016112e5959493929190612413565b6020604051808303815f875af192505050801561132057506040513d601f19601f8201168201806040525081019061131d91906123e8565b60015b6113a1573d805f811461134e576040519150601f19603f3d011682016040523d82523d5f602084013e611353565b606091505b505f81510361139957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113909190611fdf565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461142a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114219190611fdf565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61146e82611445565b9050919050565b61147e81611464565b8114611488575f80fd5b50565b5f8135905061149981611475565b92915050565b5f819050919050565b6114b18161149f565b81146114bb575f80fd5b50565b5f813590506114cc816114a8565b92915050565b5f80604083850312156114e8576114e761143d565b5b5f6114f58582860161148b565b9250506020611506858286016114be565b9150509250929050565b6115198161149f565b82525050565b5f6020820190506115325f830184611510565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61156c81611538565b8114611576575f80fd5b50565b5f8135905061158781611563565b92915050565b5f602082840312156115a2576115a161143d565b5b5f6115af84828501611579565b91505092915050565b5f8115159050919050565b6115cc816115b8565b82525050565b5f6020820190506115e55f8301846115c3565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611639826115f3565b810181811067ffffffffffffffff8211171561165857611657611603565b5b80604052505050565b5f61166a611434565b90506116768282611630565b919050565b5f67ffffffffffffffff82111561169557611694611603565b5b61169e826115f3565b9050602081019050919050565b828183375f83830152505050565b5f6116cb6116c68461167b565b611661565b9050828152602081018484840111156116e7576116e66115ef565b5b6116f28482856116ab565b509392505050565b5f82601f83011261170e5761170d6115eb565b5b813561171e8482602086016116b9565b91505092915050565b5f806040838503121561173d5761173c61143d565b5b5f61174a8582860161148b565b925050602083013567ffffffffffffffff81111561176b5761176a611441565b5b611777858286016116fa565b9150509250929050565b5f602082840312156117965761179561143d565b5b5f6117a3848285016114be565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156117e35780820151818401526020810190506117c8565b5f8484015250505050565b5f6117f8826117ac565b61180281856117b6565b93506118128185602086016117c6565b61181b816115f3565b840191505092915050565b5f6020820190508181035f83015261183e81846117ee565b905092915050565b5f67ffffffffffffffff8211156118605761185f611603565b5b602082029050602081019050919050565b5f80fd5b5f61188761188284611846565b611661565b905080838252602082019050602084028301858111156118aa576118a9611871565b5b835b818110156118d357806118bf88826114be565b8452602084019350506020810190506118ac565b5050509392505050565b5f82601f8301126118f1576118f06115eb565b5b8135611901848260208601611875565b91505092915050565b5f67ffffffffffffffff82111561192457611923611603565b5b61192d826115f3565b9050602081019050919050565b5f61194c6119478461190a565b611661565b905082815260208101848484011115611968576119676115ef565b5b6119738482856116ab565b509392505050565b5f82601f83011261198f5761198e6115eb565b5b813561199f84826020860161193a565b91505092915050565b5f805f805f60a086880312156119c1576119c061143d565b5b5f6119ce8882890161148b565b95505060206119df8882890161148b565b945050604086013567ffffffffffffffff811115611a00576119ff611441565b5b611a0c888289016118dd565b935050606086013567ffffffffffffffff811115611a2d57611a2c611441565b5b611a39888289016118dd565b925050608086013567ffffffffffffffff811115611a5a57611a59611441565b5b611a668882890161197b565b9150509295509295909350565b5f67ffffffffffffffff821115611a8d57611a8c611603565b5b602082029050602081019050919050565b5f611ab0611aab84611a73565b611661565b90508083825260208201905060208402830185811115611ad357611ad2611871565b5b835b81811015611afc5780611ae8888261148b565b845260208401935050602081019050611ad5565b5050509392505050565b5f82601f830112611b1a57611b196115eb565b5b8135611b2a848260208601611a9e565b91505092915050565b5f8060408385031215611b4957611b4861143d565b5b5f83013567ffffffffffffffff811115611b6657611b65611441565b5b611b7285828601611b06565b925050602083013567ffffffffffffffff811115611b9357611b92611441565b5b611b9f858286016118dd565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611bdb8161149f565b82525050565b5f611bec8383611bd2565b60208301905092915050565b5f602082019050919050565b5f611c0e82611ba9565b611c188185611bb3565b9350611c2383611bc3565b805f5b83811015611c53578151611c3a8882611be1565b9750611c4583611bf8565b925050600181019050611c26565b5085935050505092915050565b5f6020820190508181035f830152611c788184611c04565b905092915050565b5f805f60608486031215611c9757611c9661143d565b5b5f611ca48682870161148b565b9350506020611cb5868287016114be565b9250506040611cc6868287016114be565b9150509250925092565b611cd9816115b8565b8114611ce3575f80fd5b50565b5f81359050611cf481611cd0565b92915050565b5f8060408385031215611d1057611d0f61143d565b5b5f611d1d8582860161148b565b9250506020611d2e85828601611ce6565b9150509250929050565b5f8060408385031215611d4e57611d4d61143d565b5b5f611d5b8582860161148b565b9250506020611d6c8582860161148b565b9150509250929050565b5f805f805f60a08688031215611d8f57611d8e61143d565b5b5f611d9c8882890161148b565b9550506020611dad8882890161148b565b9450506040611dbe888289016114be565b9350506060611dcf888289016114be565b925050608086013567ffffffffffffffff811115611df057611def611441565b5b611dfc8882890161197b565b9150509295509295909350565b5f81905092915050565b5f611e1d826117ac565b611e278185611e09565b9350611e378185602086016117c6565b80840191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e8757607f821691505b602082108103611e9a57611e99611e43565b5b50919050565b5f819050815f5260205f209050919050565b5f8154611ebe81611e70565b611ec88186611e09565b9450600182165f8114611ee25760018114611ef757611f29565b60ff1983168652811515820286019350611f29565b611f0085611ea0565b5f5b83811015611f2157815481890152600182019150602081019050611f02565b838801955050505b50505092915050565b5f611f3d8285611e13565b9150611f498284611eb2565b91508190509392505050565b611f5e81611464565b82525050565b5f604082019050611f775f830185611f55565b611f846020830184611f55565b9392505050565b5f604082019050611f9e5f830185611510565b611fab6020830184611510565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611ff25f830184611f55565b92915050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612007565b61204c8683612007565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61208761208261207d8461149f565b612064565b61149f565b9050919050565b5f819050919050565b6120a08361206d565b6120b46120ac8261208e565b848454612013565b825550505050565b5f90565b6120c86120bc565b6120d3818484612097565b505050565b5b818110156120f6576120eb5f826120c0565b6001810190506120d9565b5050565b601f82111561213b5761210c81611ea0565b61211584611ff8565b81016020851015612124578190505b61213861213085611ff8565b8301826120d8565b50505b505050565b5f82821c905092915050565b5f61215b5f1984600802612140565b1980831691505092915050565b5f612173838361214c565b9150826002028217905092915050565b61218c826117ac565b67ffffffffffffffff8111156121a5576121a4611603565b5b6121af8254611e70565b6121ba8282856120fa565b5f60209050601f8311600181146121eb575f84156121d9578287015190505b6121e38582612168565b86555061224a565b601f1984166121f986611ea0565b5f5b82811015612220578489015182556001820191506020850194506020810190506121fb565b8683101561223d5784890151612239601f89168261214c565b8355505b6001600288020188555050505b505050505050565b5f6080820190506122655f830187611f55565b6122726020830186611510565b61227f6040830185611510565b61228c6060830184611510565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122cc8261149f565b91506122d78361149f565b92508282019050808211156122ef576122ee612295565b5b92915050565b5f6040820190508181035f83015261230d8185611c04565b905081810360208301526123218184611c04565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61234e8261232a565b6123588185612334565b93506123688185602086016117c6565b612371816115f3565b840191505092915050565b5f60a08201905061238f5f830188611f55565b61239c6020830187611f55565b6123a96040830186611510565b6123b66060830185611510565b81810360808301526123c88184612344565b90509695505050505050565b5f815190506123e281611563565b92915050565b5f602082840312156123fd576123fc61143d565b5b5f61240a848285016123d4565b91505092915050565b5f60a0820190506124265f830188611f55565b6124336020830187611f55565b81810360408301526124458186611c04565b905081810360608301526124598185611c04565b9050818103608083015261246d8184612344565b9050969550505050505056fea264697066735822122017b8a8423b9774f6429be3d8d1a2429f036fcde274bdee8c77bf45d123666c2d64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x58EA82E6 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x213 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x7805A6B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1D38 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x34E JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x35E JUMPI POP PUSH2 0x35D DUP3 PUSH2 0x707 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x370 PUSH1 0x3 PUSH2 0x770 JUMP JUMPDEST PUSH0 PUSH2 0x37B PUSH1 0x3 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP PUSH2 0x398 DUP5 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x790 JUMP JUMPDEST PUSH2 0x3A2 DUP2 DUP5 PUSH2 0x825 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B7 DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI POP PUSH2 0x43B DUP7 DUP3 PUSH2 0x5D2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x481 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x478 SWAP3 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x8E1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4E2 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D9 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4FD PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x52C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH2 0x568 PUSH2 0x550 DUP3 DUP8 PUSH2 0x9D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x563 DUP4 DUP8 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x1FB2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x531 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x790 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x5C7 PUSH2 0x8DA JUMP JUMPDEST DUP4 DUP4 PUSH2 0x9FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x669 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI POP PUSH2 0x6AC DUP7 DUP3 PUSH2 0x5D2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6F2 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP3 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB64 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x800 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x80C DUP6 DUP6 PUSH2 0xC6A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x81D PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xC9A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x843 SWAP2 SWAP1 PUSH2 0x2183 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x857 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x883 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x951 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CE DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC9A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xC50 DUP6 DUP6 PUSH2 0xC6A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC61 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xC9A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD46 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD3F JUMPI PUSH0 PUSH2 0xCE2 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xD2E JUMPI PUSH0 PUSH2 0xD01 PUSH0 DUP7 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD17 PUSH0 DUP7 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD27 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x10D6 JUMP JUMPDEST POP POP PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xD3C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xD90 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xD99 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xF95 JUMPI PUSH0 PUSH2 0xDBA DUP3 DUP7 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDD0 DUP4 DUP7 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF3 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE9F JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF88 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xD9D JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1050 JUMPI PUSH0 PUSH2 0xFB3 PUSH0 DUP6 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xFC9 PUSH0 DUP6 PUSH2 0x9E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1041 SWAP3 SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x10CF JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10C6 SWAP3 SWAP2 SWAP1 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x127D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1136 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1171 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116E SWAP2 SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F2 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x119F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x11EA JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E1 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x127B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x142C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1320 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13A1 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x134E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1399 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x142A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1421 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x146E DUP3 PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147E DUP2 PUSH2 0x1464 JUMP JUMPDEST DUP2 EQ PUSH2 0x1488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1499 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B1 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP2 EQ PUSH2 0x14BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CC DUP2 PUSH2 0x14A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F5 DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1506 DUP6 DUP3 DUP7 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1519 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1532 PUSH0 DUP4 ADD DUP5 PUSH2 0x1510 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156C DUP2 PUSH2 0x1538 JUMP JUMPDEST DUP2 EQ PUSH2 0x1576 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1587 DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AF DUP5 DUP3 DUP6 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15CC DUP2 PUSH2 0x15B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x15C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1639 DUP3 PUSH2 0x15F3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1658 JUMPI PUSH2 0x1657 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x166A PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP PUSH2 0x1676 DUP3 DUP3 PUSH2 0x1630 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1695 JUMPI PUSH2 0x1694 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH2 0x169E DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16CB PUSH2 0x16C6 DUP5 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x15EF JUMP JUMPDEST JUMPDEST PUSH2 0x16F2 DUP5 DUP3 DUP6 PUSH2 0x16AB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x170E JUMPI PUSH2 0x170D PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x171E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x173D JUMPI PUSH2 0x173C PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x174A DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176B JUMPI PUSH2 0x176A PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1777 DUP6 DUP3 DUP7 ADD PUSH2 0x16FA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A3 DUP5 DUP3 DUP6 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17C8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17F8 DUP3 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x1802 DUP2 DUP6 PUSH2 0x17B6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1812 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183E DUP2 DUP5 PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1887 PUSH2 0x1882 DUP5 PUSH2 0x1846 JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1871 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D3 JUMPI DUP1 PUSH2 0x18BF DUP9 DUP3 PUSH2 0x14BE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18AC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1901 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1875 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1924 JUMPI PUSH2 0x1923 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH2 0x192D DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x194C PUSH2 0x1947 DUP5 PUSH2 0x190A JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1968 JUMPI PUSH2 0x1967 PUSH2 0x15EF JUMP JUMPDEST JUMPDEST PUSH2 0x1973 DUP5 DUP3 DUP6 PUSH2 0x16AB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x198F JUMPI PUSH2 0x198E PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x199F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x193A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CE DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x19DF DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x19FF PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1A0C DUP9 DUP3 DUP10 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A2D JUMPI PUSH2 0x1A2C PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1A39 DUP9 DUP3 DUP10 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1A66 DUP9 DUP3 DUP10 ADD PUSH2 0x197B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A8D JUMPI PUSH2 0x1A8C PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB0 PUSH2 0x1AAB DUP5 PUSH2 0x1A73 JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD2 PUSH2 0x1871 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AFC JUMPI DUP1 PUSH2 0x1AE8 DUP9 DUP3 PUSH2 0x148B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AD5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B1A JUMPI PUSH2 0x1B19 PUSH2 0x15EB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B2A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B66 JUMPI PUSH2 0x1B65 PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1B72 DUP6 DUP3 DUP7 ADD PUSH2 0x1B06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1B9F DUP6 DUP3 DUP7 ADD PUSH2 0x18DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDB DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEC DUP4 DUP4 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0E DUP3 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1C18 DUP2 DUP6 PUSH2 0x1BB3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C23 DUP4 PUSH2 0x1BC3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C53 JUMPI DUP2 MLOAD PUSH2 0x1C3A DUP9 DUP3 PUSH2 0x1BE1 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C45 DUP4 PUSH2 0x1BF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C26 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C78 DUP2 DUP5 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C97 JUMPI PUSH2 0x1C96 PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA4 DUP7 DUP3 DUP8 ADD PUSH2 0x148B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CB5 DUP7 DUP3 DUP8 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CC6 DUP7 DUP3 DUP8 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1CD9 DUP2 PUSH2 0x15B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF4 DUP2 PUSH2 0x1CD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D10 JUMPI PUSH2 0x1D0F PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D1D DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D2E DUP6 DUP3 DUP7 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D4E JUMPI PUSH2 0x1D4D PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D5B DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D6C DUP6 DUP3 DUP7 ADD PUSH2 0x148B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D8F JUMPI PUSH2 0x1D8E PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D9C DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1DAD DUP9 DUP3 DUP10 ADD PUSH2 0x148B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1DBE DUP9 DUP3 DUP10 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1DCF DUP9 DUP3 DUP10 ADD PUSH2 0x14BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF0 JUMPI PUSH2 0x1DEF PUSH2 0x1441 JUMP JUMPDEST JUMPDEST PUSH2 0x1DFC DUP9 DUP3 DUP10 ADD PUSH2 0x197B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1D DUP3 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x1E27 DUP2 DUP6 PUSH2 0x1E09 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E87 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E9A JUMPI PUSH2 0x1E99 PUSH2 0x1E43 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1EBE DUP2 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x1EC8 DUP2 DUP7 PUSH2 0x1E09 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x1EE2 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1EF7 JUMPI PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1F00 DUP6 PUSH2 0x1EA0 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F21 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F02 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3D DUP3 DUP6 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 DUP5 PUSH2 0x1EB2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F5E DUP2 PUSH2 0x1464 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F77 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x1F84 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F55 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F9E PUSH0 DUP4 ADD DUP6 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x1FAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1510 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2042 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x204C DUP7 DUP4 PUSH2 0x2007 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2087 PUSH2 0x2082 PUSH2 0x207D DUP5 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x149F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A0 DUP4 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x20B4 PUSH2 0x20AC DUP3 PUSH2 0x208E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2013 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x20BC JUMP JUMPDEST PUSH2 0x20D3 DUP2 DUP5 DUP5 PUSH2 0x2097 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20F6 JUMPI PUSH2 0x20EB PUSH0 DUP3 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x213B JUMPI PUSH2 0x210C DUP2 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0x2115 DUP5 PUSH2 0x1FF8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2124 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2138 PUSH2 0x2130 DUP6 PUSH2 0x1FF8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x20D8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x215B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2140 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2173 DUP4 DUP4 PUSH2 0x214C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x218C DUP3 PUSH2 0x17AC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A5 JUMPI PUSH2 0x21A4 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH2 0x21AF DUP3 SLOAD PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x21BA DUP3 DUP3 DUP6 PUSH2 0x20FA JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21EB JUMPI PUSH0 DUP5 ISZERO PUSH2 0x21D9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x21E3 DUP6 DUP3 PUSH2 0x2168 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x224A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x21F9 DUP7 PUSH2 0x1EA0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2220 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21FB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x223D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2239 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x214C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2265 PUSH0 DUP4 ADD DUP8 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x2272 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x227F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x228C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1510 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22CC DUP3 PUSH2 0x149F JUMP JUMPDEST SWAP2 POP PUSH2 0x22D7 DUP4 PUSH2 0x149F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22EF JUMPI PUSH2 0x22EE PUSH2 0x2295 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230D DUP2 DUP6 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2321 DUP2 DUP5 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x234E DUP3 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x2358 DUP2 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP4 POP PUSH2 0x2368 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST PUSH2 0x2371 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x238F PUSH0 DUP4 ADD DUP9 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x239C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x23A9 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x23B6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1510 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x23C8 DUP2 DUP5 PUSH2 0x2344 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23E2 DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23FD JUMPI PUSH2 0x23FC PUSH2 0x143D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x240A DUP5 DUP3 DUP6 ADD PUSH2 0x23D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2426 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x2433 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F55 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2445 DUP2 DUP7 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2459 DUP2 DUP6 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x246D DUP2 DUP5 PUSH2 0x2344 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xB8 0xA8 TIMESTAMP EXTCODESIZE SWAP8 PUSH21 0xF6429BE3D8D1A2429F036FCDE274BDEE8C77BF45D1 0x23 PUSH7 0x6C2D64736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "177:1009:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;563:315:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1017:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;430:125:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3156:144:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;563:315:12:-;647:7;667:32;:20;:30;:32::i;:::-;710:13;726:30;:20;:28;:30::i;:::-;710:46;;777:28;783:7;792:5;799:1;777:28;;;;;;;;;;;;:5;:28::i;:::-;816:29;829:5;836:8;816:12;:29::i;:::-;865:5;858:12;;;563:315;;;;:::o;1017:166::-;1077:13;1134:18;1144:7;1134:9;:18::i;:::-;1154:10;:19;1165:7;1154:19;;;;;;;;;;;1117:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1103:72;;1017:166;;;:::o;4014:429:1:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;430:125:12:-;517:30;523:7;532:2;536:6;517:30;;;;;;;;;;;;:5;:30::i;:::-;430:125;;;:::o;3156:144:1:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;3367:157::-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;762:146:9:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;945:123:7:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;10746:346:1:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;886:123:12:-;992:9;970:10;:19;981:7;970:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;886:123;;:::o;2084:103:1:-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;9015:445:1:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:5:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13268:315:1:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:146::-;4586:6;4581:3;4576;4563:30;4627:1;4618:6;4613:3;4609:16;4602:27;4489:146;;;:::o;4641:425::-;4719:5;4744:66;4760:49;4802:6;4760:49;:::i;:::-;4744:66;:::i;:::-;4735:75;;4833:6;4826:5;4819:21;4871:4;4864:5;4860:16;4909:3;4900:6;4895:3;4891:16;4888:25;4885:112;;;4916:79;;:::i;:::-;4885:112;5006:54;5053:6;5048:3;5043;5006:54;:::i;:::-;4725:341;4641:425;;;;;:::o;5086:340::-;5142:5;5191:3;5184:4;5176:6;5172:17;5168:27;5158:122;;5199:79;;:::i;:::-;5158:122;5316:6;5303:20;5341:79;5416:3;5408:6;5401:4;5393:6;5389:17;5341:79;:::i;:::-;5332:88;;5148:278;5086:340;;;;:::o;5432:654::-;5510:6;5518;5567:2;5555:9;5546:7;5542:23;5538:32;5535:119;;;5573:79;;:::i;:::-;5535:119;5693:1;5718:53;5763:7;5754:6;5743:9;5739:22;5718:53;:::i;:::-;5708:63;;5664:117;5848:2;5837:9;5833:18;5820:32;5879:18;5871:6;5868:30;5865:117;;;5901:79;;:::i;:::-;5865:117;6006:63;6061:7;6052:6;6041:9;6037:22;6006:63;:::i;:::-;5996:73;;5791:288;5432:654;;;;;:::o;6092:329::-;6151:6;6200:2;6188:9;6179:7;6175:23;6171:32;6168:119;;;6206:79;;:::i;:::-;6168:119;6326:1;6351:53;6396:7;6387:6;6376:9;6372:22;6351:53;:::i;:::-;6341:63;;6297:117;6092:329;;;;:::o;6427:99::-;6479:6;6513:5;6507:12;6497:22;;6427:99;;;:::o;6532:169::-;6616:11;6650:6;6645:3;6638:19;6690:4;6685:3;6681:14;6666:29;;6532:169;;;;:::o;6707:246::-;6788:1;6798:113;6812:6;6809:1;6806:13;6798:113;;;6897:1;6892:3;6888:11;6882:18;6878:1;6873:3;6869:11;6862:39;6834:2;6831:1;6827:10;6822:15;;6798:113;;;6945:1;6936:6;6931:3;6927:16;6920:27;6769:184;6707:246;;;:::o;6959:377::-;7047:3;7075:39;7108:5;7075:39;:::i;:::-;7130:71;7194:6;7189:3;7130:71;:::i;:::-;7123:78;;7210:65;7268:6;7263:3;7256:4;7249:5;7245:16;7210:65;:::i;:::-;7300:29;7322:6;7300:29;:::i;:::-;7295:3;7291:39;7284:46;;7051:285;6959:377;;;;:::o;7342:313::-;7455:4;7493:2;7482:9;7478:18;7470:26;;7542:9;7536:4;7532:20;7528:1;7517:9;7513:17;7506:47;7570:78;7643:4;7634:6;7570:78;:::i;:::-;7562:86;;7342:313;;;;:::o;7661:311::-;7738:4;7828:18;7820:6;7817:30;7814:56;;;7850:18;;:::i;:::-;7814:56;7900:4;7892:6;7888:17;7880:25;;7960:4;7954;7950:15;7942:23;;7661:311;;;:::o;7978:117::-;8087:1;8084;8077:12;8118:710;8214:5;8239:81;8255:64;8312:6;8255:64;:::i;:::-;8239:81;:::i;:::-;8230:90;;8340:5;8369:6;8362:5;8355:21;8403:4;8396:5;8392:16;8385:23;;8456:4;8448:6;8444:17;8436:6;8432:30;8485:3;8477:6;8474:15;8471:122;;;8504:79;;:::i;:::-;8471:122;8619:6;8602:220;8636:6;8631:3;8628:15;8602:220;;;8711:3;8740:37;8773:3;8761:10;8740:37;:::i;:::-;8735:3;8728:50;8807:4;8802:3;8798:14;8791:21;;8678:144;8662:4;8657:3;8653:14;8646:21;;8602:220;;;8606:21;8220:608;;8118:710;;;;;:::o;8851:370::-;8922:5;8971:3;8964:4;8956:6;8952:17;8948:27;8938:122;;8979:79;;:::i;:::-;8938:122;9096:6;9083:20;9121:94;9211:3;9203:6;9196:4;9188:6;9184:17;9121:94;:::i;:::-;9112:103;;8928:293;8851:370;;;;:::o;9227:307::-;9288:4;9378:18;9370:6;9367:30;9364:56;;;9400:18;;:::i;:::-;9364:56;9438:29;9460:6;9438:29;:::i;:::-;9430:37;;9522:4;9516;9512:15;9504:23;;9227:307;;;:::o;9540:423::-;9617:5;9642:65;9658:48;9699:6;9658:48;:::i;:::-;9642:65;:::i;:::-;9633:74;;9730:6;9723:5;9716:21;9768:4;9761:5;9757:16;9806:3;9797:6;9792:3;9788:16;9785:25;9782:112;;;9813:79;;:::i;:::-;9782:112;9903:54;9950:6;9945:3;9940;9903:54;:::i;:::-;9623:340;9540:423;;;;;:::o;9982:338::-;10037:5;10086:3;10079:4;10071:6;10067:17;10063:27;10053:122;;10094:79;;:::i;:::-;10053:122;10211:6;10198:20;10236:78;10310:3;10302:6;10295:4;10287:6;10283:17;10236:78;:::i;:::-;10227:87;;10043:277;9982:338;;;;:::o;10326:1509::-;10480:6;10488;10496;10504;10512;10561:3;10549:9;10540:7;10536:23;10532:33;10529:120;;;10568:79;;:::i;:::-;10529:120;10688:1;10713:53;10758:7;10749:6;10738:9;10734:22;10713:53;:::i;:::-;10703:63;;10659:117;10815:2;10841:53;10886:7;10877:6;10866:9;10862:22;10841:53;:::i;:::-;10831:63;;10786:118;10971:2;10960:9;10956:18;10943:32;11002:18;10994:6;10991:30;10988:117;;;11024:79;;:::i;:::-;10988:117;11129:78;11199:7;11190:6;11179:9;11175:22;11129:78;:::i;:::-;11119:88;;10914:303;11284:2;11273:9;11269:18;11256:32;11315:18;11307:6;11304:30;11301:117;;;11337:79;;:::i;:::-;11301:117;11442:78;11512:7;11503:6;11492:9;11488:22;11442:78;:::i;:::-;11432:88;;11227:303;11597:3;11586:9;11582:19;11569:33;11629:18;11621:6;11618:30;11615:117;;;11651:79;;:::i;:::-;11615:117;11756:62;11810:7;11801:6;11790:9;11786:22;11756:62;:::i;:::-;11746:72;;11540:288;10326:1509;;;;;;;;:::o;11841:311::-;11918:4;12008:18;12000:6;11997:30;11994:56;;;12030:18;;:::i;:::-;11994:56;12080:4;12072:6;12068:17;12060:25;;12140:4;12134;12130:15;12122:23;;11841:311;;;:::o;12175:710::-;12271:5;12296:81;12312:64;12369:6;12312:64;:::i;:::-;12296:81;:::i;:::-;12287:90;;12397:5;12426:6;12419:5;12412:21;12460:4;12453:5;12449:16;12442:23;;12513:4;12505:6;12501:17;12493:6;12489:30;12542:3;12534:6;12531:15;12528:122;;;12561:79;;:::i;:::-;12528:122;12676:6;12659:220;12693:6;12688:3;12685:15;12659:220;;;12768:3;12797:37;12830:3;12818:10;12797:37;:::i;:::-;12792:3;12785:50;12864:4;12859:3;12855:14;12848:21;;12735:144;12719:4;12714:3;12710:14;12703:21;;12659:220;;;12663:21;12277:608;;12175:710;;;;;:::o;12908:370::-;12979:5;13028:3;13021:4;13013:6;13009:17;13005:27;12995:122;;13036:79;;:::i;:::-;12995:122;13153:6;13140:20;13178:94;13268:3;13260:6;13253:4;13245:6;13241:17;13178:94;:::i;:::-;13169:103;;12985:293;12908:370;;;;:::o;13284:894::-;13402:6;13410;13459:2;13447:9;13438:7;13434:23;13430:32;13427:119;;;13465:79;;:::i;:::-;13427:119;13613:1;13602:9;13598:17;13585:31;13643:18;13635:6;13632:30;13629:117;;;13665:79;;:::i;:::-;13629:117;13770:78;13840:7;13831:6;13820:9;13816:22;13770:78;:::i;:::-;13760:88;;13556:302;13925:2;13914:9;13910:18;13897:32;13956:18;13948:6;13945:30;13942:117;;;13978:79;;:::i;:::-;13942:117;14083:78;14153:7;14144:6;14133:9;14129:22;14083:78;:::i;:::-;14073:88;;13868:303;13284:894;;;;;:::o;14184:114::-;14251:6;14285:5;14279:12;14269:22;;14184:114;;;:::o;14304:184::-;14403:11;14437:6;14432:3;14425:19;14477:4;14472:3;14468:14;14453:29;;14304:184;;;;:::o;14494:132::-;14561:4;14584:3;14576:11;;14614:4;14609:3;14605:14;14597:22;;14494:132;;;:::o;14632:108::-;14709:24;14727:5;14709:24;:::i;:::-;14704:3;14697:37;14632:108;;:::o;14746:179::-;14815:10;14836:46;14878:3;14870:6;14836:46;:::i;:::-;14914:4;14909:3;14905:14;14891:28;;14746:179;;;;:::o;14931:113::-;15001:4;15033;15028:3;15024:14;15016:22;;14931:113;;;:::o;15080:732::-;15199:3;15228:54;15276:5;15228:54;:::i;:::-;15298:86;15377:6;15372:3;15298:86;:::i;:::-;15291:93;;15408:56;15458:5;15408:56;:::i;:::-;15487:7;15518:1;15503:284;15528:6;15525:1;15522:13;15503:284;;;15604:6;15598:13;15631:63;15690:3;15675:13;15631:63;:::i;:::-;15624:70;;15717:60;15770:6;15717:60;:::i;:::-;15707:70;;15563:224;15550:1;15547;15543:9;15538:14;;15503:284;;;15507:14;15803:3;15796:10;;15204:608;;;15080:732;;;;:::o;15818:373::-;15961:4;15999:2;15988:9;15984:18;15976:26;;16048:9;16042:4;16038:20;16034:1;16023:9;16019:17;16012:47;16076:108;16179:4;16170:6;16076:108;:::i;:::-;16068:116;;15818:373;;;;:::o;16197:619::-;16274:6;16282;16290;16339:2;16327:9;16318:7;16314:23;16310:32;16307:119;;;16345:79;;:::i;:::-;16307:119;16465:1;16490:53;16535:7;16526:6;16515:9;16511:22;16490:53;:::i;:::-;16480:63;;16436:117;16592:2;16618:53;16663:7;16654:6;16643:9;16639:22;16618:53;:::i;:::-;16608:63;;16563:118;16720:2;16746:53;16791:7;16782:6;16771:9;16767:22;16746:53;:::i;:::-;16736:63;;16691:118;16197:619;;;;;:::o;16822:116::-;16892:21;16907:5;16892:21;:::i;:::-;16885:5;16882:32;16872:60;;16928:1;16925;16918:12;16872:60;16822:116;:::o;16944:133::-;16987:5;17025:6;17012:20;17003:29;;17041:30;17065:5;17041:30;:::i;:::-;16944:133;;;;:::o;17083:468::-;17148:6;17156;17205:2;17193:9;17184:7;17180:23;17176:32;17173:119;;;17211:79;;:::i;:::-;17173:119;17331:1;17356:53;17401:7;17392:6;17381:9;17377:22;17356:53;:::i;:::-;17346:63;;17302:117;17458:2;17484:50;17526:7;17517:6;17506:9;17502:22;17484:50;:::i;:::-;17474:60;;17429:115;17083:468;;;;;:::o;17557:474::-;17625:6;17633;17682:2;17670:9;17661:7;17657:23;17653:32;17650:119;;;17688:79;;:::i;:::-;17650:119;17808:1;17833:53;17878:7;17869:6;17858:9;17854:22;17833:53;:::i;:::-;17823:63;;17779:117;17935:2;17961:53;18006:7;17997:6;17986:9;17982:22;17961:53;:::i;:::-;17951:63;;17906:118;17557:474;;;;;:::o;18037:1089::-;18141:6;18149;18157;18165;18173;18222:3;18210:9;18201:7;18197:23;18193:33;18190:120;;;18229:79;;:::i;:::-;18190:120;18349:1;18374:53;18419:7;18410:6;18399:9;18395:22;18374:53;:::i;:::-;18364:63;;18320:117;18476:2;18502:53;18547:7;18538:6;18527:9;18523:22;18502:53;:::i;:::-;18492:63;;18447:118;18604:2;18630:53;18675:7;18666:6;18655:9;18651:22;18630:53;:::i;:::-;18620:63;;18575:118;18732:2;18758:53;18803:7;18794:6;18783:9;18779:22;18758:53;:::i;:::-;18748:63;;18703:118;18888:3;18877:9;18873:19;18860:33;18920:18;18912:6;18909:30;18906:117;;;18942:79;;:::i;:::-;18906:117;19047:62;19101:7;19092:6;19081:9;19077:22;19047:62;:::i;:::-;19037:72;;18831:288;18037:1089;;;;;;;;:::o;19132:148::-;19234:11;19271:3;19256:18;;19132:148;;;;:::o;19286:390::-;19392:3;19420:39;19453:5;19420:39;:::i;:::-;19475:89;19557:6;19552:3;19475:89;:::i;:::-;19468:96;;19573:65;19631:6;19626:3;19619:4;19612:5;19608:16;19573:65;:::i;:::-;19663:6;19658:3;19654:16;19647:23;;19396:280;19286:390;;;;:::o;19682:180::-;19730:77;19727:1;19720:88;19827:4;19824:1;19817:15;19851:4;19848:1;19841:15;19868:320;19912:6;19949:1;19943:4;19939:12;19929:22;;19996:1;19990:4;19986:12;20017:18;20007:81;;20073:4;20065:6;20061:17;20051:27;;20007:81;20135:2;20127:6;20124:14;20104:18;20101:38;20098:84;;20154:18;;:::i;:::-;20098:84;19919:269;19868:320;;;:::o;20194:141::-;20243:4;20266:3;20258:11;;20289:3;20286:1;20279:14;20323:4;20320:1;20310:18;20302:26;;20194:141;;;:::o;20365:874::-;20468:3;20505:5;20499:12;20534:36;20560:9;20534:36;:::i;:::-;20586:89;20668:6;20663:3;20586:89;:::i;:::-;20579:96;;20706:1;20695:9;20691:17;20722:1;20717:166;;;;20897:1;20892:341;;;;20684:549;;20717:166;20801:4;20797:9;20786;20782:25;20777:3;20770:38;20863:6;20856:14;20849:22;20841:6;20837:35;20832:3;20828:45;20821:52;;20717:166;;20892:341;20959:38;20991:5;20959:38;:::i;:::-;21019:1;21033:154;21047:6;21044:1;21041:13;21033:154;;;21121:7;21115:14;21111:1;21106:3;21102:11;21095:35;21171:1;21162:7;21158:15;21147:26;;21069:4;21066:1;21062:12;21057:17;;21033:154;;;21216:6;21211:3;21207:16;21200:23;;20899:334;;20684:549;;20472:767;;20365:874;;;;:::o;21245:429::-;21422:3;21444:95;21535:3;21526:6;21444:95;:::i;:::-;21437:102;;21556:92;21644:3;21635:6;21556:92;:::i;:::-;21549:99;;21665:3;21658:10;;21245:429;;;;;:::o;21680:118::-;21767:24;21785:5;21767:24;:::i;:::-;21762:3;21755:37;21680:118;;:::o;21804:332::-;21925:4;21963:2;21952:9;21948:18;21940:26;;21976:71;22044:1;22033:9;22029:17;22020:6;21976:71;:::i;:::-;22057:72;22125:2;22114:9;22110:18;22101:6;22057:72;:::i;:::-;21804:332;;;;;:::o;22142:::-;22263:4;22301:2;22290:9;22286:18;22278:26;;22314:71;22382:1;22371:9;22367:17;22358:6;22314:71;:::i;:::-;22395:72;22463:2;22452:9;22448:18;22439:6;22395:72;:::i;:::-;22142:332;;;;;:::o;22480:180::-;22528:77;22525:1;22518:88;22625:4;22622:1;22615:15;22649:4;22646:1;22639:15;22666:222;22759:4;22797:2;22786:9;22782:18;22774:26;;22810:71;22878:1;22867:9;22863:17;22854:6;22810:71;:::i;:::-;22666:222;;;;:::o;22894:93::-;22931:6;22978:2;22973;22966:5;22962:14;22958:23;22948:33;;22894:93;;;:::o;22993:107::-;23037:8;23087:5;23081:4;23077:16;23056:37;;22993:107;;;;:::o;23106:393::-;23175:6;23225:1;23213:10;23209:18;23248:97;23278:66;23267:9;23248:97;:::i;:::-;23366:39;23396:8;23385:9;23366:39;:::i;:::-;23354:51;;23438:4;23434:9;23427:5;23423:21;23414:30;;23487:4;23477:8;23473:19;23466:5;23463:30;23453:40;;23182:317;;23106:393;;;;;:::o;23505:60::-;23533:3;23554:5;23547:12;;23505:60;;;:::o;23571:142::-;23621:9;23654:53;23672:34;23681:24;23699:5;23681:24;:::i;:::-;23672:34;:::i;:::-;23654:53;:::i;:::-;23641:66;;23571:142;;;:::o;23719:75::-;23762:3;23783:5;23776:12;;23719:75;;;:::o;23800:269::-;23910:39;23941:7;23910:39;:::i;:::-;23971:91;24020:41;24044:16;24020:41;:::i;:::-;24012:6;24005:4;23999:11;23971:91;:::i;:::-;23965:4;23958:105;23876:193;23800:269;;;:::o;24075:73::-;24120:3;24075:73;:::o;24154:189::-;24231:32;;:::i;:::-;24272:65;24330:6;24322;24316:4;24272:65;:::i;:::-;24207:136;24154:189;;:::o;24349:186::-;24409:120;24426:3;24419:5;24416:14;24409:120;;;24480:39;24517:1;24510:5;24480:39;:::i;:::-;24453:1;24446:5;24442:13;24433:22;;24409:120;;;24349:186;;:::o;24541:543::-;24642:2;24637:3;24634:11;24631:446;;;24676:38;24708:5;24676:38;:::i;:::-;24760:29;24778:10;24760:29;:::i;:::-;24750:8;24746:44;24943:2;24931:10;24928:18;24925:49;;;24964:8;24949:23;;24925:49;24987:80;25043:22;25061:3;25043:22;:::i;:::-;25033:8;25029:37;25016:11;24987:80;:::i;:::-;24646:431;;24631:446;24541:543;;;:::o;25090:117::-;25144:8;25194:5;25188:4;25184:16;25163:37;;25090:117;;;;:::o;25213:169::-;25257:6;25290:51;25338:1;25334:6;25326:5;25323:1;25319:13;25290:51;:::i;:::-;25286:56;25371:4;25365;25361:15;25351:25;;25264:118;25213:169;;;;:::o;25387:295::-;25463:4;25609:29;25634:3;25628:4;25609:29;:::i;:::-;25601:37;;25671:3;25668:1;25664:11;25658:4;25655:21;25647:29;;25387:295;;;;:::o;25687:1395::-;25804:37;25837:3;25804:37;:::i;:::-;25906:18;25898:6;25895:30;25892:56;;;25928:18;;:::i;:::-;25892:56;25972:38;26004:4;25998:11;25972:38;:::i;:::-;26057:67;26117:6;26109;26103:4;26057:67;:::i;:::-;26151:1;26175:4;26162:17;;26207:2;26199:6;26196:14;26224:1;26219:618;;;;26881:1;26898:6;26895:77;;;26947:9;26942:3;26938:19;26932:26;26923:35;;26895:77;26998:67;27058:6;27051:5;26998:67;:::i;:::-;26992:4;26985:81;26854:222;26189:887;;26219:618;26271:4;26267:9;26259:6;26255:22;26305:37;26337:4;26305:37;:::i;:::-;26364:1;26378:208;26392:7;26389:1;26386:14;26378:208;;;26471:9;26466:3;26462:19;26456:26;26448:6;26441:42;26522:1;26514:6;26510:14;26500:24;;26569:2;26558:9;26554:18;26541:31;;26415:4;26412:1;26408:12;26403:17;;26378:208;;;26614:6;26605:7;26602:19;26599:179;;;26672:9;26667:3;26663:19;26657:26;26715:48;26757:4;26749:6;26745:17;26734:9;26715:48;:::i;:::-;26707:6;26700:64;26622:156;26599:179;26824:1;26820;26812:6;26808:14;26804:22;26798:4;26791:36;26226:611;;;26189:887;;25779:1303;;;25687:1395;;:::o;27088:553::-;27265:4;27303:3;27292:9;27288:19;27280:27;;27317:71;27385:1;27374:9;27370:17;27361:6;27317:71;:::i;:::-;27398:72;27466:2;27455:9;27451:18;27442:6;27398:72;:::i;:::-;27480;27548:2;27537:9;27533:18;27524:6;27480:72;:::i;:::-;27562;27630:2;27619:9;27615:18;27606:6;27562:72;:::i;:::-;27088:553;;;;;;;:::o;27647:180::-;27695:77;27692:1;27685:88;27792:4;27789:1;27782:15;27816:4;27813:1;27806:15;27833:191;27873:3;27892:20;27910:1;27892:20;:::i;:::-;27887:25;;27926:20;27944:1;27926:20;:::i;:::-;27921:25;;27969:1;27966;27962:9;27955:16;;27990:3;27987:1;27984:10;27981:36;;;27997:18;;:::i;:::-;27981:36;27833:191;;;;:::o;28030:634::-;28251:4;28289:2;28278:9;28274:18;28266:26;;28338:9;28332:4;28328:20;28324:1;28313:9;28309:17;28302:47;28366:108;28469:4;28460:6;28366:108;:::i;:::-;28358:116;;28521:9;28515:4;28511:20;28506:2;28495:9;28491:18;28484:48;28549:108;28652:4;28643:6;28549:108;:::i;:::-;28541:116;;28030:634;;;;;:::o;28670:98::-;28721:6;28755:5;28749:12;28739:22;;28670:98;;;:::o;28774:168::-;28857:11;28891:6;28886:3;28879:19;28931:4;28926:3;28922:14;28907:29;;28774:168;;;;:::o;28948:373::-;29034:3;29062:38;29094:5;29062:38;:::i;:::-;29116:70;29179:6;29174:3;29116:70;:::i;:::-;29109:77;;29195:65;29253:6;29248:3;29241:4;29234:5;29230:16;29195:65;:::i;:::-;29285:29;29307:6;29285:29;:::i;:::-;29280:3;29276:39;29269:46;;29038:283;28948:373;;;;:::o;29327:751::-;29550:4;29588:3;29577:9;29573:19;29565:27;;29602:71;29670:1;29659:9;29655:17;29646:6;29602:71;:::i;:::-;29683:72;29751:2;29740:9;29736:18;29727:6;29683:72;:::i;:::-;29765;29833:2;29822:9;29818:18;29809:6;29765:72;:::i;:::-;29847;29915:2;29904:9;29900:18;29891:6;29847:72;:::i;:::-;29967:9;29961:4;29957:20;29951:3;29940:9;29936:19;29929:49;29995:76;30066:4;30057:6;29995:76;:::i;:::-;29987:84;;29327:751;;;;;;;;:::o;30084:141::-;30140:5;30171:6;30165:13;30156:22;;30187:32;30213:5;30187:32;:::i;:::-;30084:141;;;;:::o;30231:349::-;30300:6;30349:2;30337:9;30328:7;30324:23;30320:32;30317:119;;;30355:79;;:::i;:::-;30317:119;30475:1;30500:63;30555:7;30546:6;30535:9;30531:22;30500:63;:::i;:::-;30490:73;;30446:127;30231:349;;;;:::o;30586:1053::-;30909:4;30947:3;30936:9;30932:19;30924:27;;30961:71;31029:1;31018:9;31014:17;31005:6;30961:71;:::i;:::-;31042:72;31110:2;31099:9;31095:18;31086:6;31042:72;:::i;:::-;31161:9;31155:4;31151:20;31146:2;31135:9;31131:18;31124:48;31189:108;31292:4;31283:6;31189:108;:::i;:::-;31181:116;;31344:9;31338:4;31334:20;31329:2;31318:9;31314:18;31307:48;31372:108;31475:4;31466:6;31372:108;:::i;:::-;31364:116;;31528:9;31522:4;31518:20;31512:3;31501:9;31497:19;31490:49;31556:76;31627:4;31618:6;31556:76;:::i;:::-;31548:84;;30586:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1878200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintFungible(address,uint256,uint256)": "infinite",
								"mintNonFungible(address,string)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "786",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_setTokenURI(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 1186,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 364,
									"end": 422,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 364,
									"end": 422,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 364,
									"end": 422,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 364,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 364,
									"end": 422,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 364,
									"end": 422,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 422,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 364,
									"end": 422,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 364,
									"end": 422,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 364,
									"end": 422,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 364,
									"end": 422,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "1E"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "68747470733A2F2F697066732E696F2F697066732F7B69647D2E6A736F6E0000"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1186,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017b8a8423b9774f6429be3d8d1a2429f036fcde274bdee8c77bf45d123666c2d64736f6c63430008160033",
									".code": [
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "4E1273F4"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "4E1273F4"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "58EA82E6"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "F242432A"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "FDD58E"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "7805A6B"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "E89341C"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "2EB2C2D6"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1186,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 563,
											"end": 878,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 563,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 563,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 563,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1017,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1017,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1017,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 430,
											"end": 555,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 430,
											"end": 555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 430,
											"end": 555,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 555,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 430,
											"end": 555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 430,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 430,
											"end": 555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 430,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 430,
											"end": 555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 563,
											"end": 878,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 563,
											"end": 878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 647,
											"end": 654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 667,
											"end": 687,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 667,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 667,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 667,
											"end": 699,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 667,
											"end": 699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 726,
											"end": 746,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 726,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 726,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 726,
											"end": 756,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 726,
											"end": 756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 710,
											"end": 756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 783,
											"end": 790,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 792,
											"end": 797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 777,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 777,
											"end": 805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 777,
											"end": 805,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 829,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 836,
											"end": 844,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 816,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 816,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 816,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 816,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 858,
											"end": 870,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 858,
											"end": 870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 858,
											"end": 870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1077,
											"end": 1090,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1144,
											"end": 1151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1134,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1164,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1117,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1174,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1103,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 555,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 430,
											"end": 555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 523,
											"end": 530,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 532,
											"end": 534,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 536,
											"end": 542,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 517,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 517,
											"end": 547,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 517,
											"end": 547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 430,
											"end": 555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 886,
											"end": 1009,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 886,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 970,
											"end": 980,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 988,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 970,
											"end": 989,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 970,
											"end": 989,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 970,
											"end": 989,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 970,
											"end": 989,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 970,
											"end": 989,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 970,
											"end": 989,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 970,
											"end": 989,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 970,
											"end": 989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 989,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 970,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 1009,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 1009,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 886,
											"end": 1009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3531,
											"end": 3545,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3527,
											"end": 3555,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3692,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3716,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 3740,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3741,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3836,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3824,
											"end": 3864,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3977,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4027,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4013,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3796,
											"end": 4034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 4101,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 4130,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4349,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 4387,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4469,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 4592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4593,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4613,
											"end": 4616,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4609,
											"end": 4625,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4629,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 4760,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 4744,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4875,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4898,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4891,
											"end": 4907,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4888,
											"end": 4913,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4916,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5048,
											"end": 5051,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5043,
											"end": 5046,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 5006,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5195,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 5199,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 5416,
											"end": 5419,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5405,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5389,
											"end": 5406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 5341,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5420,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 6086,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 5432,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5524,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5567,
											"end": 5569,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5553,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5542,
											"end": 5565,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5570,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 5573,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5573,
											"end": 5652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5652,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 5573,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5693,
											"end": 5694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 5763,
											"end": 5770,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5752,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5739,
											"end": 5761,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5718,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 5718,
											"end": 5771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5718,
											"end": 5771,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 5718,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5708,
											"end": 5771,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5708,
											"end": 5771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5664,
											"end": 5781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5848,
											"end": 5850,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5852,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5897,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5871,
											"end": 5877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5868,
											"end": 5898,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5982,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 5865,
											"end": 5982,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5901,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 5901,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 5901,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5901,
											"end": 5980,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 5901,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5982,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 5865,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 6061,
											"end": 6068,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6041,
											"end": 6050,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6037,
											"end": 6059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6006,
											"end": 6069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6069,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 6006,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6069,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 6079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 6086,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 6086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 6086,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 6086,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 6086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 6086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6421,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 6092,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6151,
											"end": 6157,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6200,
											"end": 6202,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6188,
											"end": 6197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6179,
											"end": 6186,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6198,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6168,
											"end": 6287,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6168,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 6168,
											"end": 6287,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 6206,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 6206,
											"end": 6285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6285,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 6206,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6168,
											"end": 6287,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 6168,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 6396,
											"end": 6403,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6385,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6372,
											"end": 6394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6351,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6351,
											"end": 6404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6351,
											"end": 6404,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 6351,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6341,
											"end": 6404,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6341,
											"end": 6404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6297,
											"end": 6414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6421,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6427,
											"end": 6526,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 6427,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6519,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6497,
											"end": 6519,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6497,
											"end": 6519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6427,
											"end": 6526,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6427,
											"end": 6526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6427,
											"end": 6526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6427,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6701,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 6532,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6616,
											"end": 6627,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6645,
											"end": 6648,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6638,
											"end": 6657,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6685,
											"end": 6688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6666,
											"end": 6695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6666,
											"end": 6695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6701,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6953,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6707,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6788,
											"end": 6789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6812,
											"end": 6818,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6809,
											"end": 6810,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6806,
											"end": 6819,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6898,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6892,
											"end": 6895,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6899,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6879,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6869,
											"end": 6880,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6862,
											"end": 6901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6834,
											"end": 6836,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6831,
											"end": 6832,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6827,
											"end": 6837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6822,
											"end": 6837,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6822,
											"end": 6837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 6798,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6942,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 6943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6769,
											"end": 6953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 7336,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 6959,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7047,
											"end": 7050,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 7108,
											"end": 7113,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7075,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 7075,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7075,
											"end": 7114,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 7075,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 7194,
											"end": 7200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7189,
											"end": 7192,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 7130,
											"end": 7201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7201,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 7130,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7123,
											"end": 7201,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7123,
											"end": 7201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7210,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 7268,
											"end": 7274,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7263,
											"end": 7266,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7256,
											"end": 7260,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7210,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 7210,
											"end": 7275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7210,
											"end": 7275,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 7210,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7300,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 7322,
											"end": 7328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7300,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 7300,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7300,
											"end": 7329,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 7300,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7295,
											"end": 7298,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7330,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7284,
											"end": 7330,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7284,
											"end": 7330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 7336,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 7336,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 7336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 7336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 7336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7655,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 7342,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7455,
											"end": 7459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7493,
											"end": 7495,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7478,
											"end": 7496,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7542,
											"end": 7551,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7532,
											"end": 7552,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7517,
											"end": 7526,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7513,
											"end": 7530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7506,
											"end": 7553,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 7643,
											"end": 7647,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7634,
											"end": 7640,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 7570,
											"end": 7648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7648,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 7570,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7648,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7655,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7661,
											"end": 7972,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 7661,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7738,
											"end": 7742,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7846,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7820,
											"end": 7826,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7817,
											"end": 7847,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7814,
											"end": 7870,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7814,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 7814,
											"end": 7870,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7850,
											"end": 7868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7814,
											"end": 7870,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 7814,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7905,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7880,
											"end": 7905,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7880,
											"end": 7905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7954,
											"end": 7958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7950,
											"end": 7965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7942,
											"end": 7965,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7942,
											"end": 7965,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7661,
											"end": 7972,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7661,
											"end": 7972,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7661,
											"end": 7972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7661,
											"end": 7972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7978,
											"end": 8095,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 7978,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8085,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8077,
											"end": 8089,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8828,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 8118,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8214,
											"end": 8219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 8255,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 8312,
											"end": 8318,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 8255,
											"end": 8319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8319,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 8255,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 8239,
											"end": 8320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8320,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 8239,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8230,
											"end": 8320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8230,
											"end": 8320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8345,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8369,
											"end": 8375,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8407,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8396,
											"end": 8401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8392,
											"end": 8408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8385,
											"end": 8408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8385,
											"end": 8408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8456,
											"end": 8460,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8448,
											"end": 8454,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8432,
											"end": 8462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8485,
											"end": 8488,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8489,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8471,
											"end": 8593,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8471,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 8471,
											"end": 8593,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8504,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 8504,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 8504,
											"end": 8583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8504,
											"end": 8583,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 8504,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8471,
											"end": 8593,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 8471,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8625,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8636,
											"end": 8642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8631,
											"end": 8634,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8628,
											"end": 8643,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8711,
											"end": 8714,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8740,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 8773,
											"end": 8776,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8761,
											"end": 8771,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8740,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 8740,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8740,
											"end": 8777,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 8740,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8735,
											"end": 8738,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8811,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8812,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8791,
											"end": 8812,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8791,
											"end": 8812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8678,
											"end": 8822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8657,
											"end": 8660,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 8667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 8602,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8606,
											"end": 8627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8220,
											"end": 8828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8220,
											"end": 8828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8828,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8828,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 9221,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 8851,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 8927,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 8974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8964,
											"end": 8968,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8952,
											"end": 8969,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8948,
											"end": 8975,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 8938,
											"end": 9060,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8979,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 8979,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 8979,
											"end": 9058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8979,
											"end": 9058,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 8979,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 9060,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 8938,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9083,
											"end": 9103,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9121,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 9211,
											"end": 9214,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9203,
											"end": 9209,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9200,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9184,
											"end": 9201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9121,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 9121,
											"end": 9215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9121,
											"end": 9215,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 9121,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 9221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 9221,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 9221,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 9221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 9221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 9221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9534,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 9227,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9288,
											"end": 9292,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9396,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9370,
											"end": 9376,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9364,
											"end": 9420,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9364,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 9364,
											"end": 9420,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9400,
											"end": 9418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9364,
											"end": 9420,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 9364,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 9460,
											"end": 9466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 9438,
											"end": 9467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 9467,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 9438,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9430,
											"end": 9467,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9430,
											"end": 9467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9522,
											"end": 9526,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9516,
											"end": 9520,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9512,
											"end": 9527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9534,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9534,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9534,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9540,
											"end": 9963,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 9540,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9642,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 9658,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 9699,
											"end": 9705,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9658,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 9658,
											"end": 9706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9658,
											"end": 9706,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 9658,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9642,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 9642,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9642,
											"end": 9707,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 9642,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9633,
											"end": 9707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9633,
											"end": 9707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9730,
											"end": 9736,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9723,
											"end": 9728,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9716,
											"end": 9737,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9768,
											"end": 9772,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9761,
											"end": 9766,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9757,
											"end": 9773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9806,
											"end": 9809,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9797,
											"end": 9803,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 9795,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9788,
											"end": 9804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9785,
											"end": 9810,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9782,
											"end": 9894,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9782,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 9782,
											"end": 9894,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9813,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 9813,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 9813,
											"end": 9892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9813,
											"end": 9892,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 9813,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9782,
											"end": 9894,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 9782,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9945,
											"end": 9948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9940,
											"end": 9943,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 9903,
											"end": 9957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9957,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 9903,
											"end": 9957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9623,
											"end": 9963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9540,
											"end": 9963,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9540,
											"end": 9963,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9540,
											"end": 9963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9540,
											"end": 9963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9540,
											"end": 9963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9540,
											"end": 9963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10320,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 9982,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10037,
											"end": 10042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10086,
											"end": 10089,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10079,
											"end": 10083,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10071,
											"end": 10077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10063,
											"end": 10090,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 10053,
											"end": 10175,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10094,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 10094,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 10094,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10094,
											"end": 10173,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 10094,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10175,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 10053,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10198,
											"end": 10218,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10236,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 10310,
											"end": 10313,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10302,
											"end": 10308,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10295,
											"end": 10299,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10287,
											"end": 10293,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10283,
											"end": 10300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10236,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 10236,
											"end": 10314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10236,
											"end": 10314,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 10236,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10314,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10043,
											"end": 10320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10320,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10320,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10480,
											"end": 10486,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10494,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10502,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10510,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10512,
											"end": 10518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10561,
											"end": 10564,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10540,
											"end": 10547,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10559,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10565,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10568,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 10568,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 10568,
											"end": 10647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10568,
											"end": 10647,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 10568,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 10529,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 10758,
											"end": 10765,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10738,
											"end": 10747,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 10713,
											"end": 10766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 10766,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 10713,
											"end": 10766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10703,
											"end": 10766,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10703,
											"end": 10766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 10776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10815,
											"end": 10817,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10841,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10883,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10866,
											"end": 10875,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10862,
											"end": 10884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10841,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 10841,
											"end": 10894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10841,
											"end": 10894,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 10841,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10831,
											"end": 10894,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10831,
											"end": 10894,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 10904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10971,
											"end": 10973,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10960,
											"end": 10969,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10943,
											"end": 10975,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11002,
											"end": 11020,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10994,
											"end": 11000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10991,
											"end": 11021,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10988,
											"end": 11105,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10988,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 10988,
											"end": 11105,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11024,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 11024,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 11024,
											"end": 11103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11024,
											"end": 11103,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 11024,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10988,
											"end": 11105,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 10988,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11129,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 11199,
											"end": 11206,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11190,
											"end": 11196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11179,
											"end": 11188,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11175,
											"end": 11197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11129,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 11129,
											"end": 11207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11129,
											"end": 11207,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 11129,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11119,
											"end": 11207,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11119,
											"end": 11207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10914,
											"end": 11217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11284,
											"end": 11286,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11273,
											"end": 11282,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11269,
											"end": 11287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11256,
											"end": 11288,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11315,
											"end": 11333,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11307,
											"end": 11313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11304,
											"end": 11334,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11418,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 11301,
											"end": 11418,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11337,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 11337,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 11337,
											"end": 11416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11337,
											"end": 11416,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 11337,
											"end": 11416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11418,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 11301,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11442,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 11512,
											"end": 11519,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11503,
											"end": 11509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11492,
											"end": 11501,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11488,
											"end": 11510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11442,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 11442,
											"end": 11520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11442,
											"end": 11520,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 11442,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11432,
											"end": 11520,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11432,
											"end": 11520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11227,
											"end": 11530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11597,
											"end": 11600,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11586,
											"end": 11595,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11569,
											"end": 11602,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11629,
											"end": 11647,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11621,
											"end": 11627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11618,
											"end": 11648,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11615,
											"end": 11732,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11615,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 11615,
											"end": 11732,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 11651,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 11651,
											"end": 11730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 11730,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 11651,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11615,
											"end": 11732,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 11615,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11756,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 11810,
											"end": 11817,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11807,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11790,
											"end": 11799,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11786,
											"end": 11808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11756,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 11756,
											"end": 11818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11756,
											"end": 11818,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 11756,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 11818,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 11818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 11835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12152,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 11841,
											"end": 12152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11918,
											"end": 11922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12000,
											"end": 12006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11997,
											"end": 12027,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11994,
											"end": 12050,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11994,
											"end": 12050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 11994,
											"end": 12050,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12030,
											"end": 12048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11994,
											"end": 12050,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 11994,
											"end": 12050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12084,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12072,
											"end": 12078,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12068,
											"end": 12085,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12060,
											"end": 12085,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12060,
											"end": 12085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12140,
											"end": 12144,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12134,
											"end": 12138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12130,
											"end": 12145,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12122,
											"end": 12145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12122,
											"end": 12145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12885,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 12175,
											"end": 12885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12271,
											"end": 12276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12296,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 12312,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12312,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 12312,
											"end": 12376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12312,
											"end": 12376,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 12312,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12296,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 12296,
											"end": 12377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12296,
											"end": 12377,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 12296,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12287,
											"end": 12377,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12287,
											"end": 12377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12397,
											"end": 12402,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12426,
											"end": 12432,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12419,
											"end": 12424,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12412,
											"end": 12433,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12464,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12453,
											"end": 12458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12449,
											"end": 12465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12442,
											"end": 12465,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12442,
											"end": 12465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12517,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12505,
											"end": 12511,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12501,
											"end": 12518,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12493,
											"end": 12499,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12519,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12542,
											"end": 12545,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12534,
											"end": 12540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12531,
											"end": 12546,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12650,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 12528,
											"end": 12650,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12561,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 12561,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 12561,
											"end": 12640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12561,
											"end": 12640,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 12561,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12650,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 12528,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12676,
											"end": 12682,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12693,
											"end": 12699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12691,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 12700,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12768,
											"end": 12771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12797,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 12830,
											"end": 12833,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12818,
											"end": 12828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12797,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 12797,
											"end": 12834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12797,
											"end": 12834,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 12797,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12795,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12785,
											"end": 12835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12864,
											"end": 12868,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12859,
											"end": 12862,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12855,
											"end": 12869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12869,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12735,
											"end": 12879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12719,
											"end": 12723,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12714,
											"end": 12717,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12710,
											"end": 12724,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12724,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 12659,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12663,
											"end": 12684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12885,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12885,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 13278,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 12908,
											"end": 13278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12984,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13028,
											"end": 13031,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13021,
											"end": 13025,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13013,
											"end": 13019,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13009,
											"end": 13026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13005,
											"end": 13032,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12995,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 12995,
											"end": 13117,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13036,
											"end": 13115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 13036,
											"end": 13115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 13036,
											"end": 13115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13036,
											"end": 13115,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 13036,
											"end": 13115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12995,
											"end": 13117,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 12995,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13153,
											"end": 13159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13140,
											"end": 13160,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 13178,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 13268,
											"end": 13271,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13253,
											"end": 13257,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13245,
											"end": 13251,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13241,
											"end": 13258,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13178,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 13178,
											"end": 13272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13178,
											"end": 13272,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 13178,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13169,
											"end": 13272,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13169,
											"end": 13272,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12985,
											"end": 13278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 13278,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 13278,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 13278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 13278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 13278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 14178,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 13284,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13402,
											"end": 13408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13410,
											"end": 13416,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13459,
											"end": 13461,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13447,
											"end": 13456,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13438,
											"end": 13445,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13434,
											"end": 13457,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13430,
											"end": 13462,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13546,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 13427,
											"end": 13546,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13465,
											"end": 13544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 13465,
											"end": 13544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 13465,
											"end": 13544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13465,
											"end": 13544,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 13465,
											"end": 13544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13546,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 13427,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13613,
											"end": 13614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13602,
											"end": 13611,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13598,
											"end": 13615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13585,
											"end": 13616,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 13643,
											"end": 13661,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13635,
											"end": 13641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13632,
											"end": 13662,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 13746,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 13629,
											"end": 13746,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13665,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 13665,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 13665,
											"end": 13744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13665,
											"end": 13744,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 13665,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 13746,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 13629,
											"end": 13746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 13840,
											"end": 13847,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13831,
											"end": 13837,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13820,
											"end": 13829,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13816,
											"end": 13838,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 13770,
											"end": 13848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13848,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 13770,
											"end": 13848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13760,
											"end": 13848,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13760,
											"end": 13848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13556,
											"end": 13858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13925,
											"end": 13927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13914,
											"end": 13923,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13910,
											"end": 13928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13897,
											"end": 13929,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 13974,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13948,
											"end": 13954,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13945,
											"end": 13975,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13942,
											"end": 14059,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13942,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 13942,
											"end": 14059,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13978,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 13978,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 13978,
											"end": 14057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13978,
											"end": 14057,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 13978,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13942,
											"end": 14059,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 13942,
											"end": 14059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14083,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 14153,
											"end": 14160,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14144,
											"end": 14150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14133,
											"end": 14142,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14129,
											"end": 14151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14083,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 14083,
											"end": 14161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14083,
											"end": 14161,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 14083,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14073,
											"end": 14161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14073,
											"end": 14161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13868,
											"end": 14171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 14178,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 14178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 14178,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 14178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 14178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 14178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14298,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 14184,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14251,
											"end": 14257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14285,
											"end": 14290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14279,
											"end": 14291,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14269,
											"end": 14291,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14269,
											"end": 14291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14298,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14488,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 14304,
											"end": 14488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14403,
											"end": 14414,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14437,
											"end": 14443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14432,
											"end": 14435,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14425,
											"end": 14444,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14477,
											"end": 14481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14472,
											"end": 14475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14468,
											"end": 14482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14488,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14494,
											"end": 14626,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 14494,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14561,
											"end": 14565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14584,
											"end": 14587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14576,
											"end": 14587,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14576,
											"end": 14587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14614,
											"end": 14618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14605,
											"end": 14619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 14619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 14619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14494,
											"end": 14626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14494,
											"end": 14626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14494,
											"end": 14626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14494,
											"end": 14626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14632,
											"end": 14740,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 14632,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14709,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 14727,
											"end": 14732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14709,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 14709,
											"end": 14733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14709,
											"end": 14733,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 14709,
											"end": 14733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14704,
											"end": 14707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14697,
											"end": 14734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14632,
											"end": 14740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14632,
											"end": 14740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14632,
											"end": 14740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14925,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 14746,
											"end": 14925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14815,
											"end": 14825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14836,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 14878,
											"end": 14881,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14870,
											"end": 14876,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 14836,
											"end": 14882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14882,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 14836,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14914,
											"end": 14918,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14909,
											"end": 14912,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14905,
											"end": 14919,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14891,
											"end": 14919,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14891,
											"end": 14919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14925,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14925,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14931,
											"end": 15044,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 14931,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15001,
											"end": 15005,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15033,
											"end": 15037,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15028,
											"end": 15031,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15024,
											"end": 15038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15016,
											"end": 15038,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15016,
											"end": 15038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14931,
											"end": 15044,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14931,
											"end": 15044,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14931,
											"end": 15044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14931,
											"end": 15044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15080,
											"end": 15812,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 15080,
											"end": 15812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15199,
											"end": 15202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15228,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 15276,
											"end": 15281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15228,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 15228,
											"end": 15282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15228,
											"end": 15282,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 15228,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15298,
											"end": 15384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 15377,
											"end": 15383,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15372,
											"end": 15375,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15298,
											"end": 15384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 15298,
											"end": 15384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15298,
											"end": 15384,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 15298,
											"end": 15384,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15384,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 15458,
											"end": 15463,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 15408,
											"end": 15464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15487,
											"end": 15494,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15528,
											"end": 15534,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15522,
											"end": 15535,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15604,
											"end": 15610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15598,
											"end": 15611,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15631,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 15690,
											"end": 15693,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15675,
											"end": 15688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15631,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 15631,
											"end": 15694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15631,
											"end": 15694,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 15631,
											"end": 15694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15624,
											"end": 15694,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 15624,
											"end": 15694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15717,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 15770,
											"end": 15776,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15717,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 15717,
											"end": 15777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15717,
											"end": 15777,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 15717,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15563,
											"end": 15787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15550,
											"end": 15551,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15547,
											"end": 15548,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15543,
											"end": 15552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15538,
											"end": 15552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15538,
											"end": 15552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 15503,
											"end": 15787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15507,
											"end": 15521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15803,
											"end": 15806,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15796,
											"end": 15806,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15796,
											"end": 15806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15204,
											"end": 15812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15204,
											"end": 15812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15204,
											"end": 15812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15080,
											"end": 15812,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15080,
											"end": 15812,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15080,
											"end": 15812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15080,
											"end": 15812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15080,
											"end": 15812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 16191,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 15818,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15961,
											"end": 15965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15999,
											"end": 16001,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15988,
											"end": 15997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15976,
											"end": 16002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15976,
											"end": 16002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16048,
											"end": 16057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16042,
											"end": 16046,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16038,
											"end": 16058,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16034,
											"end": 16035,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16023,
											"end": 16032,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16019,
											"end": 16036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16012,
											"end": 16059,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16076,
											"end": 16184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 16179,
											"end": 16183,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16176,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16076,
											"end": 16184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 16076,
											"end": 16184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16076,
											"end": 16184,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 16076,
											"end": 16184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16068,
											"end": 16184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16068,
											"end": 16184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 16191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 16191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 16191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 16191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 16191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16197,
											"end": 16816,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 16197,
											"end": 16816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16274,
											"end": 16280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16282,
											"end": 16288,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16290,
											"end": 16296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16339,
											"end": 16341,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 16327,
											"end": 16336,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16318,
											"end": 16325,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16314,
											"end": 16337,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16342,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16307,
											"end": 16426,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16307,
											"end": 16426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 16307,
											"end": 16426,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16345,
											"end": 16424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 16345,
											"end": 16424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 16345,
											"end": 16424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16345,
											"end": 16424,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 16345,
											"end": 16424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16307,
											"end": 16426,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 16307,
											"end": 16426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16465,
											"end": 16466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16490,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 16535,
											"end": 16542,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16526,
											"end": 16532,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16515,
											"end": 16524,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16511,
											"end": 16533,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16490,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 16490,
											"end": 16543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16490,
											"end": 16543,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 16490,
											"end": 16543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16480,
											"end": 16543,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16480,
											"end": 16543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16436,
											"end": 16553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16592,
											"end": 16594,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16618,
											"end": 16671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 16663,
											"end": 16670,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16654,
											"end": 16660,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16643,
											"end": 16652,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16639,
											"end": 16661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16618,
											"end": 16671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 16618,
											"end": 16671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16618,
											"end": 16671,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 16618,
											"end": 16671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16608,
											"end": 16671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16608,
											"end": 16671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16563,
											"end": 16681,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16720,
											"end": 16722,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16746,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 16791,
											"end": 16798,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16782,
											"end": 16788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16771,
											"end": 16780,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16767,
											"end": 16789,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16746,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 16746,
											"end": 16799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16746,
											"end": 16799,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 16746,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16736,
											"end": 16799,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16736,
											"end": 16799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16691,
											"end": 16809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16197,
											"end": 16816,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16197,
											"end": 16816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16197,
											"end": 16816,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16197,
											"end": 16816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16197,
											"end": 16816,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16197,
											"end": 16816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16822,
											"end": 16938,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 16822,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 16907,
											"end": 16912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 16892,
											"end": 16913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16913,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 16892,
											"end": 16913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16885,
											"end": 16890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 16872,
											"end": 16932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 16872,
											"end": 16932,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16928,
											"end": 16929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16925,
											"end": 16926,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16918,
											"end": 16930,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16872,
											"end": 16932,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 16872,
											"end": 16932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16822,
											"end": 16938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16822,
											"end": 16938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 17077,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 16944,
											"end": 17077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16987,
											"end": 16992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17025,
											"end": 17031,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17012,
											"end": 17032,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 17003,
											"end": 17032,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17003,
											"end": 17032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 17065,
											"end": 17070,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 17041,
											"end": 17071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17071,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 17041,
											"end": 17071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 17077,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 17077,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 17077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 17077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 17077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17551,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 17083,
											"end": 17551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17148,
											"end": 17154,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17156,
											"end": 17162,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17205,
											"end": 17207,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17193,
											"end": 17202,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17184,
											"end": 17191,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17180,
											"end": 17203,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17176,
											"end": 17208,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17173,
											"end": 17292,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17173,
											"end": 17292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 17173,
											"end": 17292,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17211,
											"end": 17290,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 17211,
											"end": 17290,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 17211,
											"end": 17290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17211,
											"end": 17290,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 17211,
											"end": 17290,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17173,
											"end": 17292,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 17173,
											"end": 17292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17331,
											"end": 17332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17356,
											"end": 17409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 17401,
											"end": 17408,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17392,
											"end": 17398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17381,
											"end": 17390,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17377,
											"end": 17399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17356,
											"end": 17409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 17356,
											"end": 17409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17356,
											"end": 17409,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 17356,
											"end": 17409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17346,
											"end": 17409,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17346,
											"end": 17409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17302,
											"end": 17419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17458,
											"end": 17460,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17484,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 17526,
											"end": 17533,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17517,
											"end": 17523,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17506,
											"end": 17515,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17502,
											"end": 17524,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17484,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 17484,
											"end": 17534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17484,
											"end": 17534,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 17484,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17474,
											"end": 17534,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17474,
											"end": 17534,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17429,
											"end": 17544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17551,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17551,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17551,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 18031,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 17557,
											"end": 18031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17625,
											"end": 17631,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17633,
											"end": 17639,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17682,
											"end": 17684,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17670,
											"end": 17679,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17661,
											"end": 17668,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17657,
											"end": 17680,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17653,
											"end": 17685,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17688,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 17688,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 17688,
											"end": 17767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17688,
											"end": 17767,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 17688,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 17650,
											"end": 17769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17808,
											"end": 17809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17833,
											"end": 17886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 17878,
											"end": 17885,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17869,
											"end": 17875,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17858,
											"end": 17867,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17854,
											"end": 17876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17833,
											"end": 17886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 17833,
											"end": 17886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17833,
											"end": 17886,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 17833,
											"end": 17886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17823,
											"end": 17886,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17823,
											"end": 17886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17779,
											"end": 17896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17935,
											"end": 17937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17961,
											"end": 18014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 18006,
											"end": 18013,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17997,
											"end": 18003,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17986,
											"end": 17995,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17982,
											"end": 18004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17961,
											"end": 18014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 17961,
											"end": 18014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17961,
											"end": 18014,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 17961,
											"end": 18014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17951,
											"end": 18014,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17951,
											"end": 18014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17906,
											"end": 18024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 18031,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 18031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 18031,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 18031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 18031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 18031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18141,
											"end": 18147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18149,
											"end": 18155,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18157,
											"end": 18163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18165,
											"end": 18171,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18173,
											"end": 18179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18222,
											"end": 18225,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 18210,
											"end": 18219,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 18201,
											"end": 18208,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 18197,
											"end": 18220,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18193,
											"end": 18226,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 18190,
											"end": 18310,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18190,
											"end": 18310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 18190,
											"end": 18310,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18229,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 18229,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 18229,
											"end": 18308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18229,
											"end": 18308,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 18229,
											"end": 18308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18190,
											"end": 18310,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 18190,
											"end": 18310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18349,
											"end": 18350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18374,
											"end": 18427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 18419,
											"end": 18426,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 18410,
											"end": 18416,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18399,
											"end": 18408,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 18395,
											"end": 18417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18374,
											"end": 18427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 18374,
											"end": 18427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18374,
											"end": 18427,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 18374,
											"end": 18427,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18364,
											"end": 18427,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 18364,
											"end": 18427,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18320,
											"end": 18437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18476,
											"end": 18478,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18502,
											"end": 18555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 18547,
											"end": 18554,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 18538,
											"end": 18544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18527,
											"end": 18536,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 18523,
											"end": 18545,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18502,
											"end": 18555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 18502,
											"end": 18555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18502,
											"end": 18555,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 18502,
											"end": 18555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18492,
											"end": 18555,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 18492,
											"end": 18555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18447,
											"end": 18565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18604,
											"end": 18606,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18630,
											"end": 18683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 18675,
											"end": 18682,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 18666,
											"end": 18672,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18655,
											"end": 18664,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 18651,
											"end": 18673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18630,
											"end": 18683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 18630,
											"end": 18683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18630,
											"end": 18683,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 18630,
											"end": 18683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18620,
											"end": 18683,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18620,
											"end": 18683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18575,
											"end": 18693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18732,
											"end": 18734,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 18758,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 18803,
											"end": 18810,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 18794,
											"end": 18800,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18783,
											"end": 18792,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 18779,
											"end": 18801,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18758,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 18758,
											"end": 18811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18758,
											"end": 18811,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 18758,
											"end": 18811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18748,
											"end": 18811,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18748,
											"end": 18811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18703,
											"end": 18821,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18888,
											"end": 18891,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 18877,
											"end": 18886,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 18873,
											"end": 18892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18860,
											"end": 18893,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 18920,
											"end": 18938,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18912,
											"end": 18918,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18909,
											"end": 18939,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 18906,
											"end": 19023,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18906,
											"end": 19023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 18906,
											"end": 19023,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18942,
											"end": 19021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 18942,
											"end": 19021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 18942,
											"end": 19021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18942,
											"end": 19021,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 18942,
											"end": 19021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18906,
											"end": 19023,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 18906,
											"end": 19023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 19101,
											"end": 19108,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 19092,
											"end": 19098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19081,
											"end": 19090,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 19077,
											"end": 19099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 19047,
											"end": 19109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19109,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 19047,
											"end": 19109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19037,
											"end": 19109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18831,
											"end": 19119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18037,
											"end": 19126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19132,
											"end": 19280,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 19132,
											"end": 19280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19234,
											"end": 19245,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19271,
											"end": 19274,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19256,
											"end": 19274,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19256,
											"end": 19274,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19132,
											"end": 19280,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19132,
											"end": 19280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19132,
											"end": 19280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19132,
											"end": 19280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19132,
											"end": 19280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19676,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 19286,
											"end": 19676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19392,
											"end": 19395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19420,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 19453,
											"end": 19458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19420,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 19420,
											"end": 19459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19420,
											"end": 19459,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 19420,
											"end": 19459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19475,
											"end": 19564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 19557,
											"end": 19563,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19552,
											"end": 19555,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19475,
											"end": 19564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 19475,
											"end": 19564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19475,
											"end": 19564,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 19475,
											"end": 19564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19468,
											"end": 19564,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19468,
											"end": 19564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19573,
											"end": 19638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 19631,
											"end": 19637,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19626,
											"end": 19629,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19619,
											"end": 19623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19612,
											"end": 19617,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19608,
											"end": 19624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19573,
											"end": 19638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 19573,
											"end": 19638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19573,
											"end": 19638,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 19573,
											"end": 19638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19663,
											"end": 19669,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19658,
											"end": 19661,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19654,
											"end": 19670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19647,
											"end": 19670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19647,
											"end": 19670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19396,
											"end": 19676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19676,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19676,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19682,
											"end": 19862,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 19682,
											"end": 19862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19730,
											"end": 19807,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19727,
											"end": 19728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19720,
											"end": 19808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19827,
											"end": 19831,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 19824,
											"end": 19825,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19817,
											"end": 19832,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19851,
											"end": 19855,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 19848,
											"end": 19849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19841,
											"end": 19856,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19868,
											"end": 20188,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 19868,
											"end": 20188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19912,
											"end": 19918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19949,
											"end": 19950,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 19943,
											"end": 19947,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19939,
											"end": 19951,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 19929,
											"end": 19951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19929,
											"end": 19951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19996,
											"end": 19997,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 19990,
											"end": 19994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19986,
											"end": 19998,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20017,
											"end": 20035,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20007,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 20007,
											"end": 20088,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20073,
											"end": 20077,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 20065,
											"end": 20071,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20061,
											"end": 20078,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20051,
											"end": 20078,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20051,
											"end": 20078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20007,
											"end": 20088,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 20007,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20135,
											"end": 20137,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20127,
											"end": 20133,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20124,
											"end": 20138,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 20104,
											"end": 20122,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20101,
											"end": 20139,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20098,
											"end": 20182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 20098,
											"end": 20182,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20154,
											"end": 20172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 20154,
											"end": 20172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 20154,
											"end": 20172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20154,
											"end": 20172,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 20154,
											"end": 20172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20098,
											"end": 20182,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 20098,
											"end": 20182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19919,
											"end": 20188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19868,
											"end": 20188,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19868,
											"end": 20188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19868,
											"end": 20188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19868,
											"end": 20188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20194,
											"end": 20335,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 20194,
											"end": 20335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20243,
											"end": 20247,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20266,
											"end": 20269,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20258,
											"end": 20269,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20258,
											"end": 20269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20289,
											"end": 20292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20286,
											"end": 20287,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20279,
											"end": 20293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20323,
											"end": 20327,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20320,
											"end": 20321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20310,
											"end": 20328,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 20302,
											"end": 20328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20302,
											"end": 20328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20194,
											"end": 20335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20194,
											"end": 20335,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20194,
											"end": 20335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20194,
											"end": 20335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20365,
											"end": 21239,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 20365,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20468,
											"end": 20471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20505,
											"end": 20510,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20499,
											"end": 20511,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 20534,
											"end": 20570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 20560,
											"end": 20569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20534,
											"end": 20570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 20534,
											"end": 20570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20534,
											"end": 20570,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 20534,
											"end": 20570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20586,
											"end": 20675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 20668,
											"end": 20674,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20663,
											"end": 20666,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20586,
											"end": 20675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 20586,
											"end": 20675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20586,
											"end": 20675,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 20586,
											"end": 20675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20579,
											"end": 20675,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 20579,
											"end": 20675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20706,
											"end": 20707,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20695,
											"end": 20704,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20691,
											"end": 20708,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20722,
											"end": 20723,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20717,
											"end": 20883,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20717,
											"end": 20883,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20717,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 20717,
											"end": 20883,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20897,
											"end": 20898,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20892,
											"end": 21233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20892,
											"end": 21233,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20892,
											"end": 21233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 20892,
											"end": 21233,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20684,
											"end": 21233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 20684,
											"end": 21233,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20717,
											"end": 20883,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 20717,
											"end": 20883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20801,
											"end": 20805,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 20797,
											"end": 20806,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 20786,
											"end": 20795,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20782,
											"end": 20807,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20777,
											"end": 20780,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20770,
											"end": 20808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20863,
											"end": 20869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20856,
											"end": 20870,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20849,
											"end": 20871,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20841,
											"end": 20847,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20837,
											"end": 20872,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 20832,
											"end": 20835,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20828,
											"end": 20873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20821,
											"end": 20873,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20821,
											"end": 20873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20717,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 20717,
											"end": 20883,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20892,
											"end": 21233,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 20892,
											"end": 21233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20959,
											"end": 20997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 20991,
											"end": 20996,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20959,
											"end": 20997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 20959,
											"end": 20997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20959,
											"end": 20997,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 20959,
											"end": 20997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21019,
											"end": 21020,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21047,
											"end": 21053,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21044,
											"end": 21045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21041,
											"end": 21054,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21121,
											"end": 21128,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21115,
											"end": 21129,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 21111,
											"end": 21112,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21106,
											"end": 21109,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 21102,
											"end": 21113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21095,
											"end": 21130,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21171,
											"end": 21172,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 21162,
											"end": 21169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21158,
											"end": 21173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21147,
											"end": 21173,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21147,
											"end": 21173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21069,
											"end": 21073,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21066,
											"end": 21067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21062,
											"end": 21074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21057,
											"end": 21074,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21057,
											"end": 21074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 21033,
											"end": 21187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21216,
											"end": 21222,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21211,
											"end": 21214,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 21207,
											"end": 21223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21200,
											"end": 21223,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 21200,
											"end": 21223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20899,
											"end": 21233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20899,
											"end": 21233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20684,
											"end": 21233,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 20684,
											"end": 21233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20684,
											"end": 21233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20472,
											"end": 21239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20472,
											"end": 21239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20365,
											"end": 21239,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20365,
											"end": 21239,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20365,
											"end": 21239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20365,
											"end": 21239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20365,
											"end": 21239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21245,
											"end": 21674,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 21245,
											"end": 21674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21422,
											"end": 21425,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21444,
											"end": 21539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 21535,
											"end": 21538,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21526,
											"end": 21532,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21444,
											"end": 21539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 21444,
											"end": 21539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21444,
											"end": 21539,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 21444,
											"end": 21539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21437,
											"end": 21539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21437,
											"end": 21539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21556,
											"end": 21648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 21644,
											"end": 21647,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21635,
											"end": 21641,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21556,
											"end": 21648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 21556,
											"end": 21648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21556,
											"end": 21648,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 21556,
											"end": 21648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21549,
											"end": 21648,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21549,
											"end": 21648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21665,
											"end": 21668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21658,
											"end": 21668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21658,
											"end": 21668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21245,
											"end": 21674,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21245,
											"end": 21674,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21245,
											"end": 21674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21245,
											"end": 21674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21245,
											"end": 21674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21245,
											"end": 21674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21680,
											"end": 21798,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 21680,
											"end": 21798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21767,
											"end": 21791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 21785,
											"end": 21790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21767,
											"end": 21791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 21767,
											"end": 21791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21767,
											"end": 21791,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 21767,
											"end": 21791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21762,
											"end": 21765,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21755,
											"end": 21792,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21680,
											"end": 21798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21680,
											"end": 21798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21680,
											"end": 21798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21804,
											"end": 22136,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 21804,
											"end": 22136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21925,
											"end": 21929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21963,
											"end": 21965,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21952,
											"end": 21961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21948,
											"end": 21966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21940,
											"end": 21966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21940,
											"end": 21966,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21976,
											"end": 22047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 22044,
											"end": 22045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22033,
											"end": 22042,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22029,
											"end": 22046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22020,
											"end": 22026,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21976,
											"end": 22047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 21976,
											"end": 22047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21976,
											"end": 22047,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 21976,
											"end": 22047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22057,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 22125,
											"end": 22127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22114,
											"end": 22123,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22110,
											"end": 22128,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22101,
											"end": 22107,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22057,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 22057,
											"end": 22129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22057,
											"end": 22129,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 22057,
											"end": 22129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21804,
											"end": 22136,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21804,
											"end": 22136,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21804,
											"end": 22136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21804,
											"end": 22136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21804,
											"end": 22136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21804,
											"end": 22136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22142,
											"end": 22474,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 22142,
											"end": 22474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22263,
											"end": 22267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22301,
											"end": 22303,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22290,
											"end": 22299,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22286,
											"end": 22304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22278,
											"end": 22304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22278,
											"end": 22304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22314,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 22382,
											"end": 22383,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22371,
											"end": 22380,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22367,
											"end": 22384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22358,
											"end": 22364,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22314,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 22314,
											"end": 22385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22314,
											"end": 22385,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 22314,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22395,
											"end": 22467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 22463,
											"end": 22465,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22452,
											"end": 22461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22448,
											"end": 22466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22439,
											"end": 22445,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22395,
											"end": 22467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 22395,
											"end": 22467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22395,
											"end": 22467,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 22395,
											"end": 22467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22142,
											"end": 22474,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22142,
											"end": 22474,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22142,
											"end": 22474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22142,
											"end": 22474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22142,
											"end": 22474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22142,
											"end": 22474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22480,
											"end": 22660,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 22480,
											"end": 22660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22528,
											"end": 22605,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22525,
											"end": 22526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22518,
											"end": 22606,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22625,
											"end": 22629,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 22622,
											"end": 22623,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 22615,
											"end": 22630,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22649,
											"end": 22653,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22646,
											"end": 22647,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22639,
											"end": 22654,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 22666,
											"end": 22888,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 22666,
											"end": 22888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22759,
											"end": 22763,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22797,
											"end": 22799,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22786,
											"end": 22795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22782,
											"end": 22800,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22774,
											"end": 22800,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22774,
											"end": 22800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22810,
											"end": 22881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 22878,
											"end": 22879,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22867,
											"end": 22876,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22863,
											"end": 22880,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22854,
											"end": 22860,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22810,
											"end": 22881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 22810,
											"end": 22881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22810,
											"end": 22881,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 22810,
											"end": 22881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22666,
											"end": 22888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22666,
											"end": 22888,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22666,
											"end": 22888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22666,
											"end": 22888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22666,
											"end": 22888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22894,
											"end": 22987,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 22894,
											"end": 22987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22931,
											"end": 22937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22978,
											"end": 22980,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22973,
											"end": 22975,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 22966,
											"end": 22971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22962,
											"end": 22976,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22958,
											"end": 22981,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 22948,
											"end": 22981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22948,
											"end": 22981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22894,
											"end": 22987,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22894,
											"end": 22987,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22894,
											"end": 22987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22894,
											"end": 22987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22993,
											"end": 23100,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 22993,
											"end": 23100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23037,
											"end": 23045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23087,
											"end": 23092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23081,
											"end": 23085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23077,
											"end": 23093,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 23056,
											"end": 23093,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23056,
											"end": 23093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22993,
											"end": 23100,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22993,
											"end": 23100,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22993,
											"end": 23100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22993,
											"end": 23100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22993,
											"end": 23100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23106,
											"end": 23499,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 23106,
											"end": 23499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23175,
											"end": 23181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23225,
											"end": 23226,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 23213,
											"end": 23223,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23227,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 23248,
											"end": 23345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 23278,
											"end": 23344,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23267,
											"end": 23276,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23248,
											"end": 23345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 23248,
											"end": 23345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23248,
											"end": 23345,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 23248,
											"end": 23345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23366,
											"end": 23405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 23396,
											"end": 23404,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23385,
											"end": 23394,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23366,
											"end": 23405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 23366,
											"end": 23405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23366,
											"end": 23405,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 23366,
											"end": 23405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23354,
											"end": 23405,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 23354,
											"end": 23405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23438,
											"end": 23442,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23434,
											"end": 23443,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 23427,
											"end": 23432,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23423,
											"end": 23444,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23414,
											"end": 23444,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23414,
											"end": 23444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23487,
											"end": 23491,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23477,
											"end": 23485,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23473,
											"end": 23492,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23466,
											"end": 23471,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23463,
											"end": 23493,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 23453,
											"end": 23493,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23453,
											"end": 23493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23182,
											"end": 23499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23182,
											"end": 23499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23106,
											"end": 23499,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23106,
											"end": 23499,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23106,
											"end": 23499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23106,
											"end": 23499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23106,
											"end": 23499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23106,
											"end": 23499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23505,
											"end": 23565,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 23505,
											"end": 23565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23533,
											"end": 23536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23554,
											"end": 23559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23547,
											"end": 23559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23547,
											"end": 23559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23505,
											"end": 23565,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23505,
											"end": 23565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23505,
											"end": 23565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23505,
											"end": 23565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23571,
											"end": 23713,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 23571,
											"end": 23713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23621,
											"end": 23630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23654,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 23672,
											"end": 23706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 23681,
											"end": 23705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 23699,
											"end": 23704,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23681,
											"end": 23705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 23681,
											"end": 23705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23681,
											"end": 23705,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 23681,
											"end": 23705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23672,
											"end": 23706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 23672,
											"end": 23706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23672,
											"end": 23706,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 23672,
											"end": 23706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23654,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 23654,
											"end": 23707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23654,
											"end": 23707,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 23654,
											"end": 23707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23641,
											"end": 23707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23641,
											"end": 23707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23571,
											"end": 23713,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23571,
											"end": 23713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23571,
											"end": 23713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23571,
											"end": 23713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23719,
											"end": 23794,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 23719,
											"end": 23794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23762,
											"end": 23765,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23776,
											"end": 23788,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23776,
											"end": 23788,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23719,
											"end": 23794,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23719,
											"end": 23794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23719,
											"end": 23794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23719,
											"end": 23794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23800,
											"end": 24069,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 23800,
											"end": 24069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 23941,
											"end": 23948,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 23910,
											"end": 23949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23971,
											"end": 24062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 24020,
											"end": 24061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 24044,
											"end": 24060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24020,
											"end": 24061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 24020,
											"end": 24061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24020,
											"end": 24061,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 24020,
											"end": 24061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24012,
											"end": 24018,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24005,
											"end": 24009,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23999,
											"end": 24010,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 23971,
											"end": 24062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 23971,
											"end": 24062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23971,
											"end": 24062,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 23971,
											"end": 24062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23965,
											"end": 23969,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24063,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 23876,
											"end": 24069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23800,
											"end": 24069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23800,
											"end": 24069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23800,
											"end": 24069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23800,
											"end": 24069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24075,
											"end": 24148,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 24075,
											"end": 24148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24120,
											"end": 24123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24075,
											"end": 24148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24154,
											"end": 24343,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 24154,
											"end": 24343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24231,
											"end": 24263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 24231,
											"end": 24263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 24231,
											"end": 24263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24231,
											"end": 24263,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 24231,
											"end": 24263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24272,
											"end": 24337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 24330,
											"end": 24336,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24322,
											"end": 24328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24316,
											"end": 24320,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24272,
											"end": 24337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 24272,
											"end": 24337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24272,
											"end": 24337,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 24272,
											"end": 24337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24207,
											"end": 24343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24154,
											"end": 24343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24154,
											"end": 24343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24154,
											"end": 24343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24349,
											"end": 24535,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 24349,
											"end": 24535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24426,
											"end": 24429,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24419,
											"end": 24424,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24416,
											"end": 24430,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24480,
											"end": 24519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 24517,
											"end": 24518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24510,
											"end": 24515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24480,
											"end": 24519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 24480,
											"end": 24519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24480,
											"end": 24519,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 24480,
											"end": 24519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24453,
											"end": 24454,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24446,
											"end": 24451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24442,
											"end": 24455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24433,
											"end": 24455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24433,
											"end": 24455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 24409,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24349,
											"end": 24535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24349,
											"end": 24535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24349,
											"end": 24535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24541,
											"end": 25084,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 24541,
											"end": 25084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24642,
											"end": 24644,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24637,
											"end": 24640,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24634,
											"end": 24645,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 24631,
											"end": 25077,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24631,
											"end": 25077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 24631,
											"end": 25077,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24676,
											"end": 24714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 24708,
											"end": 24713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24676,
											"end": 24714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 24676,
											"end": 24714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24676,
											"end": 24714,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 24676,
											"end": 24714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 24789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 24778,
											"end": 24788,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 24789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 24760,
											"end": 24789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 24789,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 24760,
											"end": 24789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24750,
											"end": 24758,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24746,
											"end": 24790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24943,
											"end": 24945,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24931,
											"end": 24941,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24928,
											"end": 24946,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 24925,
											"end": 24974,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24925,
											"end": 24974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 24925,
											"end": 24974,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24964,
											"end": 24972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24949,
											"end": 24972,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24949,
											"end": 24972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24925,
											"end": 24974,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 24925,
											"end": 24974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24987,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 25043,
											"end": 25065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 25061,
											"end": 25064,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25043,
											"end": 25065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 25043,
											"end": 25065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25043,
											"end": 25065,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 25043,
											"end": 25065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25033,
											"end": 25041,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25029,
											"end": 25066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25016,
											"end": 25027,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24987,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 24987,
											"end": 25067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24987,
											"end": 25067,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 24987,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24646,
											"end": 25077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24646,
											"end": 25077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24631,
											"end": 25077,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 24631,
											"end": 25077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24541,
											"end": 25084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24541,
											"end": 25084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24541,
											"end": 25084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24541,
											"end": 25084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25090,
											"end": 25207,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 25090,
											"end": 25207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25144,
											"end": 25152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25194,
											"end": 25199,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25188,
											"end": 25192,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25184,
											"end": 25200,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 25163,
											"end": 25200,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25163,
											"end": 25200,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25090,
											"end": 25207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25090,
											"end": 25207,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25090,
											"end": 25207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25090,
											"end": 25207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25090,
											"end": 25207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25213,
											"end": 25382,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 25213,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25257,
											"end": 25263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25290,
											"end": 25341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 25338,
											"end": 25339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25334,
											"end": 25340,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25323,
											"end": 25324,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 25319,
											"end": 25332,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 25290,
											"end": 25341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 25290,
											"end": 25341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25290,
											"end": 25341,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 25290,
											"end": 25341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25286,
											"end": 25342,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 25371,
											"end": 25375,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 25365,
											"end": 25369,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25361,
											"end": 25376,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 25351,
											"end": 25376,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25351,
											"end": 25376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25264,
											"end": 25382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25213,
											"end": 25382,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25213,
											"end": 25382,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25213,
											"end": 25382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25213,
											"end": 25382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25213,
											"end": 25382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25387,
											"end": 25682,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 25387,
											"end": 25682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25463,
											"end": 25467,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25609,
											"end": 25638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 25634,
											"end": 25637,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25628,
											"end": 25632,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25609,
											"end": 25638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 25609,
											"end": 25638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25609,
											"end": 25638,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 25609,
											"end": 25638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25601,
											"end": 25638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25601,
											"end": 25638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25671,
											"end": 25674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25668,
											"end": 25669,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 25664,
											"end": 25675,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 25658,
											"end": 25662,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25655,
											"end": 25676,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 25647,
											"end": 25676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25647,
											"end": 25676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25387,
											"end": 25682,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25387,
											"end": 25682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25387,
											"end": 25682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25387,
											"end": 25682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25387,
											"end": 25682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25687,
											"end": 27082,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 25687,
											"end": 27082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25804,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 25837,
											"end": 25840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25804,
											"end": 25841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 25804,
											"end": 25841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25804,
											"end": 25841,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 25804,
											"end": 25841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25906,
											"end": 25924,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25898,
											"end": 25904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25895,
											"end": 25925,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 25892,
											"end": 25948,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25892,
											"end": 25948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 25892,
											"end": 25948,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25928,
											"end": 25946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 25928,
											"end": 25946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 25928,
											"end": 25946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25928,
											"end": 25946,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 25928,
											"end": 25946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25892,
											"end": 25948,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 25892,
											"end": 25948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 26004,
											"end": 26008,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25998,
											"end": 26009,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 25972,
											"end": 26010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 25972,
											"end": 26010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 26117,
											"end": 26123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26109,
											"end": 26115,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26103,
											"end": 26107,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 26057,
											"end": 26124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26124,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 26057,
											"end": 26124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26151,
											"end": 26152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26175,
											"end": 26179,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26162,
											"end": 26179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26162,
											"end": 26179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26207,
											"end": 26209,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 26199,
											"end": 26205,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26196,
											"end": 26210,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 26224,
											"end": 26225,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26219,
											"end": 26837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26219,
											"end": 26837,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 26219,
											"end": 26837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 26219,
											"end": 26837,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26881,
											"end": 26882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26898,
											"end": 26904,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26895,
											"end": 26972,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26895,
											"end": 26972,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 26895,
											"end": 26972,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26947,
											"end": 26956,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26942,
											"end": 26945,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 26938,
											"end": 26957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26932,
											"end": 26958,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 26923,
											"end": 26958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26923,
											"end": 26958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26895,
											"end": 26972,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 26895,
											"end": 26972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26998,
											"end": 27065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 27058,
											"end": 27064,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 27051,
											"end": 27056,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26998,
											"end": 27065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 26998,
											"end": 27065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26998,
											"end": 27065,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 26998,
											"end": 27065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26992,
											"end": 26996,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 26985,
											"end": 27066,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 26854,
											"end": 27076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26189,
											"end": 27076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 26189,
											"end": 27076,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26219,
											"end": 26837,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 26219,
											"end": 26837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26271,
											"end": 26275,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 26267,
											"end": 26276,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 26259,
											"end": 26265,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26255,
											"end": 26277,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 26305,
											"end": 26342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 26337,
											"end": 26341,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 26305,
											"end": 26342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 26305,
											"end": 26342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26305,
											"end": 26342,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 26305,
											"end": 26342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26364,
											"end": 26365,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26392,
											"end": 26399,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26389,
											"end": 26390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26386,
											"end": 26400,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26471,
											"end": 26480,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26466,
											"end": 26469,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 26462,
											"end": 26481,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26456,
											"end": 26482,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 26448,
											"end": 26454,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26441,
											"end": 26483,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 26522,
											"end": 26523,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26514,
											"end": 26520,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26500,
											"end": 26524,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26500,
											"end": 26524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26569,
											"end": 26571,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26558,
											"end": 26567,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26554,
											"end": 26572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26541,
											"end": 26572,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 26541,
											"end": 26572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26415,
											"end": 26419,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26412,
											"end": 26413,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26408,
											"end": 26420,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26403,
											"end": 26420,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26403,
											"end": 26420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 26378,
											"end": 26586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26614,
											"end": 26620,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 26605,
											"end": 26612,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26602,
											"end": 26621,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 26599,
											"end": 26778,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26599,
											"end": 26778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 26599,
											"end": 26778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26672,
											"end": 26681,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26667,
											"end": 26670,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 26663,
											"end": 26682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26657,
											"end": 26683,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 26715,
											"end": 26763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 26757,
											"end": 26761,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 26749,
											"end": 26755,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 26745,
											"end": 26762,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 26734,
											"end": 26743,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26715,
											"end": 26763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 26715,
											"end": 26763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26715,
											"end": 26763,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 26715,
											"end": 26763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26707,
											"end": 26713,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26700,
											"end": 26764,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 26622,
											"end": 26778,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26599,
											"end": 26778,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 26599,
											"end": 26778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26824,
											"end": 26825,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26820,
											"end": 26821,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 26812,
											"end": 26818,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 26808,
											"end": 26822,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 26804,
											"end": 26826,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26798,
											"end": 26802,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 26791,
											"end": 26827,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 26226,
											"end": 26837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26226,
											"end": 26837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26226,
											"end": 26837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26189,
											"end": 27076,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 26189,
											"end": 27076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26189,
											"end": 27076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25779,
											"end": 27082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25779,
											"end": 27082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25779,
											"end": 27082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25687,
											"end": 27082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25687,
											"end": 27082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25687,
											"end": 27082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27265,
											"end": 27269,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27303,
											"end": 27306,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 27292,
											"end": 27301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27288,
											"end": 27307,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27280,
											"end": 27307,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27280,
											"end": 27307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27317,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 27385,
											"end": 27386,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27374,
											"end": 27383,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27370,
											"end": 27387,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27361,
											"end": 27367,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 27317,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 27317,
											"end": 27388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27317,
											"end": 27388,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 27317,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27398,
											"end": 27470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 27466,
											"end": 27468,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27455,
											"end": 27464,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27451,
											"end": 27469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27442,
											"end": 27448,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 27398,
											"end": 27470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 27398,
											"end": 27470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27398,
											"end": 27470,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 27398,
											"end": 27470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27480,
											"end": 27552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 27548,
											"end": 27550,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 27537,
											"end": 27546,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27533,
											"end": 27551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27524,
											"end": 27530,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 27480,
											"end": 27552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 27480,
											"end": 27552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27480,
											"end": 27552,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 27480,
											"end": 27552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 27630,
											"end": 27632,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 27619,
											"end": 27628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27615,
											"end": 27633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27606,
											"end": 27612,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 27562,
											"end": 27634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27634,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 27562,
											"end": 27634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27088,
											"end": 27641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27647,
											"end": 27827,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 27647,
											"end": 27827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27695,
											"end": 27772,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27692,
											"end": 27693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27685,
											"end": 27773,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27792,
											"end": 27796,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 27789,
											"end": 27790,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 27782,
											"end": 27797,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27816,
											"end": 27820,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 27813,
											"end": 27814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27806,
											"end": 27821,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 27833,
											"end": 28024,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 27833,
											"end": 28024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27873,
											"end": 27876,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27892,
											"end": 27912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 27910,
											"end": 27911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27892,
											"end": 27912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 27892,
											"end": 27912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27892,
											"end": 27912,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 27892,
											"end": 27912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27887,
											"end": 27912,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27887,
											"end": 27912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27926,
											"end": 27946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 27944,
											"end": 27945,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27926,
											"end": 27946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 27926,
											"end": 27946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27926,
											"end": 27946,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 27926,
											"end": 27946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27921,
											"end": 27946,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 27921,
											"end": 27946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27969,
											"end": 27970,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27966,
											"end": 27967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27962,
											"end": 27971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27955,
											"end": 27971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27955,
											"end": 27971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27990,
											"end": 27993,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 27987,
											"end": 27988,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27984,
											"end": 27994,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 27981,
											"end": 28017,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 27981,
											"end": 28017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 27981,
											"end": 28017,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27997,
											"end": 28015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 27997,
											"end": 28015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 27997,
											"end": 28015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27997,
											"end": 28015,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 27997,
											"end": 28015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27981,
											"end": 28017,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 27981,
											"end": 28017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27833,
											"end": 28024,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 27833,
											"end": 28024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27833,
											"end": 28024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27833,
											"end": 28024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27833,
											"end": 28024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28030,
											"end": 28664,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 28030,
											"end": 28664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28251,
											"end": 28255,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28289,
											"end": 28291,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 28278,
											"end": 28287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28274,
											"end": 28292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28266,
											"end": 28292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28266,
											"end": 28292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28338,
											"end": 28347,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28332,
											"end": 28336,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28328,
											"end": 28348,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28324,
											"end": 28325,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28313,
											"end": 28322,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28309,
											"end": 28326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28302,
											"end": 28349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28366,
											"end": 28474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 28469,
											"end": 28473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28460,
											"end": 28466,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 28366,
											"end": 28474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 28366,
											"end": 28474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28366,
											"end": 28474,
											"name": "tag",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 28366,
											"end": 28474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28358,
											"end": 28474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28358,
											"end": 28474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28521,
											"end": 28530,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28515,
											"end": 28519,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28511,
											"end": 28531,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28506,
											"end": 28508,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28495,
											"end": 28504,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28491,
											"end": 28509,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28484,
											"end": 28532,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28549,
											"end": 28657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 28652,
											"end": 28656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28643,
											"end": 28649,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 28549,
											"end": 28657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 28549,
											"end": 28657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28549,
											"end": 28657,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 28549,
											"end": 28657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28541,
											"end": 28657,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28541,
											"end": 28657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28030,
											"end": 28664,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 28030,
											"end": 28664,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28030,
											"end": 28664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28030,
											"end": 28664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28030,
											"end": 28664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28030,
											"end": 28664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28670,
											"end": 28768,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 28670,
											"end": 28768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28721,
											"end": 28727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28755,
											"end": 28760,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28749,
											"end": 28761,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 28739,
											"end": 28761,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28739,
											"end": 28761,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28670,
											"end": 28768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28670,
											"end": 28768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28670,
											"end": 28768,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28670,
											"end": 28768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28774,
											"end": 28942,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 28774,
											"end": 28942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28857,
											"end": 28868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28891,
											"end": 28897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28886,
											"end": 28889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28879,
											"end": 28898,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28931,
											"end": 28935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28926,
											"end": 28929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28922,
											"end": 28936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28907,
											"end": 28936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28907,
											"end": 28936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28774,
											"end": 28942,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28774,
											"end": 28942,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28774,
											"end": 28942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28774,
											"end": 28942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28774,
											"end": 28942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28948,
											"end": 29321,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 28948,
											"end": 29321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29034,
											"end": 29037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29062,
											"end": 29100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 29094,
											"end": 29099,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29062,
											"end": 29100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 29062,
											"end": 29100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29062,
											"end": 29100,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 29062,
											"end": 29100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29116,
											"end": 29186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 29179,
											"end": 29185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29174,
											"end": 29177,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 29116,
											"end": 29186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 29116,
											"end": 29186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29116,
											"end": 29186,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 29116,
											"end": 29186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29109,
											"end": 29186,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 29109,
											"end": 29186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29195,
											"end": 29260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 29253,
											"end": 29259,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29248,
											"end": 29251,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 29241,
											"end": 29245,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29234,
											"end": 29239,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 29230,
											"end": 29246,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29195,
											"end": 29260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 29195,
											"end": 29260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29195,
											"end": 29260,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 29195,
											"end": 29260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29285,
											"end": 29314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 29307,
											"end": 29313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29285,
											"end": 29314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 29285,
											"end": 29314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29285,
											"end": 29314,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 29285,
											"end": 29314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29280,
											"end": 29283,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29276,
											"end": 29315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29269,
											"end": 29315,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29269,
											"end": 29315,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29038,
											"end": 29321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28948,
											"end": 29321,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28948,
											"end": 29321,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28948,
											"end": 29321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28948,
											"end": 29321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28948,
											"end": 29321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29550,
											"end": 29554,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29588,
											"end": 29591,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 29577,
											"end": 29586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29573,
											"end": 29592,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29565,
											"end": 29592,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29565,
											"end": 29592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29602,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 29670,
											"end": 29671,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29659,
											"end": 29668,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29655,
											"end": 29672,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29646,
											"end": 29652,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 29602,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 29602,
											"end": 29673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29602,
											"end": 29673,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 29602,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29683,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 29751,
											"end": 29753,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29740,
											"end": 29749,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29736,
											"end": 29754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29727,
											"end": 29733,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 29683,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 29683,
											"end": 29755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29683,
											"end": 29755,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 29683,
											"end": 29755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29765,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 29833,
											"end": 29835,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 29822,
											"end": 29831,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29818,
											"end": 29836,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29809,
											"end": 29815,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 29765,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 29765,
											"end": 29837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29765,
											"end": 29837,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 29765,
											"end": 29837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29847,
											"end": 29919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 29915,
											"end": 29917,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 29904,
											"end": 29913,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29900,
											"end": 29918,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29891,
											"end": 29897,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 29847,
											"end": 29919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 29847,
											"end": 29919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29847,
											"end": 29919,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 29847,
											"end": 29919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29967,
											"end": 29976,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29961,
											"end": 29965,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29957,
											"end": 29977,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 29951,
											"end": 29954,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 29940,
											"end": 29949,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29936,
											"end": 29955,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29929,
											"end": 29978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 29995,
											"end": 30071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 30066,
											"end": 30070,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30057,
											"end": 30063,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29995,
											"end": 30071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 29995,
											"end": 30071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29995,
											"end": 30071,
											"name": "tag",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 29995,
											"end": 30071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29987,
											"end": 30071,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29987,
											"end": 30071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29327,
											"end": 30078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30084,
											"end": 30225,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 30084,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30140,
											"end": 30145,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30171,
											"end": 30177,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30165,
											"end": 30178,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 30156,
											"end": 30178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30156,
											"end": 30178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30187,
											"end": 30219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 30213,
											"end": 30218,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30187,
											"end": 30219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 30187,
											"end": 30219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30187,
											"end": 30219,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 30187,
											"end": 30219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30084,
											"end": 30225,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 30084,
											"end": 30225,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30084,
											"end": 30225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30084,
											"end": 30225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30084,
											"end": 30225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30231,
											"end": 30580,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 30231,
											"end": 30580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30300,
											"end": 30306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30349,
											"end": 30351,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 30337,
											"end": 30346,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30328,
											"end": 30335,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30324,
											"end": 30347,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 30320,
											"end": 30352,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30436,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 30317,
											"end": 30436,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 30355,
											"end": 30434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 30355,
											"end": 30434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 30355,
											"end": 30434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30355,
											"end": 30434,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 30355,
											"end": 30434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30436,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 30317,
											"end": 30436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30475,
											"end": 30476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30500,
											"end": 30563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 30555,
											"end": 30562,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30546,
											"end": 30552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30535,
											"end": 30544,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 30531,
											"end": 30553,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30500,
											"end": 30563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 30500,
											"end": 30563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30500,
											"end": 30563,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 30500,
											"end": 30563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30490,
											"end": 30563,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30490,
											"end": 30563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30446,
											"end": 30573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30231,
											"end": 30580,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 30231,
											"end": 30580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30231,
											"end": 30580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30231,
											"end": 30580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30231,
											"end": 30580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30909,
											"end": 30913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30947,
											"end": 30950,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 30936,
											"end": 30945,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30932,
											"end": 30951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30924,
											"end": 30951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30924,
											"end": 30951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30961,
											"end": 31032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 31029,
											"end": 31030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31018,
											"end": 31027,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31014,
											"end": 31031,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31005,
											"end": 31011,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 30961,
											"end": 31032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 30961,
											"end": 31032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30961,
											"end": 31032,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 30961,
											"end": 31032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31042,
											"end": 31114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 31110,
											"end": 31112,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 31099,
											"end": 31108,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31095,
											"end": 31113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31086,
											"end": 31092,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 31042,
											"end": 31114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 31042,
											"end": 31114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31042,
											"end": 31114,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 31042,
											"end": 31114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31161,
											"end": 31170,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31155,
											"end": 31159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31151,
											"end": 31171,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 31146,
											"end": 31148,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 31135,
											"end": 31144,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31131,
											"end": 31149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31124,
											"end": 31172,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 31189,
											"end": 31297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 31292,
											"end": 31296,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31283,
											"end": 31289,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 31189,
											"end": 31297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 31189,
											"end": 31297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31189,
											"end": 31297,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 31189,
											"end": 31297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31181,
											"end": 31297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31181,
											"end": 31297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31344,
											"end": 31353,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31338,
											"end": 31342,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31334,
											"end": 31354,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 31329,
											"end": 31331,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 31318,
											"end": 31327,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31314,
											"end": 31332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31307,
											"end": 31355,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 31372,
											"end": 31480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 31475,
											"end": 31479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31466,
											"end": 31472,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 31372,
											"end": 31480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 31372,
											"end": 31480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31372,
											"end": 31480,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 31372,
											"end": 31480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31364,
											"end": 31480,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31364,
											"end": 31480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31528,
											"end": 31537,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31522,
											"end": 31526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31518,
											"end": 31538,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 31512,
											"end": 31515,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 31501,
											"end": 31510,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31497,
											"end": 31516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31490,
											"end": 31539,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 31556,
											"end": 31632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 31627,
											"end": 31631,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31618,
											"end": 31624,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 31556,
											"end": 31632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 31556,
											"end": 31632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31556,
											"end": 31632,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 31556,
											"end": 31632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31548,
											"end": 31632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31548,
											"end": 31632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30586,
											"end": 31639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/task2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintFungible(address,uint256,uint256)": "58ea82e6",
							"mintNonFungible(address,string)": "07805a6b",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintFungible\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintNonFungible\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/task2.sol\":\"MyERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/task2.sol\":{\"keccak256\":\"0xec72771a4365e63c15095ba48f85f92c98a2ef05fe1b0ab34a0015e264d40b84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2beb44a8eaf52d2d3fdfeaafb7b27610f23b439eb2aabb8f6bb11f3f2ce93a4a\",\"dweb:/ipfs/QmdmKCNoEPCP2kfn3hYwiwKcShHMiNdxQ4Zz1bqJCjjzWX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "contracts/task2.sol:MyERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "contracts/task2.sol:MyERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "contracts/task2.sol:MyERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 2868,
								"contract": "contracts/task2.sol:MyERC1155",
								"label": "_nonFungibleTokenIds",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)1587_storage"
							},
							{
								"astId": 2872,
								"contract": "contracts/task2.sol:MyERC1155",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1587_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1586,
										"contract": "contracts/task2.sol:MyERC1155",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Context": [
							1581
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1789
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1368
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1801
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1311,
							"src": "135:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "143:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1353,
							"src": "176:56:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "184:16:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1369,
							"src": "233:73:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1368,
										"src": "241:19:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1582,
							"src": "307:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1581,
										"src": "315:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1790,
							"src": "356:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1801,
										"src": "364:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 148,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1789,
										"src": "373:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1552,
							"src": "426:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1551,
										"src": "434:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 137,
							"src": "473:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "481:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"756:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1581,
										"src": "756:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"765:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1789,
										"src": "765:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "773:8:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1368,
										"src": "783:19:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "804:14:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								136,
								1368,
								1310,
								1789,
								1801,
								1581
							],
							"name": "ERC1155",
							"nameLocation": "745:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 168,
									"libraryName": {
										"id": 165,
										"name": "Arrays",
										"nameLocations": [
											"831:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "831:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:1",
									"typeName": {
										"baseType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 167,
										"nodeType": "ArrayTypeName",
										"src": "842:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 172,
									"libraryName": {
										"id": 169,
										"name": "Arrays",
										"nameLocations": [
											"863:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "863:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:1",
									"typeName": {
										"baseType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 171,
										"nodeType": "ArrayTypeName",
										"src": "874:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "890:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 177,
										"keyName": "id",
										"keyNameLocation": "906:2:1",
										"keyType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 176,
											"keyName": "account",
											"keyNameLocation": "928:7:1",
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "973:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "989:7:1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"keyName": "operator",
											"keyNameLocation": "1016:8:1",
											"keyType": {
												"id": 180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "1182:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 185,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1283:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 192,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:1"
									},
									"scope": 1187,
									"src": "1251:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1788,
										1800
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1488:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1517:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "1537:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1310",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1574:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "1594:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1368_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1368_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1368",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1666:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 221,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1187_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1788,
															"src": "1642:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "1498:180:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 202,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1789,
												"src": "1456:6:1"
											},
											{
												"id": 203,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1801,
												"src": "1464:7:1"
											}
										],
										"src": "1447:25:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1407:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1482:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:1"
									},
									"scope": 1187,
									"src": "1380:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2159:28:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2169:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2097:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2144:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:1"
									},
									"scope": 1187,
									"src": "2084:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2333:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2350:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2360:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2343:29:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:1",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2266:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2283:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2324:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:1"
									},
									"scope": 1187,
									"src": "2247:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2678:410:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 269,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2692:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2711:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2688:121:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2723:86:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 275,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2770:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 277,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "2782:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 274,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2744:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "2737:61:1"
														}
													]
												}
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2819:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2866:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:1"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2939:112:1",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 306,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2953:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"id": 307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "2967:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 312,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3010:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 310,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "2982:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1550,
																				"src": "2982:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3037:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 314,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 263,
																					"src": "3014:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "3014:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 309,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2972:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2913:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 300,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2917:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2898:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:1",
														"subExpression": {
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2936:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:1"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3068:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 324,
												"nodeType": "Return",
												"src": "3061:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2569:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2604:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2660:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:1"
									},
									"scope": 1187,
									"src": "2536:552:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3231:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "3260:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3274:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3284:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3241:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3183:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3201:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 1187,
									"src": "3156:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3463:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 352,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3480:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3499:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3508:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "3473:44:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3410:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3457:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:1"
									},
									"scope": 1187,
									"src": "3367:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3704:238:1",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3714:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "3731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3757:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 379,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3765:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3793:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 383,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3799:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 381,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3776:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "3753:129:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "3808:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3858:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3866:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3829:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "3822:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3909:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3915:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3919:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3923:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3930:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "3891:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3617:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3631:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3643:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3670:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:1"
									},
									"scope": 1187,
									"src": "3591:351:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4198:245:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "4208:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "4225:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 425,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4259:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4293:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4270:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4247:129:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4302:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4352:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "4360:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4323:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4316:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4414:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4418:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 444,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4385:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4076:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4096:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4126:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4159:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:1"
									},
									"scope": 1187,
									"src": "4014:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5251:1174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5265:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 465,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "5261:117:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "5294:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 469,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "5341:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 471,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5353:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5315:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "5308:59:1"
														}
													]
												}
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "5388:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "5407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:1"
											},
											{
												"body": {
													"id": 562,
													"nodeType": "Block",
													"src": "5471:650:1",
													"statements": [
														{
															"assignments": [
																494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 494,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5485:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5521:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "5498:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "5498:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:1"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5537:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5579:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 502,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5553:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "5553:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "5600:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 545,
															"nodeType": "IfStatement",
															"src": "5596:420:1",
															"trueBody": {
																"id": 544,
																"nodeType": "Block",
																"src": "5620:396:1",
																"statements": [
																	{
																		"assignments": [
																			514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 514,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 544,
																				"src": "5638:19:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 520,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 515,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "5660:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 517,
																				"indexExpression": {
																					"id": 516,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "5670:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "5674:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "5701:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 522,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5715:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 532,
																		"nodeType": "IfStatement",
																		"src": "5697:129:1",
																		"trueBody": {
																			"id": 531,
																			"nodeType": "Block",
																			"src": "5722:104:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 525,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 452,
																								"src": "5778:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 526,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "5784:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 527,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 501,
																								"src": "5797:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 528,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5804:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 524,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "5751:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 530,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:1"
																				}
																			]
																		}
																	},
																	{
																		"id": 543,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 533,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 178,
																								"src": "5942:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 536,
																							"indexExpression": {
																								"id": 534,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5952:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 537,
																						"indexExpression": {
																							"id": 535,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 452,
																							"src": "5956:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 538,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 514,
																							"src": "5964:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 539,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 501,
																							"src": "5978:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:1"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6034:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "IfStatement",
															"src": "6030:81:1",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6052:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 552,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "6070:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 555,
																					"indexExpression": {
																						"id": 553,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6080:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 556,
																				"indexExpression": {
																					"id": 554,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "6084:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 557,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "6091:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 559,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5450:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5454:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"initializationExpression": {
													"assignments": [
														483
													],
													"declarations": [
														{
															"constant": false,
															"id": 483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 563,
															"src": "5435:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:1",
														"subExpression": {
															"id": 490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5468:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6135:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6343:76:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6386:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6392:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6396:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 596,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6401:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 591,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "6362:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "6357:51:1"
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6131:288:1",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "6152:185:1",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6166:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 574,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 570,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6179:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "6179:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:1"
														},
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6218:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6234:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "6234:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6296:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6306:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 585,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6312:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 586,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "6316:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6320:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6281:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "6276:50:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5161:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5175:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5187:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5209:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:1"
									},
									"scope": 1187,
									"src": "5144:1281:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "7195:499:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7213:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7219:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7223:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 622,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "7205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7249:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "7245:443:1",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "7267:421:1",
													"statements": [
														{
															"assignments": [
																632
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 632,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 675,
																	"src": "7281:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 633,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "7300:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "7330:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "7571:107:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 665,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7625:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 666,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7635:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 667,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7641:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 668,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7645:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 669,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7650:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 670,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7658:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 664,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7589:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 672,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:1"
																	}
																]
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "7326:352:1",
															"trueBody": {
																"id": 663,
																"nodeType": "Block",
																"src": "7347:218:1",
																"statements": [
																	{
																		"assignments": [
																			641
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 641,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7365:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 640,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 646,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 642,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7378:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "7378:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:1"
																	},
																	{
																		"assignments": [
																			648
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 648,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7421:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 647,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 653,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "7437:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7514:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7524:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 657,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7530:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 658,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "7534:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 659,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "7538:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 660,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7545:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 654,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "7483:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 662,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:1",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7049:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7071:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7091:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 609,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7121:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7154:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:1"
									},
									"scope": 1187,
									"src": "7004:690:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8259:355:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8273:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "8269:88:1",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "8291:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 698,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8312:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 704,
															"nodeType": "RevertStatement",
															"src": "8305:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8370:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8366:88:1",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "8390:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 713,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8411:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "RevertStatement",
															"src": "8404:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													726,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8464:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8486:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 727,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "8536:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "8513:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8579:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "8585:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "8589:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "8594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 735,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8552:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:1",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8178:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8192:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8204:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8216:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8231:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:1"
									},
									"scope": 1187,
									"src": "8151:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "9194:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9208:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "9204:88:1",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "9226:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "9247:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "9240:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "9305:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "9301:88:1",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "9325:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9346:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "9339:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9425:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9431:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9435:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 794,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9398:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:1"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9056:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9098:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9128:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9161:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:1"
									},
									"scope": 1187,
									"src": "9015:445:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "10338:30:1",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "10348:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "10355:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:1"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10299:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:1"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:1"
									},
									"scope": 1187,
									"src": "10282:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "10828:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "10842:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "10838:88:1",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "10860:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 829,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 828,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10881:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 834,
															"nodeType": "RevertStatement",
															"src": "10874:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													841,
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10936:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10958:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11004:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11008:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "10985:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11063:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11067:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "11072:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 858,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 850,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11024:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:1"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:1",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10773:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10785:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10800:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:1"
									},
									"scope": 1187,
									"src": "10746:346:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11630:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11644:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "11640:88:1",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "11662:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 882,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "11683:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "11676:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11780:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 898,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "11785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11793:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11737:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:1"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11543:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11555:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 866,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 867,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11577:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 870,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11602:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:1"
									},
									"scope": 1187,
									"src": "11523:282:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "12164:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "12178:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "12174:88:1",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "12198:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 920,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 919,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12219:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 925,
															"nodeType": "RevertStatement",
															"src": "12212:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													932,
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12272:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 931,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12294:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"id": 937,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12340:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12344:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "12321:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12387:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "12405:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "12410:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 941,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12360:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:1"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:1",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12114:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12128:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12140:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:1"
									},
									"scope": 1187,
									"src": "12099:329:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "12874:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "12888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "12884:88:1",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "12908:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 972,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 971,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12929:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "12922:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 981,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "13008:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13026:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 987,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "13031:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 980,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12981:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:1"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12804:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12818:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12840:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:1"
									},
									"scope": 1187,
									"src": "12784:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "13361:222:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "13375:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "13371:94:1",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "13399:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1009,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "13420:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1014,
															"nodeType": "RevertStatement",
															"src": "13413:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1017,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "13474:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1018,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "13493:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1019,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13500:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "13512:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "13550:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13557:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "13567:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1025,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "13535:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "13530:46:1"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13311:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:1"
									},
									"scope": 1187,
									"src": "13268:315:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "13953:782:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "13967:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "13963:766:1",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "13987:742:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1077,
																		"nodeType": "Block",
																		"src": "14103:206:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1066,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "14125:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1067,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "14137:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:1",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1333,
																							"src": "14137:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1076,
																				"nodeType": "IfStatement",
																				"src": "14121:174:1",
																				"trueBody": {
																					"id": 1075,
																					"nodeType": "Block",
																					"src": "14182:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1072,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14273:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1071,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14250:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1074,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1078,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1065,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1064,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1078,
																				"src": "14086:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1063,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:1"
																	},
																	"src": "14077:232:1"
																},
																{
																	"block": {
																		"id": 1094,
																		"nodeType": "Block",
																		"src": "14338:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1082,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1080,
																							"src": "14360:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1092,
																					"nodeType": "Block",
																					"src": "14515:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:1",
																								"nodeType": "YulBlock",
																								"src": "14601:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:1",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:1"
																													},
																													"nativeSrc": "14634:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:1"
																													},
																													"nativeSrc": "14651:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:1"
																											},
																											"nativeSrc": "14627:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:1"
																										},
																										"nativeSrc": "14627:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1091,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:1"
																						}
																					]
																				},
																				"id": 1093,
																				"nodeType": "IfStatement",
																				"src": "14356:349:1",
																				"trueBody": {
																					"id": 1090,
																					"nodeType": "Block",
																					"src": "14380:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1087,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14487:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1086,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14464:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1089,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1095,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1081,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1080,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1095,
																				"src": "14317:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1079,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:1"
																	},
																	"src": "14310:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "14044:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "14054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1059,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "14060:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "14064:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "14071:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1054,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "14022:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1053,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "14005:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:1",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1333,
																	"src": "14005:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1096,
															"nodeType": "TryStatement",
															"src": "14001:718:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:1",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13810:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13858:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13878:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13921:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:1"
									},
									"scope": 1187,
									"src": "13761:974:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "15140:824:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1118,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "15154:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "IfStatement",
												"src": "15150:808:1",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "15174:784:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1147,
																		"nodeType": "Block",
																		"src": "15327:211:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1136,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "15349:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1137,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "15361:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:1",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1351,
																							"src": "15361:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1146,
																				"nodeType": "IfStatement",
																				"src": "15345:179:1",
																				"trueBody": {
																					"id": 1145,
																					"nodeType": "Block",
																					"src": "15411:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1142,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15502:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1141,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15479:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1144,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1135,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1134,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1148,
																				"src": "15297:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1133,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:1"
																	},
																	"src": "15271:267:1"
																},
																{
																	"block": {
																		"id": 1164,
																		"nodeType": "Block",
																		"src": "15567:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1152,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1150,
																							"src": "15589:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1162,
																					"nodeType": "Block",
																					"src": "15744:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:1",
																								"nodeType": "YulBlock",
																								"src": "15830:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:1",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:1"
																													},
																													"nativeSrc": "15863:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:1"
																													},
																													"nativeSrc": "15880:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:1"
																											},
																											"nativeSrc": "15856:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:1"
																										},
																										"nativeSrc": "15856:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1161,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:1"
																						}
																					]
																				},
																				"id": 1163,
																				"nodeType": "IfStatement",
																				"src": "15585:349:1",
																				"trueBody": {
																					"id": 1160,
																					"nodeType": "Block",
																					"src": "15609:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1157,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15716:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1156,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15693:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1158,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1159,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1165,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1151,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "15546:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:1"
																	},
																	"src": "15539:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "15236:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "15246:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "15252:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "15257:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "15265:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1124,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "15209:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1123,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "15192:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:1",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1351,
																	"src": "15192:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1166,
															"nodeType": "TryStatement",
															"src": "15188:760:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:1",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "14977:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15003:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15045:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15075:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15108:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:1"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:1"
									},
									"scope": 1187,
									"src": "14923:1041:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "16238:691:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:1",
													"nodeType": "YulBlock",
													"src": "16300:623:1",
													"statements": [
														{
															"nativeSrc": "16358:21:1",
															"nodeType": "YulAssignment",
															"src": "16358:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:1"
																},
																"nativeSrc": "16368:11:1",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:1"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:1"
																},
																"nativeSrc": "16429:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:1"
															},
															"nativeSrc": "16429:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:1"
																		},
																		"nativeSrc": "16563:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:1"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:1"
																},
																"nativeSrc": "16556:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:1"
															},
															"nativeSrc": "16556:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:1"
														},
														{
															"nativeSrc": "16682:27:1",
															"nodeType": "YulAssignment",
															"src": "16682:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:1"
																},
																"nativeSrc": "16692:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:1"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:1"
																},
																"nativeSrc": "16722:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:1"
															},
															"nativeSrc": "16722:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:1"
																		},
																		"nativeSrc": "16759:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:1"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:1"
																},
																"nativeSrc": "16752:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:1"
															},
															"nativeSrc": "16752:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:1"
																		},
																		"nativeSrc": "16895:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:1"
																},
																"nativeSrc": "16882:31:1",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:1"
															},
															"nativeSrc": "16882:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:1",
														"valueSize": 1
													}
												],
												"id": 1184,
												"nodeType": "InlineAssembly",
												"src": "16291:632:1"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:1",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16117:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:1"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16188:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16213:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:1"
									},
									"scope": 1187,
									"src": "16080:849:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1188,
							"src": "727:16204:1",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "109:16823:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC165": [
							1801
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1802,
							"src": "136:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1190,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1801,
										"src": "144:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1193,
										"name": "IERC165",
										"nameLocations": [
											"358:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1801,
										"src": "358:7:2"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								1801
							],
							"name": "IERC1155",
							"nameLocation": "346:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:2",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1207,
									"name": "TransferSingle",
									"nameLocation": "508:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "523:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "571:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "591:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "603:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:2"
									},
									"src": "502:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1222,
									"name": "TransferBatch",
									"nameLocation": "779:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "802:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "836:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "866:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1216,
													"nodeType": "ArrayTypeName",
													"src": "894:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "917:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1219,
													"nodeType": "ArrayTypeName",
													"src": "917:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:2"
									},
									"src": "773:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1231,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1119:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1144:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1170:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:2"
									},
									"src": "1098:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1238,
									"name": "URI",
									"nameLocation": "1545:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1549:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1563:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:2"
									},
									"src": "1539:44:2"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:2",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1785:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:2"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1837:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:2"
									},
									"scope": 1310,
									"src": "1766:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2078:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1250,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1251,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2115:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1254,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2167:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:2"
									},
									"scope": 1310,
									"src": "2045:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2471:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2489:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:2"
									},
									"scope": 1310,
									"src": "2444:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2702:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2743:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:2"
									},
									"scope": 1310,
									"src": "2659:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3722:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3734:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3749:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:2"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:2"
									},
									"scope": 1310,
									"src": "3670:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4644:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4666:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4686:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4718:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4753:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:2"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:2"
									},
									"scope": 1310,
									"src": "4604:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "336:4454:2",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "110:4681:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1801
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1802,
							"src": "144:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1801,
										"src": "152:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1801,
										"src": "357:7:3"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:3",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								1801
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1238:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1264:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1286:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1306:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1329:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:3"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1373:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:3"
									},
									"scope": 1352,
									"src": "1202:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2427:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2453:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2475:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1339,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1340,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1342,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1343,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2542:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:3"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2586:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:3"
									},
									"scope": 1352,
									"src": "2386:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "327:2269:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC1155MetadataURI": [
							1368
						]
					},
					"id": 1369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1369,
							"sourceUnit": 1311,
							"src": "158:41:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1355,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "166:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1358,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "399:8:4"
									},
									"id": 1359,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:4"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1368,
							"linearizedBaseContracts": [
								1368,
								1310,
								1801
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "624:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:4"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "659:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:4"
									},
									"scope": 1368,
									"src": "611:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1369,
							"src": "366:310:4",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "132:545:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Math": [
							2855
						],
						"StorageSlot": [
							1765
						]
					},
					"id": 1552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1370,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 1766,
							"src": "126:46:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1371,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1765,
										"src": "134:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 2856,
							"src": "173:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1373,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2855,
										"src": "181:4:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1375,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:5",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1551,
							"linearizedBaseContracts": [
								1551
							],
							"name": "Arrays",
							"nameLocation": "284:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1378,
									"libraryName": {
										"id": 1376,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1765,
										"src": "303:11:5"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:5",
									"typeName": {
										"id": 1377,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "843:834:5",
										"statements": [
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "853:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1392,
												"initialValue": {
													"hexValue": "30",
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:5"
											},
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "878:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"expression": {
														"id": 1395,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "893:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1398,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "920:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "916:48:5",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "931:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1388,
															"id": 1402,
															"nodeType": "Return",
															"src": "945:8:5"
														}
													]
												}
											},
											{
												"body": {
													"id": 1436,
													"nodeType": "Block",
													"src": "993:423:5",
													"statements": [
														{
															"assignments": [
																1409
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1409,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "1007:11:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1408,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1415,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1412,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "1034:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1413,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1039:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1410,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2855,
																		"src": "1021:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2855_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:5",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2029,
																	"src": "1021:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1417,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "1282:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1418,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1289:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1416,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1482,
																				1503,
																				1524
																			],
																			"referencedDeclaration": 1524,
																			"src": "1269:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1670_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1670_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:5",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1669,
																	"src": "1269:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1421,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "1302:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1434,
																"nodeType": "Block",
																"src": "1360:46:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1428,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1390,
																				"src": "1378:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1429,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1409,
																					"src": "1384:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1430,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1433,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:5"
																	}
																]
															},
															"id": 1435,
															"nodeType": "IfStatement",
															"src": "1265:141:5",
															"trueBody": {
																"id": 1427,
																"nodeType": "Block",
																"src": "1311:43:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1423,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1394,
																				"src": "1329:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1424,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1336:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1426,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1405,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "981:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1406,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "987:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "WhileStatement",
												"src": "974:442:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1438,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "1533:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1442,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "1557:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1443,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "1564:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1441,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1482,
																		1503,
																		1524
																	],
																	"referencedDeclaration": 1524,
																	"src": "1544:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1670_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1670_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1669,
															"src": "1544:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1448,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "1582:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "1636:35:5",
													"statements": [
														{
															"expression": {
																"id": 1456,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "1657:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1388,
															"id": 1457,
															"nodeType": "Return",
															"src": "1650:10:5"
														}
													]
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "1529:142:5",
												"trueBody": {
													"id": 1455,
													"nodeType": "Block",
													"src": "1591:39:5",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1451,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "1612:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1388,
															"id": 1454,
															"nodeType": "Return",
															"src": "1605:14:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:5",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "769:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1380,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1381,
													"nodeType": "ArrayTypeName",
													"src": "769:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "794:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:5"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "834:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:5"
									},
									"scope": 1551,
									"src": "745:932:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "1993:459:5",
										"statements": [
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "2003:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1473,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:5"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:5",
													"nodeType": "YulBlock",
													"src": "2316:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:5"
																},
																"nativeSrc": "2330:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:5"
															},
															"nativeSrc": "2330:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:5"
														},
														{
															"nativeSrc": "2362:36:5",
															"nodeType": "YulAssignment",
															"src": "2362:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:5"
																		},
																		"nativeSrc": "2374:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:5"
																},
																"nativeSrc": "2370:28:5",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:5",
														"valueSize": 1
													}
												],
												"id": 1476,
												"nodeType": "InlineAssembly",
												"src": "2307:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1477,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "2424:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:5",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1687,
														"src": "2424:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1661_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1661_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1480,
												"nodeType": "Return",
												"src": "2417:28:5"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1901:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1463,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1464,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1924:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1960:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1661_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1469,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:5",
															"1972:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1661,
														"src": "1960:23:5"
													},
													"referencedDeclaration": 1661,
													"src": "1960:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1661_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:5"
									},
									"scope": 1551,
									"src": "1879:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "2768:459:5",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "2778:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1494,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:5"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:5",
													"nodeType": "YulBlock",
													"src": "3091:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:5"
																},
																"nativeSrc": "3105:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:5"
															},
															"nativeSrc": "3105:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:5"
														},
														{
															"nativeSrc": "3137:36:5",
															"nodeType": "YulAssignment",
															"src": "3137:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:5"
																		},
																		"nativeSrc": "3149:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:5"
																},
																"nativeSrc": "3145:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1486,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1488,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1495,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:5",
														"valueSize": 1
													}
												],
												"id": 1497,
												"nodeType": "InlineAssembly",
												"src": "3082:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1498,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "3199:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:5",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1709,
														"src": "3199:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1667_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1667_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1501,
												"nodeType": "Return",
												"src": "3192:28:5"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2676:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1484,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1485,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2699:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:5"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2735:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1667_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1490,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:5",
															"2747:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1667,
														"src": "2735:23:5"
													},
													"referencedDeclaration": 1667,
													"src": "2735:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1667_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:5"
									},
									"scope": 1551,
									"src": "2654:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "3543:459:5",
										"statements": [
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "3553:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1515,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:5"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:5",
													"nodeType": "YulBlock",
													"src": "3866:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:5"
																},
																"nativeSrc": "3880:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:5"
															},
															"nativeSrc": "3880:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:5"
														},
														{
															"nativeSrc": "3912:36:5",
															"nodeType": "YulAssignment",
															"src": "3912:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:5"
																		},
																		"nativeSrc": "3924:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:5"
																},
																"nativeSrc": "3920:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1507,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1516,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:5",
														"valueSize": 1
													}
												],
												"id": 1518,
												"nodeType": "InlineAssembly",
												"src": "3857:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1519,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "3974:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:5",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1720,
														"src": "3974:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1670_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1670_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1522,
												"nodeType": "Return",
												"src": "3967:28:5"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3451:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1505,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1506,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3474:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3510:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1670_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1511,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:5",
															"3522:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1670,
														"src": "3510:23:5"
													},
													"referencedDeclaration": 1670,
													"src": "3510:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1670_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:5"
									},
									"scope": 1551,
									"src": "3429:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "4303:98:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:5",
													"nodeType": "YulBlock",
													"src": "4322:73:5",
													"statements": [
														{
															"nativeSrc": "4336:49:5",
															"nodeType": "YulAssignment",
															"src": "4336:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:5"
																				},
																				"nativeSrc": "4353:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:5"
																				},
																				"nativeSrc": "4369:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:5"
																		},
																		"nativeSrc": "4349:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:5"
																},
																"nativeSrc": "4343:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:5"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:5"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1528,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1530,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:5",
														"valueSize": 1
													}
												],
												"id": 1535,
												"nodeType": "InlineAssembly",
												"src": "4313:82:5"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4232:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1526,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1527,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4254:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:5"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4290:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:5"
									},
									"scope": 1551,
									"src": "4204:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "4702:98:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:5",
													"nodeType": "YulBlock",
													"src": "4721:73:5",
													"statements": [
														{
															"nativeSrc": "4735:49:5",
															"nodeType": "YulAssignment",
															"src": "4735:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:5"
																				},
																				"nativeSrc": "4752:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:5"
																				},
																				"nativeSrc": "4768:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:5"
																		},
																		"nativeSrc": "4748:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:5"
																},
																"nativeSrc": "4742:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:5"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:5"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1541,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1543,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1546,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:5",
														"valueSize": 1
													}
												],
												"id": 1548,
												"nodeType": "InlineAssembly",
												"src": "4712:82:5"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4631:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1539,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1540,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4653:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4689:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:5"
									},
									"scope": 1551,
									"src": "4603:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1552,
							"src": "276:4526:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1581
						]
					},
					"id": 1582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1554,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1581,
							"linearizedBaseContracts": [
								1581
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1581,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1568,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1570,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1581,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1576,
												"id": 1578,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1581,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1582,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1655
						]
					},
					"id": 1656,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1584,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:7",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1655,
							"linearizedBaseContracts": [
								1655
							],
							"name": "Counters",
							"nameLocation": "432:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1587,
									"members": [
										{
											"constant": false,
											"id": 1586,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1587,
											"src": "786:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1585,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:7",
									"nodeType": "StructDefinition",
									"scope": 1655,
									"src": "447:374:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "901:38:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1595,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "918:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:7",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1586,
													"src": "918:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1594,
												"id": 1597,
												"nodeType": "Return",
												"src": "911:21:7"
											}
										]
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "844:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1588,
														"name": "Counter",
														"nameLocations": [
															"844:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "844:7:7"
													},
													"referencedDeclaration": 1587,
													"src": "844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:7"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "892:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:7"
									},
									"scope": 1655,
									"src": "827:112:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "998:70:7",
										"statements": [
											{
												"id": 1611,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:7",
												"statements": [
													{
														"expression": {
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1605,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "1032:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:7",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1586,
																"src": "1032:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1610,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:7"
													}
												]
											}
										]
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "964:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1600,
														"name": "Counter",
														"nameLocations": [
															"964:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "964:7:7"
													},
													"referencedDeclaration": 1587,
													"src": "964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:7"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:7"
									},
									"scope": 1655,
									"src": "945:123:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "1127:176:7",
										"statements": [
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1640,
														"src": "1137:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"expression": {
														"id": 1621,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "1153:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:7",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1586,
													"src": "1153:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1625,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "1185:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:7"
											},
											{
												"id": 1639,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:7",
												"statements": [
													{
														"expression": {
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1631,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "1260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:7",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1586,
																"src": "1260:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1634,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "1277:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1638,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:7"
													}
												]
											}
										]
									},
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "1093:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1615,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1614,
														"name": "Counter",
														"nameLocations": [
															"1093:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "1093:7:7"
													},
													"referencedDeclaration": 1587,
													"src": "1093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:7"
									},
									"scope": 1655,
									"src": "1074:229:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "1358:35:7",
										"statements": [
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1647,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "1368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:7",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1586,
														"src": "1368:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:7"
											}
										]
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1324:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1642,
														"name": "Counter",
														"nameLocations": [
															"1324:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "1324:7:7"
													},
													"referencedDeclaration": 1587,
													"src": "1324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:7"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:7"
									},
									"scope": 1655,
									"src": "1309:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1656,
							"src": "424:971:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1765
						]
					},
					"id": 1766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1657,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1658,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1765,
							"linearizedBaseContracts": [
								1765
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1661,
									"members": [
										{
											"constant": false,
											"id": 1660,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1661,
											"src": "1300:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1659,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:8",
									"nodeType": "StructDefinition",
									"scope": 1765,
									"src": "1271:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1664,
									"members": [
										{
											"constant": false,
											"id": 1663,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1664,
											"src": "1355:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1662,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:8",
									"nodeType": "StructDefinition",
									"scope": 1765,
									"src": "1326:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1667,
									"members": [
										{
											"constant": false,
											"id": 1666,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1667,
											"src": "1407:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1665,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:8",
									"nodeType": "StructDefinition",
									"scope": 1765,
									"src": "1378:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1670,
									"members": [
										{
											"constant": false,
											"id": 1669,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1670,
											"src": "1462:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1668,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:8",
									"nodeType": "StructDefinition",
									"scope": 1765,
									"src": "1433:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1673,
									"members": [
										{
											"constant": false,
											"id": 1672,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1673,
											"src": "1516:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1671,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:8",
									"nodeType": "StructDefinition",
									"scope": 1765,
									"src": "1488:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1676,
									"members": [
										{
											"constant": false,
											"id": 1675,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1676,
											"src": "1568:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1674,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:8",
									"nodeType": "StructDefinition",
									"scope": 1765,
									"src": "1541:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "1768:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:8",
													"nodeType": "YulBlock",
													"src": "1830:38:8",
													"statements": [
														{
															"nativeSrc": "1844:14:8",
															"nodeType": "YulAssignment",
															"src": "1844:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:8",
																"nodeType": "YulIdentifier",
																"src": "1854:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1683,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1679,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:8",
														"valueSize": 1
													}
												],
												"id": 1685,
												"nodeType": "InlineAssembly",
												"src": "1821:47:8"
											}
										]
									},
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1708:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1678,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:8"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1745:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1661_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1681,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1661,
														"src": "1745:11:8"
													},
													"referencedDeclaration": 1661,
													"src": "1745:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1661_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:8"
									},
									"scope": 1765,
									"src": "1684:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "2056:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:8",
													"nodeType": "YulBlock",
													"src": "2118:38:8",
													"statements": [
														{
															"nativeSrc": "2132:14:8",
															"nodeType": "YulAssignment",
															"src": "2132:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:8",
																"nodeType": "YulIdentifier",
																"src": "2142:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1690,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:8",
														"valueSize": 1
													}
												],
												"id": 1696,
												"nodeType": "InlineAssembly",
												"src": "2109:47:8"
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "1996:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:8"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2033:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1664_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1692,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1664,
														"src": "2033:11:8"
													},
													"referencedDeclaration": 1664,
													"src": "2033:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1664_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:8"
									},
									"scope": 1765,
									"src": "1972:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "2344:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:8",
													"nodeType": "YulBlock",
													"src": "2406:38:8",
													"statements": [
														{
															"nativeSrc": "2420:14:8",
															"nodeType": "YulAssignment",
															"src": "2420:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:8",
																"nodeType": "YulIdentifier",
																"src": "2430:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1705,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1701,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:8",
														"valueSize": 1
													}
												],
												"id": 1707,
												"nodeType": "InlineAssembly",
												"src": "2397:47:8"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "2284:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1700,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:8"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "2321:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1667_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1703,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1667,
														"src": "2321:11:8"
													},
													"referencedDeclaration": 1667,
													"src": "2321:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1667_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:8"
									},
									"scope": 1765,
									"src": "2260:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "2632:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:8",
													"nodeType": "YulBlock",
													"src": "2694:38:8",
													"statements": [
														{
															"nativeSrc": "2708:14:8",
															"nodeType": "YulAssignment",
															"src": "2708:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:8",
																"nodeType": "YulIdentifier",
																"src": "2718:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1716,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1712,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:8",
														"valueSize": 1
													}
												],
												"id": 1718,
												"nodeType": "InlineAssembly",
												"src": "2685:47:8"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "2572:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:8"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "2609:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1670_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1714,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1670,
														"src": "2609:11:8"
													},
													"referencedDeclaration": 1670,
													"src": "2609:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1670_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:8"
									},
									"scope": 1765,
									"src": "2548:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "2917:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:8",
													"nodeType": "YulBlock",
													"src": "2979:38:8",
													"statements": [
														{
															"nativeSrc": "2993:14:8",
															"nodeType": "YulAssignment",
															"src": "2993:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:8",
																"nodeType": "YulIdentifier",
																"src": "3003:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1727,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1723,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:8",
														"valueSize": 1
													}
												],
												"id": 1729,
												"nodeType": "InlineAssembly",
												"src": "2970:47:8"
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:8"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2895:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1673_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1725,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1673,
														"src": "2895:10:8"
													},
													"referencedDeclaration": 1673,
													"src": "2895:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1673_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:8"
									},
									"scope": 1765,
									"src": "2835:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "3225:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:8",
													"nodeType": "YulBlock",
													"src": "3287:44:8",
													"statements": [
														{
															"nativeSrc": "3301:20:8",
															"nodeType": "YulAssignment",
															"src": "3301:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:8",
																"nodeType": "YulIdentifier",
																"src": "3311:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1740,
												"nodeType": "InlineAssembly",
												"src": "3278:53:8"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3158:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1733,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:8"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3203:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1673_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1736,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1673,
														"src": "3203:10:8"
													},
													"referencedDeclaration": 1673,
													"src": "3203:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1673_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:8"
									},
									"scope": 1765,
									"src": "3135:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "3513:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:8",
													"nodeType": "YulBlock",
													"src": "3575:38:8",
													"statements": [
														{
															"nativeSrc": "3589:14:8",
															"nodeType": "YulAssignment",
															"src": "3589:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:8",
																"nodeType": "YulIdentifier",
																"src": "3599:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1749,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1745,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													}
												],
												"id": 1751,
												"nodeType": "InlineAssembly",
												"src": "3566:47:8"
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "3455:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:8"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "3492:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1676_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1748,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1747,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1676,
														"src": "3492:9:8"
													},
													"referencedDeclaration": 1676,
													"src": "3492:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1676_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:8"
									},
									"scope": 1765,
									"src": "3433:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "3816:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:8",
													"nodeType": "YulBlock",
													"src": "3878:44:8",
													"statements": [
														{
															"nativeSrc": "3892:20:8",
															"nodeType": "YulAssignment",
															"src": "3892:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:8",
																"nodeType": "YulIdentifier",
																"src": "3902:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1760,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1762,
												"nodeType": "InlineAssembly",
												"src": "3869:53:8"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "3751:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "3795:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1676_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1758,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1676,
														"src": "3795:9:8"
													},
													"referencedDeclaration": 1676,
													"src": "3795:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1676_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:8"
									},
									"scope": 1765,
									"src": "3729:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1766,
							"src": "1245:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1789
						],
						"IERC165": [
							1801
						]
					},
					"id": 1790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1767,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1769,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1790,
							"sourceUnit": 1802,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1768,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1801,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1771,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1801,
										"src": "687:7:9"
									},
									"id": 1772,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1770,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1789,
							"linearizedBaseContracts": [
								1789,
								1801
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1780,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1782,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1801_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1801_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1781,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1801",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1779,
												"id": 1786,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1774,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 1789,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1790,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1801
						]
					},
					"id": 1802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1792,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1801,
							"linearizedBaseContracts": [
								1801
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 1801,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1802,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2855
						]
					},
					"id": 2856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1803,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1804,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2855,
							"linearizedBaseContracts": [
								2855
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1807,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1812,
									"members": [
										{
											"id": 1808,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 1809,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 1810,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 1811,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 1842,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															1825
														],
														"declarations": [
															{
																"constant": false,
																"id": 1825,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1842,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1824,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1829,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1826,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1830,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1831,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1837,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1823,
															"id": 1836,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1839,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1840,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1823,
														"id": 1841,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 2855,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 1870,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1856,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1857,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1863,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1861,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1855,
															"id": 1862,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1865,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1866,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1849,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1868,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1855,
														"id": 1869,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 2855,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1884,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1891,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1889,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1883,
															"id": 1890,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															1893
														],
														"declarations": [
															{
																"constant": false,
																"id": 1893,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1912,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1892,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1897,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1894,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1895,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1898,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1899,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1907,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1905,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1883,
															"id": 1906,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1909,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1910,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1883,
														"id": 1911,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 2855,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 1940,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1926,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1933,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1925,
															"id": 1932,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1935,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1917,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1936,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1938,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1925,
														"id": 1939,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 2855,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 1968,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1954,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1961,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1959,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1953,
															"id": 1960,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1963,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1945,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1964,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1966,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1953,
														"id": 1967,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 2855,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1980,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1981,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1984,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 1983,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1979,
												"id": 1986,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 2855,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1998,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1999,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2002,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2001,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1991,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1997,
												"id": 2004,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 2855,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2016,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2017,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2019,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2020,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2009,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2021,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2023,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2015,
												"id": 2027,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 2855,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2039,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2046,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2042,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2043,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2038,
															"id": 2045,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2048,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2052,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2032,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2055,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2056,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2061,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 2855,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2187,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2076
														],
														"declarations": [
															{
																"constant": false,
																"id": 2076,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2075,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2080,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2077,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2066,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2078,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2082
														],
														"declarations": [
															{
																"constant": false,
																"id": 2082,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2083,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2066,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2084,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2085,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2093,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2092,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2088,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2089,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2070,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2074,
																	"id": 2091,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2094,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2095,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2101,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2100,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2097,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2099,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2103
														],
														"declarations": [
															{
																"constant": false,
																"id": 2103,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2104,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2070,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2103,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2103,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2103,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2066,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2105,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2107
														],
														"declarations": [
															{
																"constant": false,
																"id": 2107,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2106,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2114,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2108,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2110,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2070,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2112,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2070,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2070,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2076,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2107,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2107,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2107,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2107,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2107,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2115,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2116,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2117,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2118,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2121,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2123
														],
														"declarations": [
															{
																"constant": false,
																"id": 2123,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2187,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2122,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2130,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2125,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2070,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2127,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2133,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2134,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2139,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2142,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2146,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2147,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2149,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2150,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2157,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2158,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2163,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2165,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2166,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2170,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2171,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2173,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2174,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2178,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2179,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2180,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2181,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2184,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2185,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2074,
														"id": 2186,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 2855,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2205
												],
												"declarations": [
													{
														"constant": false,
														"id": 2205,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2231,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2211,
												"initialValue": {
													"arguments": [
														{
															"id": 2207,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2208,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2209,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2206,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2189,
															2232
														],
														"referencedDeclaration": 2189,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2213,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1812",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1812",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2212,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2854,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1812_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2216,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2192,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2217,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2218,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2215,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2228,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2227,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2223,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2226,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2229,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2205,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2203,
												"id": 2230,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2197,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1812,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 1812,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 2855,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2343,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2246,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2245,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2239,
															"id": 2244,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2248
												],
												"declarations": [
													{
														"constant": false,
														"id": 2248,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2343,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2257,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2251,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2250,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2511,
																			2546
																		],
																		"referencedDeclaration": 2511,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2342,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2258,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2259,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2248,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2260,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2235,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2261,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2264,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2268,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2269,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2270,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2248,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2271,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2235,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2272,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2275,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2279,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2280,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2281,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2248,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2282,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2235,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2283,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2286,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2290,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2291,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2292,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2248,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2293,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2235,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2294,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2297,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2301,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2302,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2303,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2248,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2304,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2235,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2305,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2308,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2312,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2313,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2314,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2248,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2315,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2235,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2316,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2319,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2323,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2324,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2325,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2248,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2326,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2235,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2327,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2330,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2334,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2336,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2337,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2235,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2338,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2248,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2335,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2239,
														"id": 2341,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 2855,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2378,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2377,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2356
														],
														"declarations": [
															{
																"constant": false,
																"id": 2356,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2377,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2355,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2360,
														"initialValue": {
															"arguments": [
																{
																	"id": 2358,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2347,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2357,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2344,
																	2379
																],
																"referencedDeclaration": 2344,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2361,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2363,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2350,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1812",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1812",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2362,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2854,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1812_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2365,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2356,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2366,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2356,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2368,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2347,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2374,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2354,
														"id": 2376,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2345,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2348,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1812,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 1812,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 2855,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2510,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2388
												],
												"declarations": [
													{
														"constant": false,
														"id": 2388,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2510,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2390,
												"initialValue": {
													"hexValue": "30",
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2507,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2405,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2404,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2396,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2399,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2400,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2403,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2406,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2420,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2419,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2411,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2414,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2415,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2418,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2421,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2435,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2434,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2426,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2429,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2430,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2433,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2436,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2450,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2449,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2441,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2444,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2445,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2448,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2465,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2464,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2456,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2459,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2460,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2463,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2466,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2479,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2471,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2474,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2475,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2478,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2495,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2494,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2486,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2489,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2490,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2493,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2496,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2506,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2505,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2501,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2504,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2508,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2388,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2386,
												"id": 2509,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2380,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 2855,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2544,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2523
														],
														"declarations": [
															{
																"constant": false,
																"id": 2523,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2544,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2522,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2527,
														"initialValue": {
															"arguments": [
																{
																	"id": 2525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2524,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2511,
																	2546
																],
																"referencedDeclaration": 2511,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2528,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2523,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2530,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2517,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1812",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1812",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2529,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2854,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1812_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2532,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2533,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2523,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2535,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2514,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2521,
														"id": 2543,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2512,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2515,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1812,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 1812,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 2855,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2674,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2555
												],
												"declarations": [
													{
														"constant": false,
														"id": 2555,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2674,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2557,
												"initialValue": {
													"hexValue": "30",
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2671,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2558,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2574,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2573,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2563,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2568,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2569,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2572,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2575,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2591,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2590,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2580,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2585,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2592,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2608,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2607,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2597,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2602,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2603,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2606,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2609,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2625,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2624,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2614,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2619,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2620,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2623,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2626,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2642,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2641,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2631,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2636,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2637,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2640,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2643,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2659,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2658,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2648,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2653,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2654,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2657,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2660,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2669,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2672,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2555,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2553,
												"id": 2673,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2547,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 2855,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2709,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2708,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2687
														],
														"declarations": [
															{
																"constant": false,
																"id": 2687,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2708,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2691,
														"initialValue": {
															"arguments": [
																{
																	"id": 2689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2678,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2688,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2675,
																	2710
																],
																"referencedDeclaration": 2675,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2692,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2687,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2694,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2681,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1812",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1812",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2693,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2854,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1812_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2698,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2696,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2697,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2687,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2699,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2678,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2705,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2685,
														"id": 2707,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2676,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2680,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2679,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1812,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 1812,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 2855,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2719
												],
												"declarations": [
													{
														"constant": false,
														"id": 2719,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2796,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2721,
												"initialValue": {
													"hexValue": "30",
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 2793,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2736,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2735,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2727,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2730,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2734,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2737,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2751,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 2750,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2742,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2745,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2746,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2749,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2752,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2766,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 2765,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2761,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2764,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2767,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2781,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 2780,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2772,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2775,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2776,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2779,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2792,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 2791,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2787,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2794,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2719,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2717,
												"id": 2795,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2711,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 2855,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 2833,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															2809
														],
														"declarations": [
															{
																"constant": false,
																"id": 2809,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2833,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2813,
														"initialValue": {
															"arguments": [
																{
																	"id": 2811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2800,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2810,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2797,
																	2835
																],
																"referencedDeclaration": 2797,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2816,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2803,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1812",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1812",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2815,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2854,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1812_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2821,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2819,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2809,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2820,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2822,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2824,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2800,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2830,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2807,
														"id": 2832,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2801,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1812,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 1812,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 2855,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2853,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2846,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1812",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1812",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2844,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2843,
												"id": 2852,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2838,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2837,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1812,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 1812,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 2855,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2856,
							"src": "203:14914:11",
							"usedErrors": [
								1807
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"contracts/task2.sol": {
				"ast": {
					"absolutePath": "contracts/task2.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Context": [
							1581
						],
						"Counters": [
							1655
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1789
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1368
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1801
						],
						"MyERC1155": [
							2969
						]
					},
					"id": 2970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2857,
							"literals": [
								"solidity",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2970,
							"sourceUnit": 1188,
							"src": "60:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 2859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2970,
							"sourceUnit": 1656,
							"src": "121:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2860,
										"name": "ERC1155",
										"nameLocations": [
											"199:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "199:7:12"
									},
									"id": 2861,
									"nodeType": "InheritanceSpecifier",
									"src": "199:7:12"
								}
							],
							"canonicalName": "MyERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2969,
							"linearizedBaseContracts": [
								2969,
								1187,
								136,
								1368,
								1310,
								1789,
								1801,
								1581
							],
							"name": "MyERC1155",
							"nameLocation": "186:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2865,
									"libraryName": {
										"id": 2862,
										"name": "Counters",
										"nameLocations": [
											"220:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1655,
										"src": "220:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "214:36:12",
									"typeName": {
										"id": 2864,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2863,
											"name": "Counters.Counter",
											"nameLocations": [
												"233:8:12",
												"242:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1587,
											"src": "233:16:12"
										},
										"referencedDeclaration": 1587,
										"src": "233:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2868,
									"mutability": "mutable",
									"name": "_nonFungibleTokenIds",
									"nameLocation": "281:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 2969,
									"src": "256:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1587_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2867,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2866,
											"name": "Counters.Counter",
											"nameLocations": [
												"256:8:12",
												"265:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1587,
											"src": "256:16:12"
										},
										"referencedDeclaration": 1587,
										"src": "256:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1587_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2872,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "345:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2969,
									"src": "310:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2871,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2869,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "318:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "310:26:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2870,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "329:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2878,
										"nodeType": "Block",
										"src": "420:2:12",
										"statements": []
									},
									"id": 2879,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f697066732e696f2f697066732f7b69647d2e6a736f6e",
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "386:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fd7dcc4102bafc4bc5152d58c686ee6eebd6f4bcad6e22ac8ccfb164c4f1993e",
														"typeString": "literal_string \"https://ipfs.io/ipfs/{id}.json\""
													},
													"value": "https://ipfs.io/ipfs/{id}.json"
												}
											],
											"id": 2876,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2874,
												"name": "ERC1155",
												"nameLocations": [
													"378:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "378:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "378:41:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "375:2:12"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "420:0:12"
									},
									"scope": 2969,
									"src": "364:58:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2895,
										"nodeType": "Block",
										"src": "506:49:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2889,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2881,
															"src": "523:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2890,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2883,
															"src": "532:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2891,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2885,
															"src": "536:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "544:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2888,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "517:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "517:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2894,
												"nodeType": "ExpressionStatement",
												"src": "517:30:12"
											}
										]
									},
									"functionSelector": "58ea82e6",
									"id": 2896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintFungible",
									"nameLocation": "439:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "460:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "452:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "477:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "469:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "469:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "489:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "481:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:45:12"
									},
									"returnParameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:0:12"
									},
									"scope": 2969,
									"src": "430:125:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2930,
										"nodeType": "Block",
										"src": "656:222:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2905,
															"name": "_nonFungibleTokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "667:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1587_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2907,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "688:9:12",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1613,
														"src": "667:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1587_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1587_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2909,
												"nodeType": "ExpressionStatement",
												"src": "667:32:12"
											},
											{
												"assignments": [
													2911
												],
												"declarations": [
													{
														"constant": false,
														"id": 2911,
														"mutability": "mutable",
														"name": "newId",
														"nameLocation": "718:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2930,
														"src": "710:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "710:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2915,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2912,
															"name": "_nonFungibleTokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "726:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1587_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2913,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "747:7:12",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1599,
														"src": "726:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1587_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1587_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "726:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "710:46:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2898,
															"src": "783:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2918,
															"name": "newId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2911,
															"src": "792:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "799:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "802:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2916,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "777:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "777:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2922,
												"nodeType": "ExpressionStatement",
												"src": "777:28:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2924,
															"name": "newId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2911,
															"src": "829:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2925,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "836:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2923,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2945,
														"src": "816:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "816:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2927,
												"nodeType": "ExpressionStatement",
												"src": "816:29:12"
											},
											{
												"expression": {
													"id": 2928,
													"name": "newId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2911,
													"src": "865:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2904,
												"id": 2929,
												"nodeType": "Return",
												"src": "858:12:12"
											}
										]
									},
									"functionSelector": "07805a6b",
									"id": 2931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNonFungible",
									"nameLocation": "572:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "596:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "588:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "619:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "605:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "605:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:41:12"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "647:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:12"
									},
									"scope": 2969,
									"src": "563:315:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2944,
										"nodeType": "Block",
										"src": "959:50:12",
										"statements": [
											{
												"expression": {
													"id": 2942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2938,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2872,
															"src": "970:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2940,
														"indexExpression": {
															"id": 2939,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "981:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "970:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2941,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2935,
														"src": "992:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "970:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2943,
												"nodeType": "ExpressionStatement",
												"src": "970:31:12"
											}
										]
									},
									"id": 2945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "895:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "916:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "908:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "939:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "925:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2934,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "925:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:42:12"
									},
									"returnParameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:12"
									},
									"scope": 2969,
									"src": "886:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										239
									],
									"body": {
										"id": 2967,
										"nodeType": "Block",
										"src": "1092:91:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2959,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2947,
																			"src": "1144:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2957,
																			"name": "super",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967271,
																			"src": "1134:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_super$_MyERC1155_$2969_$",
																				"typeString": "type(contract super MyERC1155)"
																			}
																		},
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1140:3:12",
																		"memberName": "uri",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 239,
																		"src": "1134:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) view returns (string memory)"
																		}
																	},
																	"id": 2960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1134:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"baseExpression": {
																		"id": 2961,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2872,
																		"src": "1154:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 2963,
																	"indexExpression": {
																		"id": 2962,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2947,
																		"src": "1165:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1154:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"expression": {
																	"id": 2955,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1117:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1121:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1117:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1117:57:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1110:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2953,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1110:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1110:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2952,
												"id": 2966,
												"nodeType": "Return",
												"src": "1103:72:12"
											}
										]
									},
									"functionSelector": "0e89341c",
									"id": 2968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1026:3:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2949,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1059:8:12"
									},
									"parameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1038:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "1030:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:17:12"
									},
									"returnParameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "1077:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1077:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:15:12"
									},
									"scope": 2969,
									"src": "1017:166:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2970,
							"src": "177:1009:12",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "33:1155:12"
				},
				"id": 12
			}
		}
	}
}